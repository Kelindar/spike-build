// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Spike.Build.JavaScript
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class JavaScriptTemplate : JavaScriptTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n\r\n");
            
            #line 9 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "ByteArray") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("if(typeof spike === \'undefined\')\r\n\tspike = new Object();\r\n\r\n// Whether we should " +
                    "or not use native binary support\r\nspike.binarySupport =  ((typeof Uint8Array !==" +
                    " \'undefined\') && (typeof DataView !== \'undefined\'));\r\nspike.ByteArray = function" +
                    "(bytes){\r\n\tthis.position = 0;\r\n\tthis.bigEndian = true;\r\n\tthis.allowExceptions = " +
                    "true;\r\n\r\n\tif(spike.binarySupport)\r\n\t{\r\n\t\tthis.data  = new ArrayBuffer(0);\r\n\t\tthi" +
                    "s._size = this._maxSize = this.data.byteLength;\r\n\t\tthis.view  = new DataView(thi" +
                    "s.data);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthis.data = [];\r\n\t}\r\n};\r\nwith({p: spike.ByteArray.pro" +
                    "totype}){\r\n\r\n\t/* Ensures the capacity for n bytes in this array, resizes if nece" +
                    "ssary */\r\n\tp.ensureCapacity = function(length) {\r\n\t\tif(this._maxSize > this.posi" +
                    "tion + length)\r\n\t\t\treturn;\r\n\r\n\t\t// Resize by 1024 and build a data view\r\n\t\tvar b" +
                    "aseArrayBuffer = this.data;\r\n\t\tvar newByteSize = this._maxSize + Math.max(1024, " +
                    "length);\r\n\t\tvar resizedArrayBuffer = new ArrayBuffer(newByteSize),\r\n\t\t\tlen = bas" +
                    "eArrayBuffer.byteLength,\r\n\t\t\tresizeLen = (len > newByteSize)? newByteSize : len;" +
                    "\r\n\r\n\t\t\t(new Uint8Array(resizedArrayBuffer, 0, resizeLen)).set(new Uint8Array(bas" +
                    "eArrayBuffer, 0, resizeLen));\r\n\r\n\t\tthis.data = resizedArrayBuffer;\r\n\t\tthis.view " +
                    "= new DataView(this.data);\r\n\t\tthis._maxSize = newByteSize; \r\n\t};\r\n\r\n\r\n\t/* Writes" +
                    " a floating-point value to the underlying buffer. */\r\n\tp.string_writeFloat = fun" +
                    "ction(number, precisionBits, exponentBits){\r\n\t\tvar bias = Math.pow(2, exponentBi" +
                    "ts - 1) - 1, minExp = -bias + 1, maxExp = bias, minUnnormExp = minExp - precisio" +
                    "nBits,\r\n\t\tstatus = isNaN(n = parseFloat(number)) || n == -Infinity || n == +Infi" +
                    "nity ? n : 0,\r\n\t\texp = 0, len = 2 * bias + 1 + precisionBits + 3, bin = new Arra" +
                    "y(len),\r\n\t\tsignal = (n = status !== 0 ? 0 : n) < 0, n = Math.abs(n), intPart = M" +
                    "ath.floor(n), floatPart = n - intPart,\r\n\t\ti, lastBit, rounded, j, result;\r\n\t\tfor" +
                    "(i = len; i; bin[--i] = 0);\r\n\t\tfor(i = bias + 2; intPart && i; bin[--i] = intPar" +
                    "t % 2, intPart = Math.floor(intPart / 2));\r\n\t\tfor(i = bias + 1; floatPart > 0 &&" +
                    " i; (bin[++i] = ((floatPart *= 2) >= 1) - 0) && --floatPart);\r\n\t\tfor(i = -1; ++i" +
                    " < len && !bin[i];);\r\n\t\tif(bin[(lastBit = precisionBits - 1 + (i = (exp = bias +" +
                    " 1 - i) >= minExp && exp <= maxExp ? i + 1 : bias + 1 - (exp = minExp - 1))) + 1" +
                    "]){\r\n\t\t\tif(!(rounded = bin[lastBit]))\r\n\t\t\t\tfor(j = lastBit + 2; !rounded && j < " +
                    "len; rounded = bin[j++]);\r\n\t\t\tfor(j = lastBit + 1; rounded && --j >= 0; (bin[j] " +
                    "= !bin[j] - 0) && (rounded = 0));\r\n\t\t}\r\n\t\tfor(i = i - 2 < 0 ? -1 : i - 3; ++i < " +
                    "len && !bin[i];);\r\n\r\n\t\t(exp = bias + 1 - i) >= minExp && exp <= maxExp ? ++i : e" +
                    "xp < minExp &&\r\n\t\t\t(exp != bias + 1 - len && exp < minUnnormExp && this.warn(\'en" +
                    "codeFloat::float underflow\'), i = bias + 1 - (exp = minExp - 1));\r\n\t\t(intPart ||" +
                    " status !== 0) && (this.warn(intPart ? \'encodeFloat::float overflow\' : \'encodeFl" +
                    "oat::\' + status),\r\n\t\t\texp = maxExp + 1, i = bias + 2, status == -Infinity ? sign" +
                    "al = 1 : isNaN(status) && (bin[i] = 1));\r\n\t\tfor(n = Math.abs(exp + bias), j = ex" +
                    "ponentBits + 1, result = \'\'; --j; result = (n % 2) + result, n = n >>= 1);\r\n\t\tfo" +
                    "r(n = 0, j = 0, i = (result = (signal ? \'1\' : \'0\') + result + bin.slice(i, i + p" +
                    "recisionBits).join(\'\')).length, r = [];\r\n\t\t\ti; n += (1 << j) * result.charAt(--i" +
                    "), j == 7 && (r[r.length] = String.fromCharCode(n), n = 0), j = (j + 1) % 8);\r\n\t" +
                    "\tr[r.length] = n ? String.fromCharCode(n) : \'\';\r\n\t\tthis.data += (this.bigEndian " +
                    "? r.reverse() : r).join(\'\');\r\n\t};\r\n\r\n\t/* Writes a floating-point value to the un" +
                    "derlying buffer. */\r\n\tp.native_writeFloat = function(number, precisionBits, expo" +
                    "nentBits){\r\n\t\tvar bits = precisionBits + exponentBits + 1;\r\n\t\tthis.ensureCapacit" +
                    "y(bits / 8);\r\n\t\tswitch(bits)\r\n\t\t{\r\n\t\t\tcase 32:\r\n\t\t\t\tthis.view.setFloat32(this.po" +
                    "sition, number, !this.bigEndian);\r\n\t\t\t\tthis.position += 4;\r\n\t\t\t\tthis._size += 4;" +
                    "\r\n\t\t\t\treturn;\r\n\r\n\t\t\tcase 64:\r\n\t\t\t\tthis.view.setFloat64(this.position, number, !t" +
                    "his.bigEndian);\r\n\t\t\t\tthis.position += 8;\r\n\t\t\t\tthis._size += 8;\r\n\t\t\t\treturn;\r\n\t\t}" +
                    "\r\n\t};\r\n\r\n\t/* Writes a floating-point value to the underlying buffer. */\r\n\tp.writ" +
                    "eFloat = spike.binarySupport ? p.native_writeFloat : p.string_writeFloat;\r\n\r\n\t/*" +
                    " Writes a integral value to the underlying buffer. */\r\n\tp.string_writeInt = func" +
                    "tion(number, bits, signed){\r\n\t    var max = Math.pow(2, bits), r = [];\r\n\t    var" +
                    " maxs = Math.pow(2, bits - 1);\r\n\t\t(signed && (number >= maxs || number < -maxs))" +
                    " && this.warn(\'writeInt::overflow\') && (number = 0);\r\n\t\t(!signed && (number >= m" +
                    "ax || (number < -(max >> 1)))) && this.warn(\'writeUInt::overflow\') && (number = " +
                    "0);\r\n\t\tnumber < 0 && (number += max);\r\n\t\tfor(; number; r[r.length] = String.from" +
                    "CharCode(number % 256), number = Math.floor(number / 256));\r\n\t\tfor(bits = -(-bit" +
                    "s >> 3) - r.length; bits--; r[r.length] = \'\\0\');\r\n\t\tthis.data += (this.bigEndian" +
                    " ? r.reverse() : r).join(\'\');\r\n\t};\r\n\r\n\t/* Writes a integral value to the underly" +
                    "ing buffer. */\r\n\tp.native_writeInt = function(number, bits, signed){\r\n\t\tthis.ens" +
                    "ureCapacity(bits / 8);\r\n\t\tif(signed)\r\n\t\t{\r\n\t\t\tswitch(bits)\r\n\t\t\t{\r\n\t\t\t\tcase 8:\r\n\t" +
                    "\t\t\t\tthis.view.setInt8(this.position, number);\r\n\t\t\t\t\tthis.position += 1;\r\n\t\t\t\t\tth" +
                    "is._size += 1;\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tthis.view.setInt16(this.posit" +
                    "ion, number, !this.bigEndian);\r\n\t\t\t\t\tthis.position += 2;\r\n\t\t\t\t\tthis._size += 2;\r" +
                    "\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\tthis.view.setInt32(this.position, number, !t" +
                    "his.bigEndian);\r\n\t\t\t\t\tthis.position += 4;\r\n\t\t\t\t\tthis._size += 4;\r\n\t\t\t\t\treturn;\r\n" +
                    "\r\n\t\t\t\tcase 64:\r\n\t\t\t\t\tthrow new Error(\"Int64 is not supported in JavaScript.\")\r\n\t" +
                    "\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tswitch(bits)\r\n\t\t\t{\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tthis.view.setUin" +
                    "t8(this.position, number);\r\n\t\t\t\t\tthis.position += 1;\r\n\t\t\t\t\tthis._size += 1;\r\n\t\t\t" +
                    "\t\treturn;\r\n\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tthis.view.setUint16(this.position, number, !this" +
                    ".bigEndian);\r\n\t\t\t\t\tthis.position += 2;\r\n\t\t\t\t\tthis._size += 2;\r\n\t\t\t\t\treturn;\r\n\r\n\t" +
                    "\t\t\tcase 32:\r\n\t\t\t\t\tthis.view.setUint32(this.position, number, !this.bigEndian);\r\n" +
                    "\t\t\t\t\tthis.position += 4;\r\n\t\t\t\t\tthis._size += 4;\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tcase 64:\r\n\t" +
                    "\t\t\t\tthrow new Error(\"Int64 is not supported in JavaScript.\")\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r" +
                    "\n\t/* Writes a integral value to the underlying buffer. */\r\n\tp.writeInt = spike.b" +
                    "inarySupport ? p.native_writeInt : p.string_writeInt;\r\n\r\n\t/* Writes an unsigned " +
                    "byte value to the underlying buffer. */\r\n\tp.writeByte = function(number){\r\n\t\tthi" +
                    "s.writeInt(number, 8, false);\r\n\t};\r\n\r\n\t/* Writes bytes to the underlying buffer." +
                    " */\r\n\tp.string_writeBytes = function(bytes){\r\n\t\tthis.data += bytes;\r\n\t};\r\n\r\n\t/* " +
                    "Writes bytes to the underlying buffer. */\r\n\tp.native_writeBytes = function(bytes" +
                    "){\r\n\t\tthis.ensureCapacity(bytes.length);\r\n\t\tvar v = new Uint8Array(this.data, 0," +
                    " bytes.length);\r\n\t\tv.set(bytes, this.position);\r\n\t\tthis.position += bytes.length" +
                    ";\r\n\t\tthis._size += bytes.length;\r\n\t};\r\n\r\n\t/* Writes bytes to the underlying buff" +
                    "er. */\r\n\tp.writeBytes = spike.binarySupport ? p.native_writeBytes : p.string_wri" +
                    "teBytes;\r\n\r\n\t/* Reads a floating-point value from the underlying buffer. */\r\n\tp." +
                    "string_readFloat = function(precisionBits, exponentBits){\r\n\t\tvar blen = (precisi" +
                    "onBits + exponentBits + 1) / 8;\r\n\t\tvar data = this.data.slice(this.position, thi" +
                    "s.position + blen);\r\n\t\tthis.position += blen;\r\n\t\tvar b = ((b = new this.Buffer(t" +
                    "his.bigEndian, data)).checkBuffer(precisionBits + exponentBits + 1), b),\r\n\t\t\tbia" +
                    "s = Math.pow(2, exponentBits - 1) - 1, signal = b.readBits(precisionBits + expon" +
                    "entBits, 1),\r\n\t\t\texponent = b.readBits(precisionBits, exponentBits), significand" +
                    " = 0,\r\n\t\t\tdivisor = 2, curByte = b.buffer.length + (-precisionBits >> 3) - 1,\r\n\t" +
                    "\t\tbyteValue, startBit, mask;\r\n\t\tdo\r\n\t\t\tfor(byteValue = b.buffer[ ++curByte ], st" +
                    "artBit = precisionBits % 8 || 8, mask = 1 << startBit;\r\n\t\t\t\tmask >>= 1; (byteVal" +
                    "ue & mask) && (significand += 1 / divisor), divisor *= 2);\r\n\t\twhile(precisionBit" +
                    "s -= startBit);\r\n\t\treturn exponent == (bias << 1) + 1 ? significand ? NaN : sign" +
                    "al ? -Infinity : +Infinity\r\n\t\t\t: (1 + signal * -2) * (exponent || significand ? " +
                    "!exponent ? Math.pow(2, -bias + 1) * significand\r\n\t\t\t: Math.pow(2, exponent - bi" +
                    "as) * (1 + significand) : 0);\r\n\t};\r\n\r\n\t/* Reads a floating-point value from the " +
                    "underlying buffer. */\r\n\tp.native_readFloat = function(precisionBits, exponentBit" +
                    "s){\r\n\t\tvar bits = (precisionBits + exponentBits + 1);\r\n\t\tvar value = 0;\r\n\t\tswitc" +
                    "h(bits)\r\n\t\t{\r\n\t\t\tcase 32:\r\n\t\t\t\tvalue = this.view.getFloat32(this.position, !this" +
                    ".bigEndian);\r\n\t\t\t\tthis.position += 4;\r\n\t\t\t\treturn value;\r\n\r\n\t\t\tcase 64:\r\n\t\t\t\tval" +
                    "ue = this.view.getFloat64(this.position, !this.bigEndian);\r\n\t\t\t\tthis.position +=" +
                    " 8;\r\n\t\t\t\treturn value;\r\n\t\t}\r\n\t};\r\n\r\n\t/* Reads a floating-point value from the un" +
                    "derlying buffer. */\r\n\tp.readFloat = spike.binarySupport ? p.native_readFloat : p" +
                    ".string_readFloat;\r\n\r\n\t/* Reads an integral value from the underlying buffer. */" +
                    "\r\n\tp.string_readInt = function(bits, signed){\r\n\t\tvar blen = bits / 8;\r\n\t\tvar dat" +
                    "a = this.data.slice(this.position, this.position + blen);\r\n\t\tthis.position += bl" +
                    "en;\r\n\t\tvar b = new this.Buffer(this.bigEndian, data), x = b.readBits(0, bits), m" +
                    "ax = Math.pow(2, bits);\r\n\t\treturn signed && x >= max / 2 ? x - max : x;\r\n\t};\r\n\r\n" +
                    "\t/* Reads an integral value from the underlying buffer. */\r\n\tp.native_readInt = " +
                    "function(bits, signed){\r\n\t\tvar value = 0;\r\n\t\tif(signed)\r\n\t\t{\r\n\t\t\tswitch(bits)\r\n\t" +
                    "\t\t{\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tvalue = this.view.getInt8(this.position);\r\n\t\t\t\t\tthis.posi" +
                    "tion += 1;\r\n\t\t\t\t\treturn value < 0x80 ? value : value - 0x100;\r\n\r\n\t\t\t\tcase 16:\r\n\t" +
                    "\t\t\t\tvalue = this.view.getInt16(this.position, !this.bigEndian);\r\n\t\t\t\t\tthis.posit" +
                    "ion += 2;\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\tvalue = this.view.getInt32(t" +
                    "his.position, !this.bigEndian);\r\n\t\t\t\t\tthis.position += 4;\r\n\t\t\t\t\treturn value;\r\n\r" +
                    "\n\t\t\t\tcase 64:\r\n\t\t\t\t\tthrow new Error(\"Int64 is not supported in JavaScript.\")\r\n\t\t" +
                    "\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tswitch(bits)\r\n\t\t\t{\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tvalue =  this.vie" +
                    "w.getUint8(this.position);\r\n\t\t\t\t\tthis.position += 1;\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\t" +
                    "case 16:\r\n\t\t\t\t\tvalue = this.view.getUint16(this.position, !this.bigEndian);\r\n\t\t\t" +
                    "\t\tthis.position += 2;\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\tvalue = this.vie" +
                    "w.getUint32(this.position, !this.bigEndian);\r\n\t\t\t\t\tthis.position += 4;\r\n\t\t\t\t\tret" +
                    "urn value;\r\n\r\n\t\t\t\tcase 64:\r\n\t\t\t\t\tthrow new Error(\"Int64 is not supported in Java" +
                    "Script.\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/* Reads an integral value from the underlying buff" +
                    "er. */\r\n\tp.readInt = spike.binarySupport ? p.native_readInt : p.string_readInt;\r" +
                    "\n\r\n\t/* Reads an unsigned byte value from the underlying buffer. */\r\n\tp.readByte " +
                    "= function(){\r\n\t\treturn this.readInt(8, false);\r\n\t};\r\n\r\n\t/* Reads bytes from the" +
                    " underlying buffer. */\r\n\tp.string_readBytes = function(count){\r\n\t\tvar r = this.d" +
                    "ata.slice(this.position, this.position + count);\r\n\t\tthis.position += count;\r\n\t\tr" +
                    "eturn r;\r\n\t};\r\n\r\n\t/* Reads bytes from the underlying buffer. */\r\n\tp.native_readB" +
                    "ytes = function(count){\r\n\t\tvar r = new Uint8Array(this.data, this.position, coun" +
                    "t);\r\n\t\tthis.position += count;\r\n\t\treturn r;\r\n\t};\r\n\r\n\t/* Reads bytes from the und" +
                    "erlying buffer. */\r\n\tp.readBytes = spike.binarySupport ? p.native_readBytes : p." +
                    "string_readBytes;\r\n\r\n\t/* Gets a byte value on a specified position */\r\n\tp.string" +
                    "_getAt = function(index){\r\n\t\treturn this.data.charCodeAt(index) & 0xff;\r\n\t};\r\n\r\n" +
                    "\t/* Gets a byte value on a specified position */\r\n\tp.native_getAt = function(ind" +
                    "ex){\r\n\t\treturn this.view.getUint8(index);\r\n\t};\r\n\r\n\t/* Reads bytes from the under" +
                    "lying buffer. */\r\n\tp.getAt = spike.binarySupport ? p.native_getAt : p.string_get" +
                    "At;\r\n\r\n\t/* Appends the underlying buffer data to the specified buffer. */\r\n\tp.re" +
                    "adBytesTo = function(targetBuffer, count){\r\n\t\ttargetBuffer.writeBytes( this.read" +
                    "Bytes(count) );\r\n\t};\r\n\r\n\r\n\t/* Appends the underlying buffer data to the specifie" +
                    "d buffer. */\r\n\tp.string_getSize = function(){\r\n\t\treturn this.data.length;\r\n\t};\r\n" +
                    "\r\n\t/* Appends the underlying buffer data to the specified buffer. */\r\n\tp.native_" +
                    "getSize = function(){\r\n\t\treturn this._size;\r\n\t};\r\n\r\n\t/* Appends the underlying b" +
                    "uffer data to the specified buffer. */\r\n\tp.getSize = spike.binarySupport ? p.nat" +
                    "ive_getSize : p.string_getSize;\r\n\r\n\t/* Gets the byte array data as base64 encode" +
                    "d string */\r\n\tp.string_toBase64 = function(){\r\n\t\tvar cleanBuffer = new Array();\r" +
                    "\n\t\tvar result = \"\";\r\n\r\n\t   \tfor(var i=0; i<this.getSize(); ++i)\r\n\t\t\tcleanBuffer." +
                    "push(this.getAt(i));\r\n\t\tfor (var i = 0; i < cleanBuffer.length; i++)\r\n\t\t\tresult " +
                    "+= String.fromCharCode(cleanBuffer[i]);\t\r\n\r\n\t\tif (typeof(btoa) === \'function\') {" +
                    "\r\n\t\t\treturn btoa(result);\r\n\t\t} else {\r\n\t\t\treturn this._btoa(result);\r\n\t\t}\r\n\t};\r\n" +
                    "\r\n\t/* Gets the byte array data as base64 encoded string */\r\n\tp.native_toBase64 =" +
                    " function(){\r\n\t\t//var array = (new Uint8Array(this.data)).subarray(0, this._size" +
                    ");\r\n\t\tvar array = new Uint8Array(this.data, 0, this._size);\r\n\t\tvar text  = Strin" +
                    "g.fromCharCode.apply(null, array);\r\n\r\n\t\treturn (typeof(btoa) === \'function\') \r\n\t" +
                    "\t\t? btoa(text) \r\n\t\t\t: this._btoa(text);\r\n\t};\r\n\r\n\t/* Gets the byte array data as " +
                    "base64 encoded string */\r\n\tp.toBase64 = spike.binarySupport ? p.native_toBase64 " +
                    ": p.string_toBase64;\r\n\r\n\t/* Gets the underlying buffer slice */\r\n\tp.toBuffer = f" +
                    "unction(){\r\n\t\tvar p = this.position;\r\n\t\tthis.position = 0;\r\n\t\tvar b = this.readB" +
                    "ytes(this.getSize());\r\n\t\tthis.position = p;\r\n\t\treturn b;\r\n\t};\r\n\r\n\t/* Writes base" +
                    " 64 encoded string to the buffer after decoding it */\r\n\tp.string_writeBase64 = f" +
                    "unction(input){\r\n\t\tif (typeof(atob) === \'function\') {\r\n\t\t\tthis.writeBytes(atob(i" +
                    "nput));\r\n\t\t} else {\r\n\t\t\tthis.writeBytes(this._atob(input));\r\n\t\t}\r\n\t};\r\n\r\n\t/* Wri" +
                    "tes base 64 encoded string to the buffer after decoding it */\r\n\tp.native_writeBa" +
                    "se64 = function(input){\r\n\t\tvar array = new Uint8Array(atob(input).split(\"\").map(" +
                    "function(c) { return c.charCodeAt(0); }));\r\n\t\tthis.writeBytes(array);\r\n\t};\r\n\r\n\t/" +
                    "* Writes base 64 encoded string to the buffer after decoding it */\r\n\tp.writeBase" +
                    "64 = spike.binarySupport ? p.native_writeBase64 : p.string_writeBase64;\r\n\r\n\r\n   " +
                    "  /* btoa() for Internet Explorer */\r\n     p._btoa = function(str) {\r\n          " +
                    "var chars = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\';" +
                    "\r\n          var encoded = [];\r\n          var c = 0;\r\n          while (c < str.le" +
                    "ngth) {\r\n              var b0 = str.charCodeAt(c++);\r\n              var b1 = str" +
                    ".charCodeAt(c++);\r\n              var b2 = str.charCodeAt(c++);\r\n              va" +
                    "r buf = (b0 << 16) + ((b1 || 0) << 8) + (b2 || 0);\r\n              var i0 = (buf " +
                    "& (63 << 18)) >> 18;\r\n              var i1 = (buf & (63 << 12)) >> 12;\r\n        " +
                    "      var i2 = isNaN(b1) ? 64 : (buf & (63 << 6)) >> 6;\r\n              var i3 = " +
                    "isNaN(b2) ? 64 : (buf & 63);\r\n              encoded[encoded.length] = chars.char" +
                    "At(i0);\r\n              encoded[encoded.length] = chars.charAt(i1);\r\n            " +
                    "  encoded[encoded.length] = chars.charAt(i2);\r\n              encoded[encoded.len" +
                    "gth] = chars.charAt(i3);\r\n          }\r\n          return encoded.join(\'\');\r\n     " +
                    " };\r\n\r\n\t/* atob() for Internet Explorer */\r\n\tp._atob = function(input) {\r\n\t    v" +
                    "ar b64array = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" +
                    "\";\r\n\t    var output = \"\";\r\n\t    var hex = \"\";\r\n\t    var chr1, chr2, chr3 = \"\";\r\n" +
                    "\t    var enc1, enc2, enc3, enc4 = \"\";\r\n\t    var i = 0;\r\n\t\r\n\t    input = input.re" +
                    "place(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\t\r\n\t    do {\r\n\t        enc1 = b64array.indexO" +
                    "f(input.charAt(i++));\r\n\t        enc2 = b64array.indexOf(input.charAt(i++));\r\n\t  " +
                    "      enc3 = b64array.indexOf(input.charAt(i++));\r\n\t        enc4 = b64array.inde" +
                    "xOf(input.charAt(i++));\r\n\t        \r\n\t        chr1 = (enc1 << 2) | (enc2 >> 4);\r\n" +
                    "\t        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t        chr3 = ((enc3 & 3) <" +
                    "< 6) | enc4;\r\n\t        \r\n\t        output = output + String.fromCharCode(chr1);\r\n" +
                    "\t        \r\n\t        if (enc3 != 64) {\r\n\t            output = output + String.fro" +
                    "mCharCode(chr2);\r\n\t        }\r\n\t        if (enc4 != 64) {\r\n\t            output = " +
                    "output + String.fromCharCode(chr3);\r\n\t        }\r\n\t    \r\n\t        chr1 = chr2 = c" +
                    "hr3 = \"\";\r\n\t        enc1 = enc2 = enc3 = enc4 = \"\";\r\n\t    \r\n\t    } while (i < in" +
                    "put.length);\r\n\r\n\t    return output;\r\n\t};\r\n\r\n\r\n\twith({p: (p.Buffer = function(big" +
                    "Endian, buffer){\r\n\t\tthis.bigEndian = bigEndian || 0, this.buffer = [], this.setB" +
                    "uffer(buffer);\r\n\t}).prototype}){\r\n\t\tp.readBits = function(start, length){\r\n\t\t\t//" +
                    "shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)\r\n\t\t\tfunction shl(a, b" +
                    "){\r\n\t\t\t\tfor(++b; --b; a = ((a %= 0x7fffffff + 1) & 0x40000000) == 0x40000000 ? a" +
                    " * 2 : (a - 0x40000000) * 2 + 0x7fffffff + 1);\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\t\tif(start" +
                    " < 0 || length <= 0)\r\n\t\t\t\treturn 0;\r\n\t\t\tthis.checkBuffer(start + length);\r\n\t\t\tfo" +
                    "r(var offsetLeft, offsetRight = start % 8, curByte = this.buffer.length - (start" +
                    " >> 3) - 1,\r\n\t\t\t\tlastByte = this.buffer.length + (-(start + length) >> 3), diff " +
                    "= curByte - lastByte,\r\n\t\t\t\tsum = ((this.buffer[ curByte ] >> offsetRight) & ((1 " +
                    "<< (diff ? 8 - offsetRight : length)) - 1))\r\n\t\t\t\t+ (diff && (offsetLeft = (start" +
                    " + length) % 8) ? (this.buffer[ lastByte++ ] & ((1 << offsetLeft) - 1))\r\n\t\t\t\t<< " +
                    "(diff-- << 3) - offsetRight : 0); diff; sum += shl(this.buffer[ lastByte++ ], (d" +
                    "iff-- << 3) - offsetRight)\r\n\t\t\t);\r\n\t\t\treturn sum;\r\n\t\t};\r\n\t\tp.setBuffer = functio" +
                    "n(data){\r\n\t\t\tif(data){\r\n\t\t\t\tfor(var l, i = l = data.length, b = this.buffer = ne" +
                    "w Array(l); i; b[l - i] = data.charCodeAt(--i));\r\n\t\t\t\tthis.bigEndian && b.revers" +
                    "e();\r\n\t\t\t}\r\n\t\t};\r\n\t\tp.hasNeededBits = function(neededBits){\r\n\t\t\treturn this.buff" +
                    "er.length >= -(-neededBits >> 3);\r\n\t\t};\r\n\t\tp.checkBuffer = function(neededBits){" +
                    "\r\n\t\t\tif(!this.hasNeededBits(neededBits))\r\n\t\t\t\tthrow new Error(\'checkBuffer::miss" +
                    "ing bytes\');\r\n\t\t};\r\n\t}\r\n\tp.warn = function(msg){\r\n\t\tif(this.allowExceptions)\r\n\t\t" +
                    "\tthrow new Error(msg);\r\n\t\treturn 1;\r\n\t};\r\n\r\n}");
            
            #line 9 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 10 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "PacketCompressor") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("/*\r\n* JavaScript LibLZF Port:\r\n* Copyright (c) 2011 Roman Atachiants <kelindar@gm" +
                    "ail.com>\r\n* \r\n* Original CLZF C# Port:\r\n* Copyright (c) 2005 Oren J. Maurice <oy" +
                    "maurice@hazorea.org.il>\r\n* \r\n* Original LibLZF Library & Algorithm:\r\n* Copyright" +
                    " (c) 2000-2008 Marc Alexander Lehmann <schmorp@schmorp.de>\r\n* \r\n* Redistribution" +
                    " and use in source and binary forms, with or without modifica-\r\n* tion, are perm" +
                    "itted provided that the following conditions are met:\r\n* \r\n*   1.  Redistributio" +
                    "ns of source code must retain the above copyright notice,\r\n*       this list of " +
                    "conditions and the following disclaimer.\r\n* \r\n*   2.  Redistributions in binary " +
                    "form must reproduce the above copyright\r\n*       notice, this list of conditions" +
                    " and the following disclaimer in the\r\n*       documentation and/or other materia" +
                    "ls provided with the distribution.\r\n* \r\n*   3.  The name of the author may not b" +
                    "e used to endorse or promote products\r\n*       derived from this software withou" +
                    "t specific prior written permission.\r\n* \r\n* THIS SOFTWARE IS PROVIDED BY THE AUT" +
                    "HOR ``AS IS\'\' AND ANY EXPRESS OR IMPLIED\r\n* WARRANTIES, INCLUDING, BUT NOT LIMIT" +
                    "ED TO, THE IMPLIED WARRANTIES OF MER-\r\n* CHANTABILITY AND FITNESS FOR A PARTICUL" +
                    "AR PURPOSE ARE DISCLAIMED.  IN NO\r\n* EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DI" +
                    "RECT, INDIRECT, INCIDENTAL, SPE-\r\n* CIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (I" +
                    "NCLUDING, BUT NOT LIMITED TO,\r\n* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LO" +
                    "SS OF USE, DATA, OR PROFITS;\r\n* OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON " +
                    "ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCL" +
                    "UDING NEGLIGENCE OR OTH-\r\n* ERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SO" +
                    "FTWARE, EVEN IF ADVISED\r\n* OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*\r\n* Alternativel" +
                    "y, the contents of this file may be used under the terms of\r\n* the GNU General P" +
                    "ublic License version 2 (the \"GPL\"), in which case the\r\n* provisions of the GPL " +
                    "are applicable instead of the above. If you wish to\r\n* allow the use of your ver" +
                    "sion of this file only under the terms of the\r\n* GPL and not to allow others to " +
                    "use your version of this file under the\r\n* BSD license, indicate your decision b" +
                    "y deleting the provisions above and\r\n* replace them with the notice and other pr" +
                    "ovisions required by the GPL. If\r\n* you do not delete the provisions above, a re" +
                    "cipient may use your version\r\n* of this file under either the BSD or the GPL.\r\n*" +
                    "/\r\n\r\nspike.PacketCompressor = function()\r\n{\r\n\tthis.HLOG = 14;\r\n\tthis.HSIZE = (1 " +
                    "<< 14);\r\n\tthis.MAX_LIT = (1 << 5);\r\n\tthis.MAX_OFF = (1 << 13);\r\n\tthis.MAX_REF = " +
                    "((1 << 8) + (1 << 3));\r\n\r\n\t//private var HashTable:Array = new Array(this.HSIZE)" +
                    ";\t\t\r\n\tthis.HashTable = new Array(this.HSIZE);\t\t\r\n\t\r\n\t/* Compresses the data usin" +
                    "g LibLZF algorithm */\r\n\tthis.compress = function(input, inputLength)\r\n\t{\r\n\t\tthis" +
                    ".HashTable.splice(0, this.HSIZE);\r\n\t\t\r\n\t\tvar output = new spike.ByteArray();\r\n\t\t" +
                    "\r\n\t\tvar hslot;\r\n\t\tvar iidx = 0;\r\n\t\tvar oidx = 0;\r\n\t\tvar reference;\r\n\t\t\r\n\t\tvar hv" +
                    "al = (((input.getAt(iidx)) << 8) | input.getAt(iidx + 1)); // FRST(in_data, iidx" +
                    ");\r\n\t\tvar off;\r\n\t\tvar lit = 0;\r\n\t\t\r\n\t\tfor (; ; )\r\n\t\t{\r\n\t\t\tif (iidx < inputLength" +
                    " - 2)\r\n\t\t\t{\r\n\t\t\t\thval = (hval << 8) | input.getAt(iidx + 2);\r\n\t\t\t\thslot = ((hval" +
                    " ^ (hval << 5)) >> (((3 * 8 - this.HLOG)) - hval * 5) & (this.HSIZE - 1));\r\n\t\t\t\t" +
                    "reference = this.HashTable[hslot];\r\n\t\t\t\tthis.HashTable[hslot] = iidx;\r\n\t\t\t\t\r\n\t\t\t" +
                    "\t\r\n\t\t\t\tif ((off = iidx - reference - 1) < this.MAX_OFF\r\n\t\t\t\t\t&& iidx + 4 < input" +
                    "Length\r\n\t\t\t\t\t&& reference > 0\r\n\t\t\t\t\t&& input.getAt(reference + 0) == input.getAt" +
                    "(iidx + 0)\r\n\t\t\t\t\t&& input.getAt(reference + 1) == input.getAt(iidx + 1)\r\n\t\t\t\t\t&&" +
                    " input.getAt(reference + 2) == input.getAt(iidx + 2)\r\n\t\t\t\t)\r\n\t\t\t\t{\r\n\t\t\t\t\t/* matc" +
                    "h found at *reference++ */\r\n\t\t\t\t\tvar len = 2;\r\n\t\t\t\t\tvar maxlen = inputLength - i" +
                    "idx - len;\r\n\t\t\t\t\tmaxlen = maxlen > this.MAX_REF ? this.MAX_REF : maxlen;\r\n\t\t\t\t\t\r" +
                    "\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tlen++;\r\n\t\t\t\t\twhile (len < maxlen && input.getAt(reference + len)" +
                    " == input.getAt(iidx + len));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (lit != 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toidx++;\r" +
                    "\n\t\t\t\t\t\toutput.writeByte(lit - 1);\r\n\t\t\t\t\t\tlit = -lit;\r\n\t\t\t\t\t\tdo\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t" +
                    "oidx++;\r\n\t\t\t\t\t\t\toutput.writeByte(input.getAt(iidx + lit));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile" +
                    " ((++lit) != 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlen -= 2;\r\n\t\t\t\t\tiidx++;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (l" +
                    "en < 7)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toidx++;\r\n\t\t\t\t\t\toutput.writeByte((off >> 8) + (len << 5));" +
                    "\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toidx++;\r\n\t\t\t\t\t\toidx++;\r\n\t\t\t\t\t\toutput.writeByt" +
                    "e((off >> 8) + (7 << 5));\r\n\t\t\t\t\t\toutput.writeByte(len - 7);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t" +
                    "\toidx++;\r\n\t\t\t\t\toutput.writeByte(off);\r\n\t\t\t\t\t\r\n\t\t\t\t\tiidx += len - 1;\r\n\t\t\t\t\thval =" +
                    " (((input.getAt(iidx)) << 8) | input.getAt(iidx + 1)); \r\n\t\t\t\t\t\r\n\t\t\t\t\thval = (hva" +
                    "l << 8) | input.getAt(iidx + 2);\r\n\t\t\t\t\tthis.HashTable[((hval ^ (hval << 5)) >> (" +
                    "((3 * 8 - this.HLOG)) - hval * 5) & (this.HSIZE - 1))] = iidx;\r\n\t\t\t\t\tiidx++;\r\n\t\t" +
                    "\t\t\t\r\n\t\t\t\t\thval = (hval << 8) | input.getAt(iidx + 2);\r\n\t\t\t\t\tthis.HashTable[((hva" +
                    "l ^ (hval << 5)) >> (((3 * 8 - this.HLOG)) - hval * 5) & (this.HSIZE - 1))] = ii" +
                    "dx;\r\n\t\t\t\t\tiidx++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (iidx == inputLength)" +
                    "\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t/* one more literal byte we must copy */\r\n\t\t\tlit++;\r\n\t\t\tii" +
                    "dx++;\r\n\t\t\t\r\n\t\t\tif (lit == this.MAX_LIT)\r\n\t\t\t{\r\n\t\t\t\toidx++;\r\n\t\t\t\toutput.writeByte" +
                    "((this.MAX_LIT - 1));\r\n\t\t\t\tlit = -lit;\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\toidx++;\r\n\t\t\t\t\toutput" +
                    ".writeByte(input.getAt(iidx + lit));\r\n\t\t\t\t}\r\n\t\t\t\twhile ((++lit) != 0);\r\n\t\t\t}\r\n\t\t" +
                    "}\r\n\t\t\r\n\t\tif (lit != 0)\r\n\t\t{\r\n\t\t\toidx++;\r\n\t\t\toutput.writeByte((lit - 1));\r\n\t\t\tlit" +
                    " = -lit;\r\n\t\t\tdo\r\n\t\t\t{\r\n\t\t\t\toidx++;\r\n\t\t\t\toutput.writeByte(input.getAt(iidx + lit)" +
                    ");\r\n\t\t\t}\r\n\t\t\twhile ((++lit) != 0);\r\n\t\t}\r\n\t\t\r\n\t\toutput.length = oidx;\r\n\t\treturn o" +
                    "utput;\r\n\t}\r\n\t\r\n\t/* Decompresses the data using LibLZF algorithm */\r\n\tthis.decomp" +
                    "ress = function(input, inputLength)\r\n\t{\r\n\t\tvar iidx = 0 | 0;\r\n\t\tvar oidx = 0 | 0" +
                    ";\r\n\t\tvar output = new spike.ByteArray();\r\n\r\n\t\tdo\r\n\t\t{\r\n\t\t\tvar ctrl = input.getAt" +
                    "(iidx);\r\n\t\t\tiidx++;\r\n\t\t\t\r\n\t\t\tif (ctrl < (1 << 5)) /* literal run */\r\n\t\t\t{\r\n\t\t\t\tc" +
                    "trl++;\r\n\t\t\t\t\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.writeByte(input.getAt(iidx));\r\n\t\t\t\t\tiid" +
                    "x++;\r\n\t\t\t\t\toidx++;\r\n\t\t\t\t}\r\n\t\t\t\twhile ((--ctrl) != 0);\r\n\t\t\t}\r\n\t\t\telse /* back ref" +
                    "erence */\r\n\t\t\t{\r\n\t\t\t\tvar len = ctrl >> 5;\r\n\t\t\t\tvar reference = (oidx - ((ctrl & " +
                    "0x1f) << 8) - 1);\r\n\t\t\t\t\r\n\t\t\t\tif (len == 7){\r\n\t\t\t\t\tlen += input.getAt(iidx);\r\n\t\t\t" +
                    "\t\tiidx++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treference -= input.getAt(iidx);\r\n\t\t\t\tiidx++;\r\n\t\t\t\t\r\n" +
                    "\t\t\t\tif (reference < 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t//SET_ERRNO (EINVAL);\r\n\t\t\t\t\toutput.length = " +
                    "0;\r\n\t\t\t\t\treturn output;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.writeByte(output.getAt(reference));" +
                    "\r\n\t\t\t\treference++;\r\n\t\t\t\toidx++;\r\n\t\t\t\toutput.writeByte(output.getAt(reference));\r" +
                    "\n\t\t\t\treference++;\r\n\t\t\t\toidx++;\r\n\t\t\t\t\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.writeByte(outpu" +
                    "t.getAt(reference));\r\n\t\t\t\t\treference++;\r\n\t\t\t\t\toidx++;\r\n\t\t\t\t}\r\n\t\t\t\twhile ((--len)" +
                    " != 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile (iidx < inputLength);\r\n\t\t\r\n\t\toutput.length = oidx;\r\n" +
                    "\t\treturn output;\r\n\t}\r\n\t\r\n};");
            
            #line 10 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 11 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "PacketWriter") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("spike.PacketWriter = function(bufferTowrite){\r\n\tthis.buffer = new spike.ByteArray" +
                    "();\r\n}\r\n\r\n/* Compresses the packet */\r\nspike.PacketWriter.prototype.compress = f" +
                    "unction()\r\n{\t\t\t\r\n\tthis.buffer = new spike.PacketCompressor().compress(this.buffe" +
                    "r, this.buffer.getSize());\r\n}\t\r\n\t\r\nspike.PacketWriter.prototype.writeBoolean = f" +
                    "unction(value){\r\n\tif(value){\r\n\t\tthis.buffer.writeInt(1, 8, false);\r\n\t}else{\r\n\t\tt" +
                    "his.buffer.writeInt(0, 8, false);\r\n\t}\r\n}\r\n\t\r\nspike.PacketWriter.prototype.writeK" +
                    "ey = function(value){\r\n\tfor(var i=0; i < 8; i+=2)\r\n\t{\r\n\t\tvar s = value.charAt(i)" +
                    " + value.charAt(i + 1);\r\n\t\tvar b = parseInt(s, 16);\r\n\t\tthis.buffer.writeInt(b, 8" +
                    ", false);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeByte = function(value){\r\n\t" +
                    "this.buffer.writeInt(value, 8, false);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.write" +
                    "SByte = function(value){\r\n\tthis.buffer.writeInt(value, 8, true);\r\n}\r\n\t\r\nspike.Pa" +
                    "cketWriter.prototype.writeInt16 = function(value){\r\n\tthis.buffer.writeInt(value," +
                    " 16, true);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.writeInt32 = function(value){\r\n\t" +
                    "this.buffer.writeInt(value, 32, true);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.write" +
                    "Int64 = function(value){\r\n\tthis.buffer.writeInt(value, 64, true);\r\n}\r\n\t\r\nspike.P" +
                    "acketWriter.prototype.writeUInt16 = function(value){\r\n\tthis.buffer.writeInt(valu" +
                    "e, 16, false);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.writeUInt32 = function(value)" +
                    "{\r\n\tthis.buffer.writeInt(value, 32, false);\r\n}\r\n\t\r\nspike.PacketWriter.prototype." +
                    "writeUInt64 = function(value){\r\n\tthis.buffer.writeInt(value, 64, false);\r\n}\r\n\r\ns" +
                    "pike.PacketWriter.prototype.writeDateTime = function(value){\r\n\tthis.writeInt16(v" +
                    "alue.getFullYear());\r\n\tthis.writeInt16(value.getMonth() + 1);\r\n\tthis.writeInt16(" +
                    "value.getDate());\r\n\tthis.writeInt16(value.getHours());\r\n\tthis.writeInt16(value.g" +
                    "etMinutes());\r\n\tthis.writeInt16(value.getSeconds());\r\n\tthis.writeInt16(value.get" +
                    "Milliseconds());\r\n}\r\n\r\nspike.PacketWriter.prototype.writeSingle = function(value" +
                    "){\r\n\tthis.buffer.writeFloat(value, 23, 8);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.w" +
                    "riteDouble = function(value){\r\n\tthis.buffer.writeFloat(value, 52, 11);\r\n}\r\n\t\r\nsp" +
                    "ike.PacketWriter.prototype.writeString = function(value){\r\n\tif(value == \'undefin" +
                    "ed\' || value == null || value.length == 0){\r\n\t\tthis.writeInt32(0);\t\t\r\n\t}else{\r\n\t" +
                    "\tvalue = unescape(encodeURIComponent(value));\r\n\t\tthis.writeInt32(value.length);\r" +
                    "\n\t\tthis.buffer.writeBytes(value);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeDy" +
                    "namic = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"number\")\r\n\t{\r" +
                    "\n\t\tthis.writeByte(1);\r\n\t\tthis.writeString(\"Double\");\r\n\t\tthis.writeDouble(value);" +
                    "\r\n\t}\r\n\telse if(type == \"boolean\")\r\n\t{\r\n\t\tthis.writeByte(1);\r\n\t\tthis.writeString(" +
                    "\"Boolean\");\r\n\t\tthis.writeBoolean(value);\r\n\t}\r\n\telse if(type == \"string\")\r\n\t{\r\n\t\t" +
                    "this.writeByte(1);\r\n\t\tthis.writeString(\"String\");\r\n\t\tthis.writeString(value);\r\n\t" +
                    "}\r\n\telse if(type == \"object\" && value instanceof Date)\r\n\t{\r\n\t\tthis.writeByte(1);" +
                    "\r\n\t\tthis.writeString(\"DateTime\");\r\n\t\tthis.writeDateTime(value);\r\n\t}\r\n\telse\r\n\t{\r\n" +
                    "\t\tthis.writeByte(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfByte = f" +
                    "unction(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value insta" +
                    "nceof ByteArray){\r\n\t\tthis.writeInt32(value.getSize());\r\n\t\tthis.buffer.writeBytes" +
                    "(value.data);\r\n\t}else{\r\n\t\tthis.writeInt32(value.length);\r\n\t\tthis.buffer.writeByt" +
                    "es(value);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfUInt16 = function(" +
                    "value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instanceof Ar" +
                    "ray){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\t" +
                    "for(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeUInt16(value[i]);\r\n\t\t}\r\n\t}else{" +
                    "\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfInt16" +
                    " = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value i" +
                    "nstanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t" +
                    "\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeInt16(value[i]);\r\n\t" +
                    "\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeA" +
                    "rrayOfInt32 = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\"" +
                    " && value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.lengt" +
                    "h == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeInt32(va" +
                    "lue[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.proto" +
                    "type.writeArrayOfUInt32 = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type" +
                    " == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif" +
                    "(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.w" +
                    "riteUInt32(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.Packe" +
                    "tWriter.prototype.writeArrayOfInt64 = function(value){\r\n\tvar type = typeof(value" +
                    ");\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value.le" +
                    "ngth);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i)" +
                    "{\r\n\t\t\tthis.writeInt64(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\n" +
                    "spike.PacketWriter.prototype.writeArrayOfUInt64 = function(value){\r\n\tvar type = " +
                    "typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.writeIn" +
                    "t32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value." +
                    "length; ++i){\r\n\t\t\tthis.writeUInt64(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0" +
                    ");\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfDouble = function(value){\r" +
                    "\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t" +
                    "\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var " +
                    "i=0; i<value.length; ++i){\r\n\t\t\tthis.writeDouble(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis" +
                    ".writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfSingle = func" +
                    "tion(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instance" +
                    "of Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn" +
                    ";\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeSingle(value[i]);\r\n\t\t}\r\n\t}" +
                    "else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOf" +
                    "DateTime = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" &&" +
                    " value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length =" +
                    "= 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeDateTime(va" +
                    "lue[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.proto" +
                    "type.writeArrayOfString = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type" +
                    " == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif" +
                    "(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.w" +
                    "riteString(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.Packe" +
                    "tWriter.prototype.writeArrayOfBoolean = function(value){\r\n\tvar type = typeof(val" +
                    "ue);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value." +
                    "length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++" +
                    "i){\r\n\t\t\tthis.writeBoolean(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}" +
                    "\r\n\r\nspike.PacketWriter.prototype.writeArrayOfDynamic = function(value){\r\n\tvar ty" +
                    "pe = typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.wr" +
                    "iteInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<v" +
                    "alue.length; ++i){\r\n\t\t\tthis.writeDynamic(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeI" +
                    "nt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArray = function(value){\r\n\t" +
                    "var type = typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tt" +
                    "his.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=" +
                    "0; i<value.length; ++i){\r\n\t\t\tif(value[i].write != \'undefined\'){\r\n\t\t\t\tvalue[i].wr" +
                    "ite(this);\r\n\t\t\t}else{\r\n\t\t\t\tthrow \"Unable to write, the array contains unknown el" +
                    "ements\";\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\n\r\n");
            
            #line 318 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 foreach(var customType in Model.CustomTypes) { 
            
            #line default
            #line hidden
            this.Write("spike.PacketWriter.prototype.write");
            
            #line 319 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(value)\r\n{\r\n    ");
            
            #line 321 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 foreach(var member in customType.Members){ 
            
            #line default
            #line hidden
            this.Write("\t\tthis.write");
            
            #line 322 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 322 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("(value.");
            
            #line 322 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n    ");
            
            #line 323 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 } 
            
            #line default
            #line hidden
            this.Write("}\r\n\r\nprotected void WriteArrayOf");
            
            #line 326 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(value)\r\n{\r\n\tif(Object.prototype.toString.call( someVar ) !== \'[object" +
                    " Array]\')\r\n\t\tthrow new Error(\"Attempted to write an invalid array.\");\r\n\r\n    thi" +
                    "s.writeInt32(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n       " +
                    " this.write");
            
            #line 333 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write("(value[i]);\r\n}\r\n");
            
            #line 335 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 } 
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 11 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 12 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "PacketReader") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("/* The packet reader which is used for reading binary buffer */\r\nspike.PacketRead" +
                    "er = function(byteArray){\r\n    this.buffer = byteArray;\r\n}\r\n\r\nspike.PacketReader" +
                    ".prototype.decompress = function(){\r\n\tthis.buffer = new spike.PacketCompressor()" +
                    ".decompress(this.buffer, this.buffer.getSize());\r\n\tthis.buffer.position = 0;\r\n}\r" +
                    "\n\r\nspike.PacketReader.prototype.readBoolean = function(){\r\n\treturn this.buffer.r" +
                    "eadInt(8, false) == 1;\r\n}\r\n\r\nspike.PacketReader.prototype.readByte = function(){" +
                    "\r\n    return this.buffer.readInt(8, false);\r\n}\r\n\r\nspike.PacketReader.prototype.r" +
                    "eadSByte = function(){\r\n    return this.buffer.readInt(8, true);\r\n}\r\n\r\nspike.Pac" +
                    "ketReader.prototype.readInt16 = function(){\r\n    return this.buffer.readInt(16, " +
                    "true);\r\n}\r\n\r\nspike.PacketReader.prototype.readInt32 = function(){\r\n    return th" +
                    "is.buffer.readInt(32, true);\r\n}\r\n\r\nspike.PacketReader.prototype.readInt64 = func" +
                    "tion(){\r\n    return this.buffer.readInt(64, true);\r\n}\r\n\r\nspike.PacketReader.prot" +
                    "otype.readUInt16 = function(){\r\n    return this.buffer.readInt(16, false);\r\n}\r\n\r" +
                    "\nspike.PacketReader.prototype.readUInt32 = function(){\r\n    return this.buffer.r" +
                    "eadInt(32, false);\r\n}\r\n\r\nspike.PacketReader.prototype.readUInt64 = function(){\r\n" +
                    "    return this.buffer.readInt(64, false);\r\n}\r\n\r\nspike.PacketReader.prototype.re" +
                    "adDateTime = function(){\r\n\tvar year = this.readInt16();\r\n\tvar month = this.readI" +
                    "nt16() - 1;\r\n\tvar date = this.readInt16();\r\n\tvar hour = this.readInt16();\r\n\tvar " +
                    "minute = this.readInt16();\r\n\tvar second = this.readInt16();\r\n\tvar millisecond = " +
                    "this.readInt16();\r\n\t\t\t\r\n\treturn new Date(year,month,date,hour,minute,second,mill" +
                    "isecond);\r\n}\r\n\r\nspike.PacketReader.prototype.readSingle = function(){\r\n    retur" +
                    "n this.buffer.readFloat(23, 8);\r\n}\r\n\r\nspike.PacketReader.prototype.readDouble = " +
                    "function(){\r\n    return this.buffer.readFloat(52, 11);\r\n}\r\n\r\nspike.PacketReader." +
                    "prototype.readString = function(){\r\n\tvar length = this.readInt32();\r\n\tif(length " +
                    "> 0){\r\n\t\tvar s = this.buffer.readBytes(length);\r\n\t\treturn spike.binarySupport\r\n\t" +
                    "\t\t? decodeURIComponent(escape(String.fromCharCode.apply(null, s)))\r\n\t\t\t: decodeU" +
                    "RIComponent(escape(s));\r\n\t}\r\n\telse{\r\n\t\treturn \'\';\r\n\t}\r\n}\r\n\r\nspike.PacketReader.p" +
                    "rototype.readDynamic = function(){\r\nif(this.readByte()  == 1){\r\n\tvar type = this" +
                    ".readString();\r\n\tswitch (type){\r\n\t\tcase \'Byte\': return this.readByte();\r\n\t\tcase " +
                    "\'Int16\': return this.readInt16();\r\n\t\tcase \'Int32\': return this.readInt32();\r\n\t\tc" +
                    "ase \'Int64\': return this.readInt64();\r\n\t\tcase \'UInt16\': return this.readUInt16()" +
                    ";\r\n\t\tcase \'UInt32\': return this.readUInt32();\r\n\t\tcase \'UInt64\': return this.read" +
                    "UInt64();\r\n\t\tcase \'Boolean\': return this.readBoolean();\r\n\t\tcase \'Single\': return" +
                    " this.readSingle();\r\n\t\tcase \'Double\': return this.readDouble();\r\n\t\tcase \'DateTim" +
                    "e\': return this.readDateTime();\r\n\t\tcase \'String\': return this.readString();\r\n\t\td" +
                    "efault: return null;\r\n\t}\r\n}\r\nreturn null;\r\n}\r\n\r\nspike.PacketReader.prototype.rea" +
                    "dPacket = function(value){\r\n\tvalue.read(this);\r\n\treturn value;\r\n}\r\n\r\nspike.Packe" +
                    "tReader.prototype.readEntity = function(value){\r\n\tvalue.read(this);\r\n\treturn val" +
                    "ue;\r\n}\r\n\r\nspike.PacketReader.prototype.readArrayOfByte = function(){\r\n\tvar len =" +
                    " this.readInt32();\r\n\tvar arr = new spike.ByteArray();\r\n\tarr.writeBytes(this.buff" +
                    "er.readBytes(len));\r\n\tarr.position = 0;\r\n\treturn arr;\r\n}\r\n\r\nspike.PacketReader.p" +
                    "rototype.readArrayOfEntity = function(className){\r\n\tvar length = this.readInt32(" +
                    ");\r\n\tvar classCtor = \'new \' + className + \'()\';\t\t\r\n\tvar resultArray = new Array(" +
                    ");\r\n\tif(length == 0){\r\n\t\treturn resultArray;\r\n\t}\r\n\t\t\t\t\r\n\tfor(var i = 0; i < leng" +
                    "th; ++i){\r\n\t\tvar entityInstance = eval(classCtor);\r\n\t\tresultArray.push( this.rea" +
                    "dEntity(entityInstance) );\t\r\n\t}\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.p" +
                    "rototype.readArrayOfUInt16 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar " +
                    "resultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray." +
                    "push( this.readUInt16() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.p" +
                    "rototype.readArrayOfInt16 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar r" +
                    "esultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.p" +
                    "ush( this.readInt16() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.pro" +
                    "totype.readArrayOfUInt32 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar re" +
                    "sultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.pu" +
                    "sh( this.readUInt32() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.pro" +
                    "totype.readArrayOfInt32 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar res" +
                    "ultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.pus" +
                    "h( this.readInt32() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.proto" +
                    "type.readArrayOfUInt64 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resu" +
                    "ltArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push" +
                    "( this.readUInt64() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.proto" +
                    "type.readArrayOfInt64 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resul" +
                    "tArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push(" +
                    " this.readInt64() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfSingle = function(){\r\n\tvar length = this.readInt32();\r\n\tvar result" +
                    "Array = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( " +
                    "this.readSingle() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfDouble = function(){\r\n\tvar length = this.readInt32();\r\n\tvar result" +
                    "Array = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( " +
                    "this.readDouble() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfBoolean = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resul" +
                    "tArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push(" +
                    " this.readBoolean() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.proto" +
                    "type.readArrayOfDateTime = function(){\r\n\tvar length = this.readInt32();\r\n\tvar re" +
                    "sultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.pu" +
                    "sh( this.readDateTime() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.p" +
                    "rototype.readArrayOfString = function(){\r\n\tvar length = this.readInt32();\r\n\tvar " +
                    "resultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray." +
                    "push( this.readString() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.p" +
                    "rototype.readArrayOfDynamic = function(){\r\n\tvar length = this.readInt32();\r\n\tvar" +
                    " resultArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray" +
                    ".push( this.readDynamic() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\n\r\n");
            
            #line 256 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 foreach(var customType in Model.CustomTypes) { 
            
            #line default
            #line hidden
            this.Write("spike.PacketReader.prototype.read");
            
            #line 257 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(){\r\n    var value = new Object();\r\n\t");
            
            #line 259 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 foreach(var member in customType.Members) { 
            
            #line default
            #line hidden
            this.Write("\tvalue.");
            
            #line 260 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = reader.read");
            
            #line 260 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 260 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("();\t");
            
            #line 260 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 } 
            
            #line default
            #line hidden
            this.Write("\treturn value;\r\n}\r\n\r\nspike.PacketReader.prototype.readArrayOf");
            
            #line 264 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(){\r\n\tvar length = this.readInt32();\r\n    var value  = [];\r\n    for (v" +
                    "ar i = 0; i < length; ++i)\r\n        value[i] = this.read");
            
            #line 268 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n    return value;\r\n}\r\n");
            
            #line 271 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 } 
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 12 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 13 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "TcpEngine") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.expor" +
                    "ts=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"un" +
                    "defined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"" +
                    "!=typeof self&&(f=self),f.eio=e()}}(function(){var define,module,exports;return " +
                    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"fu" +
                    "nction\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Ca" +
                    "nnot find module \'\"+o+\"\'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports" +
                    ":{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.ex" +
                    "ports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for" +
                    "(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){" +
                    "\r\n\r\nmodule.exports =  _dereq_(\'./lib/\');\r\n\r\n},{\"./lib/\":2}],2:[function(_dereq_," +
                    "module,exports){\r\n\r\nmodule.exports = _dereq_(\'./socket\');\r\n\r\n/**\r\n * Exports par" +
                    "ser\r\n *\r\n * @api public\r\n *\r\n */\r\nmodule.exports.parser = _dereq_(\'engine.io-par" +
                    "ser\');\r\n\r\n},{\"./socket\":3,\"engine.io-parser\":17}],3:[function(_dereq_,module,exp" +
                    "orts){\r\n(function (global){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar transports" +
                    " = _dereq_(\'./transports\');\r\nvar Emitter = _dereq_(\'component-emitter\');\r\nvar de" +
                    "bug = _dereq_(\'debug\')(\'engine.io-client:socket\');\r\nvar index = _dereq_(\'indexof" +
                    "\');\r\nvar parser = _dereq_(\'engine.io-parser\');\r\nvar parseuri = _dereq_(\'parseuri" +
                    "\');\r\nvar parsejson = _dereq_(\'parsejson\');\r\nvar parseqs = _dereq_(\'parseqs\');\r\n\r" +
                    "\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Socket;\r\n\r\n/**\r\n * Noop functi" +
                    "on.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction noop(){}\r\n\r\n/**\r\n * Socket constructor" +
                    ".\r\n *\r\n * @param {String|Object} uri or options\r\n * @param {Object} options\r\n * " +
                    "@api public\r\n */\r\n\r\nfunction Socket(uri, opts){\r\n  if (!(this instanceof Socket)" +
                    ") return new Socket(uri, opts);\r\n\r\n  opts = opts || {};\r\n\r\n  if (uri && \'object\'" +
                    " == typeof uri) {\r\n    opts = uri;\r\n    uri = null;\r\n  }\r\n\r\n  if (uri) {\r\n    ur" +
                    "i = parseuri(uri);\r\n    opts.host = uri.host;\r\n    opts.secure = uri.protocol ==" +
                    " \'https\' || uri.protocol == \'wss\';\r\n    opts.port = uri.port;\r\n    if (uri.query" +
                    ") opts.query = uri.query;\r\n  }\r\n\r\n  this.secure = null != opts.secure ? opts.sec" +
                    "ure :\r\n    (global.location && \'https:\' == location.protocol);\r\n\r\n  if (opts.hos" +
                    "t) {\r\n    var pieces = opts.host.split(\':\');\r\n    opts.hostname = pieces.shift()" +
                    ";\r\n    if (pieces.length) opts.port = pieces.pop();\r\n  }\r\n\r\n  this.agent = opts." +
                    "agent || false;\r\n  this.hostname = opts.hostname ||\r\n    (global.location ? loca" +
                    "tion.hostname : \'localhost\');\r\n  this.port = opts.port || (global.location && lo" +
                    "cation.port ?\r\n       location.port :\r\n       (this.secure ? 443 : 80));\r\n  this" +
                    ".query = opts.query || {};\r\n  if (\'string\' == typeof this.query) this.query = pa" +
                    "rseqs.decode(this.query);\r\n  this.upgrade = false !== opts.upgrade;\r\n  this.path" +
                    " = (opts.path || \'/engine.io\').replace(/\\/$/, \'\') + \'/\';\r\n  this.forceJSONP = !!" +
                    "opts.forceJSONP;\r\n  this.jsonp = false !== opts.jsonp;\r\n  this.forceBase64 = !!o" +
                    "pts.forceBase64;\r\n  this.enablesXDR = !!opts.enablesXDR;\r\n  this.timestampParam " +
                    "= opts.timestampParam || \'t\';\r\n  this.timestampRequests = opts.timestampRequests" +
                    ";\r\n  this.transports = opts.transports || [\'polling\', \'websocket\'];\r\n  this.read" +
                    "yState = \'\';\r\n  this.writeBuffer = [];\r\n  this.callbackBuffer = [];\r\n  this.poli" +
                    "cyPort = opts.policyPort || 843;\r\n  this.rememberUpgrade = opts.rememberUpgrade " +
                    "|| false;\r\n  this.open();\r\n  this.binaryType = null;\r\n  this.onlyBinaryUpgrades " +
                    "= opts.onlyBinaryUpgrades;\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n " +
                    "* Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Protocol versi" +
                    "on.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an" +
                    " int\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser " +
                    "access.\r\n */\r\n\r\nSocket.Socket = Socket;\r\nSocket.Transport = _dereq_(\'./transport" +
                    "\');\r\nSocket.transports = _dereq_(\'./transports\');\r\nSocket.parser = _dereq_(\'engi" +
                    "ne.io-parser\');\r\n\r\n/**\r\n * Creates transport of the given type.\r\n *\r\n * @param {" +
                    "String} transport name\r\n * @return {Transport}\r\n * @api private\r\n */\r\n\r\nSocket.p" +
                    "rototype.createTransport = function (name) {\r\n  debug(\'creating transport \"%s\"\'," +
                    " name);\r\n  var query = clone(this.query);\r\n\r\n  // append engine.io protocol iden" +
                    "tifier\r\n  query.EIO = parser.protocol;\r\n\r\n  // transport name\r\n  query.transport" +
                    " = name;\r\n\r\n  // session id if we already have one\r\n  if (this.id) query.sid = t" +
                    "his.id;\r\n\r\n  var transport = new transports[name]({\r\n    agent: this.agent,\r\n   " +
                    " hostname: this.hostname,\r\n    port: this.port,\r\n    secure: this.secure,\r\n    p" +
                    "ath: this.path,\r\n    query: query,\r\n    forceJSONP: this.forceJSONP,\r\n    jsonp:" +
                    " this.jsonp,\r\n    forceBase64: this.forceBase64,\r\n    enablesXDR: this.enablesXD" +
                    "R,\r\n    timestampRequests: this.timestampRequests,\r\n    timestampParam: this.tim" +
                    "estampParam,\r\n    policyPort: this.policyPort,\r\n    socket: this\r\n  });\r\n\r\n  ret" +
                    "urn transport;\r\n};\r\n\r\nfunction clone (obj) {\r\n  var o = {};\r\n  for (var i in obj" +
                    ") {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  retur" +
                    "n o;\r\n}\r\n\r\n/**\r\n * Initializes transport to use and starts probe.\r\n *\r\n * @api p" +
                    "rivate\r\n */\r\nSocket.prototype.open = function () {\r\n  var transport;\r\n  if (this" +
                    ".rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf(\'web" +
                    "socket\') != -1) {\r\n    transport = \'websocket\';\r\n  } else if (0 == this.transpor" +
                    "ts.length) {\r\n    // Emit error on next tick so it can be listened to\r\n    var s" +
                    "elf = this;\r\n    setTimeout(function() {\r\n      self.emit(\'error\', \'No transport" +
                    "s available\');\r\n    }, 0);\r\n    return;\r\n  } else {\r\n    transport = this.transp" +
                    "orts[0];\r\n  }\r\n  this.readyState = \'opening\';\r\n\r\n  // Retry with the next transp" +
                    "ort if the transport is disabled (jsonp: false)\r\n  var transport;\r\n  try {\r\n    " +
                    "transport = this.createTransport(transport);\r\n  } catch (e) {\r\n    this.transpor" +
                    "ts.shift();\r\n    this.open();\r\n    return;\r\n  }\r\n\r\n  transport.open();\r\n  this.s" +
                    "etTransport(transport);\r\n};\r\n\r\n/**\r\n * Sets the current transport. Disables the " +
                    "existing one (if any).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setTranspor" +
                    "t = function(transport){\r\n  debug(\'setting transport %s\', transport.name);\r\n  va" +
                    "r self = this;\r\n\r\n  if (this.transport) {\r\n    debug(\'clearing existing transpor" +
                    "t %s\', this.transport.name);\r\n    this.transport.removeAllListeners();\r\n  }\r\n\r\n " +
                    " // set up transport\r\n  this.transport = transport;\r\n\r\n  // set up transport lis" +
                    "teners\r\n  transport\r\n  .on(\'drain\', function(){\r\n    self.onDrain();\r\n  })\r\n  .o" +
                    "n(\'packet\', function(packet){\r\n    self.onPacket(packet);\r\n  })\r\n  .on(\'error\', " +
                    "function(e){\r\n    self.onError(e);\r\n  })\r\n  .on(\'close\', function(){\r\n    self.o" +
                    "nClose(\'transport close\');\r\n  });\r\n};\r\n\r\n/**\r\n * Probes a transport.\r\n *\r\n * @pa" +
                    "ram {String} transport name\r\n * @api private\r\n */\r\n\r\nSocket.prototype.probe = fu" +
                    "nction (name) {\r\n  debug(\'probing transport \"%s\"\', name);\r\n  var transport = thi" +
                    "s.createTransport(name, { probe: 1 })\r\n    , failed = false\r\n    , self = this;\r" +
                    "\n\r\n  Socket.priorWebsocketSuccess = false;\r\n\r\n  function onTransportOpen(){\r\n   " +
                    " if (self.onlyBinaryUpgrades) {\r\n      var upgradeLosesBinary = !this.supportsBi" +
                    "nary && self.transport.supportsBinary;\r\n      failed = failed || upgradeLosesBin" +
                    "ary;\r\n    }\r\n    if (failed) return;\r\n\r\n    debug(\'probe transport \"%s\" opened\'," +
                    " name);\r\n    transport.send([{ type: \'ping\', data: \'probe\' }]);\r\n    transport.o" +
                    "nce(\'packet\', function (msg) {\r\n      if (failed) return;\r\n      if (\'pong\' == m" +
                    "sg.type && \'probe\' == msg.data) {\r\n        debug(\'probe transport \"%s\" pong\', na" +
                    "me);\r\n        self.upgrading = true;\r\n        self.emit(\'upgrading\', transport);" +
                    "\r\n        if (!transport) return;\r\n        Socket.priorWebsocketSuccess = \'webso" +
                    "cket\' == transport.name;\r\n\r\n        debug(\'pausing current transport \"%s\"\', self" +
                    ".transport.name);\r\n        self.transport.pause(function () {\r\n          if (fai" +
                    "led) return;\r\n          if (\'closed\' == self.readyState) return;\r\n          debu" +
                    "g(\'changing transport and sending upgrade packet\');\r\n\r\n          cleanup();\r\n\r\n " +
                    "         self.setTransport(transport);\r\n          transport.send([{ type: \'upgra" +
                    "de\' }]);\r\n          self.emit(\'upgrade\', transport);\r\n          transport = null" +
                    ";\r\n          self.upgrading = false;\r\n          self.flush();\r\n        });\r\n    " +
                    "  } else {\r\n        debug(\'probe transport \"%s\" failed\', name);\r\n        var err" +
                    " = new Error(\'probe error\');\r\n        err.transport = transport.name;\r\n        s" +
                    "elf.emit(\'upgradeError\', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  function freezeTransp" +
                    "ort() {\r\n    if (failed) return;\r\n\r\n    // Any callback called by transport shou" +
                    "ld be ignored since now\r\n    failed = true;\r\n\r\n    cleanup();\r\n\r\n    transport.c" +
                    "lose();\r\n    transport = null;\r\n  }\r\n\r\n  //Handle any error that happens while p" +
                    "robing\r\n  function onerror(err) {\r\n    var error = new Error(\'probe error: \' + e" +
                    "rr);\r\n    error.transport = transport.name;\r\n\r\n    freezeTransport();\r\n\r\n    deb" +
                    "ug(\'probe transport \"%s\" failed because of error: %s\', name, err);\r\n\r\n    self.e" +
                    "mit(\'upgradeError\', error);\r\n  }\r\n\r\n  function onTransportClose(){\r\n    onerror(" +
                    "\"transport closed\");\r\n  }\r\n\r\n  //When the socket is closed while we\'re probing\r\n" +
                    "  function onclose(){\r\n    onerror(\"socket closed\");\r\n  }\r\n\r\n  //When the socket" +
                    " is upgraded while we\'re probing\r\n  function onupgrade(to){\r\n    if (transport &" +
                    "& to.name != transport.name) {\r\n      debug(\'\"%s\" works - aborting \"%s\"\', to.nam" +
                    "e, transport.name);\r\n      freezeTransport();\r\n    }\r\n  }\r\n\r\n  //Remove all list" +
                    "eners on the transport and on self\r\n  function cleanup(){\r\n    transport.removeL" +
                    "istener(\'open\', onTransportOpen);\r\n    transport.removeListener(\'error\', onerror" +
                    ");\r\n    transport.removeListener(\'close\', onTransportClose);\r\n    self.removeLis" +
                    "tener(\'close\', onclose);\r\n    self.removeListener(\'upgrading\', onupgrade);\r\n  }\r" +
                    "\n\r\n  transport.once(\'open\', onTransportOpen);\r\n  transport.once(\'error\', onerror" +
                    ");\r\n  transport.once(\'close\', onTransportClose);\r\n\r\n  this.once(\'close\', onclose" +
                    ");\r\n  this.once(\'upgrading\', onupgrade);\r\n\r\n  transport.open();\r\n\r\n};\r\n\r\n/**\r\n *" +
                    " Called when connection is deemed open.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.proto" +
                    "type.onOpen = function () {\r\n  debug(\'socket open\');\r\n  this.readyState = \'open\'" +
                    ";\r\n  Socket.priorWebsocketSuccess = \'websocket\' == this.transport.name;\r\n  this." +
                    "emit(\'open\');\r\n  this.flush();\r\n\r\n  // we check for `readyState` in case an `ope" +
                    "n`\r\n  // listener already closed the socket\r\n  if (\'open\' == this.readyState && " +
                    "this.upgrade && this.transport.pause) {\r\n    debug(\'starting upgrade probes\');\r\n" +
                    "    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n      this.probe(th" +
                    "is.upgrades[i]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles a packet.\r\n *\r\n * @api priva" +
                    "te\r\n */\r\n\r\nSocket.prototype.onPacket = function (packet) {\r\n  if (\'opening\' == t" +
                    "his.readyState || \'open\' == this.readyState) {\r\n    debug(\'socket receive: type " +
                    "\"%s\", data \"%s\"\', packet.type, packet.data);\r\n\r\n    this.emit(\'packet\', packet);" +
                    "\r\n\r\n    // Socket is live - any packet counts\r\n    this.emit(\'heartbeat\');\r\n\r\n  " +
                    "  switch (packet.type) {\r\n      case \'open\':\r\n        this.onHandshake(parsejson" +
                    "(packet.data));\r\n        break;\r\n\r\n      case \'pong\':\r\n        this.setPing();\r\n" +
                    "        break;\r\n\r\n      case \'error\':\r\n        var err = new Error(\'server error" +
                    "\');\r\n        err.code = packet.data;\r\n        this.emit(\'error\', err);\r\n        " +
                    "break;\r\n\r\n      case \'message\':\r\n        this.emit(\'data\', packet.data);\r\n      " +
                    "  this.emit(\'message\', packet.data);\r\n        break;\r\n    }\r\n  } else {\r\n    deb" +
                    "ug(\'packet received with socket readyState \"%s\"\', this.readyState);\r\n  }\r\n};\r\n\r\n" +
                    "/**\r\n * Called upon handshake completion.\r\n *\r\n * @param {Object} handshake obj\r" +
                    "\n * @api private\r\n */\r\n\r\nSocket.prototype.onHandshake = function (data) {\r\n  thi" +
                    "s.emit(\'handshake\', data);\r\n  this.id = data.sid;\r\n  this.transport.query.sid = " +
                    "data.sid;\r\n  this.upgrades = this.filterUpgrades(data.upgrades);\r\n  this.pingInt" +
                    "erval = data.pingInterval;\r\n  this.pingTimeout = data.pingTimeout;\r\n  this.onOpe" +
                    "n();\r\n  // In case open handler closes socket\r\n  if  (\'closed\' == this.readyStat" +
                    "e) return;\r\n  this.setPing();\r\n\r\n  // Prolong liveness of socket on heartbeat\r\n " +
                    " this.removeListener(\'heartbeat\', this.onHeartbeat);\r\n  this.on(\'heartbeat\', thi" +
                    "s.onHeartbeat);\r\n};\r\n\r\n/**\r\n * Resets ping timeout.\r\n *\r\n * @api private\r\n */\r\n\r" +
                    "\nSocket.prototype.onHeartbeat = function (timeout) {\r\n  clearTimeout(this.pingTi" +
                    "meoutTimer);\r\n  var self = this;\r\n  self.pingTimeoutTimer = setTimeout(function " +
                    "() {\r\n    if (\'closed\' == self.readyState) return;\r\n    self.onClose(\'ping timeo" +
                    "ut\');\r\n  }, timeout || (self.pingInterval + self.pingTimeout));\r\n};\r\n\r\n/**\r\n * P" +
                    "ings server every `this.pingInterval` and expects response\r\n * within `this.ping" +
                    "Timeout` or closes connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.set" +
                    "Ping = function () {\r\n  var self = this;\r\n  clearTimeout(self.pingIntervalTimer)" +
                    ";\r\n  self.pingIntervalTimer = setTimeout(function () {\r\n    debug(\'writing ping " +
                    "packet - expecting pong within %sms\', self.pingTimeout);\r\n    self.ping();\r\n    " +
                    "self.onHeartbeat(self.pingTimeout);\r\n  }, self.pingInterval);\r\n};\r\n\r\n/**\r\n* Send" +
                    "s a ping packet.\r\n*\r\n* @api public\r\n*/\r\n\r\nSocket.prototype.ping = function () {\r" +
                    "\n  this.sendPacket(\'ping\');\r\n};\r\n\r\n/**\r\n * Called on `drain` event\r\n *\r\n * @api " +
                    "private\r\n */\r\n\r\nSocket.prototype.onDrain = function() {\r\n  for (var i = 0; i < t" +
                    "his.prevBufferLen; i++) {\r\n    if (this.callbackBuffer[i]) {\r\n      this.callbac" +
                    "kBuffer[i]();\r\n    }\r\n  }\r\n\r\n  this.writeBuffer.splice(0, this.prevBufferLen);\r\n" +
                    "  this.callbackBuffer.splice(0, this.prevBufferLen);\r\n\r\n  // setting prevBufferL" +
                    "en = 0 is very important\r\n  // for example, when upgrading, upgrade packet is se" +
                    "nt over,\r\n  // and a nonzero prevBufferLen could cause problems on `drain`\r\n  th" +
                    "is.prevBufferLen = 0;\r\n\r\n  if (this.writeBuffer.length == 0) {\r\n    this.emit(\'d" +
                    "rain\');\r\n  } else {\r\n    this.flush();\r\n  }\r\n};\r\n\r\n/**\r\n * Flush write buffers.\r" +
                    "\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.flush = function () {\r\n  if (\'clos" +
                    "ed\' != this.readyState && this.transport.writable &&\r\n    !this.upgrading && thi" +
                    "s.writeBuffer.length) {\r\n    debug(\'flushing %d packets in socket\', this.writeBu" +
                    "ffer.length);\r\n    this.transport.send(this.writeBuffer);\r\n    // keep track of " +
                    "current length of writeBuffer\r\n    // splice writeBuffer and callbackBuffer on `" +
                    "drain`\r\n    this.prevBufferLen = this.writeBuffer.length;\r\n    this.emit(\'flush\'" +
                    ");\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a message.\r\n *\r\n * @param {String} message.\r\n * @pa" +
                    "ram {Function} callback function.\r\n * @return {Socket} for chaining.\r\n * @api pu" +
                    "blic\r\n */\r\n\r\nSocket.prototype.write =\r\nSocket.prototype.send = function (msg, fn" +
                    ") {\r\n  this.sendPacket(\'message\', msg, fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends" +
                    " a packet.\r\n *\r\n * @param {String} packet type.\r\n * @param {String} data.\r\n * @p" +
                    "aram {Function} callback function.\r\n * @api private\r\n */\r\n\r\nSocket.prototype.sen" +
                    "dPacket = function (type, data, fn) {\r\n  if (\'closing\' == this.readyState || \'cl" +
                    "osed\' == this.readyState) {\r\n    return;\r\n  }\r\n\r\n  var packet = { type: type, da" +
                    "ta: data };\r\n  this.emit(\'packetCreate\', packet);\r\n  this.writeBuffer.push(packe" +
                    "t);\r\n  this.callbackBuffer.push(fn);\r\n  this.flush();\r\n};\r\n\r\n/**\r\n * Closes the " +
                    "connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.close = function () {\r" +
                    "\n  if (\'opening\' == this.readyState || \'open\' == this.readyState) {\r\n    this.re" +
                    "adyState = \'closing\';\r\n\r\n    var self = this;\r\n\r\n    function close() {\r\n      s" +
                    "elf.onClose(\'forced close\');\r\n      debug(\'socket closing - telling transport to" +
                    " close\');\r\n      self.transport.close();\r\n    }\r\n\r\n    function cleanupAndClose(" +
                    ") {\r\n      self.removeListener(\'upgrade\', cleanupAndClose);\r\n      self.removeLi" +
                    "stener(\'upgradeError\', cleanupAndClose);\r\n      close();\r\n    }\r\n\r\n    function " +
                    "waitForUpgrade() {\r\n      // wait for upgrade to finish since we can\'t send pack" +
                    "ets while pausing a transport\r\n      self.once(\'upgrade\', cleanupAndClose);\r\n   " +
                    "   self.once(\'upgradeError\', cleanupAndClose);\r\n    }\r\n\r\n    if (this.writeBuffe" +
                    "r.length) {\r\n      this.once(\'drain\', function() {\r\n        if (this.upgrading) " +
                    "{\r\n          waitForUpgrade();\r\n        } else {\r\n          close();\r\n        }\r" +
                    "\n      });\r\n    } else if (this.upgrading) {\r\n      waitForUpgrade();\r\n    } els" +
                    "e {\r\n      close();\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon tra" +
                    "nsport error\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onError = function (e" +
                    "rr) {\r\n  debug(\'socket error %j\', err);\r\n  Socket.priorWebsocketSuccess = false;" +
                    "\r\n  this.emit(\'error\', err);\r\n  this.onClose(\'transport error\', err);\r\n};\r\n\r\n/**" +
                    "\r\n * Called upon transport close.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype." +
                    "onClose = function (reason, desc) {\r\n  if (\'opening\' == this.readyState || \'open" +
                    "\' == this.readyState || \'closing\' == this.readyState) {\r\n    debug(\'socket close" +
                    " with reason: \"%s\"\', reason);\r\n    var self = this;\r\n\r\n    // clear timers\r\n    " +
                    "clearTimeout(this.pingIntervalTimer);\r\n    clearTimeout(this.pingTimeoutTimer);\r" +
                    "\n\r\n    // clean buffers in next tick, so developers can still\r\n    // grab the b" +
                    "uffers on `close` event\r\n    setTimeout(function() {\r\n      self.writeBuffer = [" +
                    "];\r\n      self.callbackBuffer = [];\r\n      self.prevBufferLen = 0;\r\n    }, 0);\r\n" +
                    "\r\n    // stop event from firing again for transport\r\n    this.transport.removeAl" +
                    "lListeners(\'close\');\r\n\r\n    // ensure transport won\'t stay open\r\n    this.transp" +
                    "ort.close();\r\n\r\n    // ignore further transport communication\r\n    this.transpor" +
                    "t.removeAllListeners();\r\n\r\n    // set ready state\r\n    this.readyState = \'closed" +
                    "\';\r\n\r\n    // clear session id\r\n    this.id = null;\r\n\r\n    // emit close event\r\n " +
                    "   this.emit(\'close\', reason, desc);\r\n  }\r\n};\r\n\r\n/**\r\n * Filters upgrades, retur" +
                    "ning only those matching client transports.\r\n *\r\n * @param {Array} server upgrad" +
                    "es\r\n * @api private\r\n *\r\n */\r\n\r\nSocket.prototype.filterUpgrades = function (upgr" +
                    "ades) {\r\n  var filteredUpgrades = [];\r\n  for (var i = 0, j = upgrades.length; i<" +
                    "j; i++) {\r\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(u" +
                    "pgrades[i]);\r\n  }\r\n  return filteredUpgrades;\r\n};\r\n\r\n}).call(this,typeof self !=" +
                    "= \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./trans" +
                    "port\":4,\"./transports\":5,\"component-emitter\":12,\"debug\":14,\"engine.io-parser\":17" +
                    ",\"indexof\":25,\"parsejson\":26,\"parseqs\":27,\"parseuri\":28}],4:[function(_dereq_,mo" +
                    "dule,exports){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = _dereq_(\'engin" +
                    "e.io-parser\');\r\nvar Emitter = _dereq_(\'component-emitter\');\r\n\r\n\r\n/**\r\n * Module " +
                    "exports.\r\n */\r\n\r\nmodule.exports = Transport;\r\n\r\n/**\r\n * Transport abstract const" +
                    "ructor.\r\n *\r\n * @param {Object} options.\r\n * @api private\r\n */\r\n\r\nfunction Trans" +
                    "port (opts) {\r\n  this.path = opts.path;\r\n  this.hostname = opts.hostname;\r\n  thi" +
                    "s.port = opts.port;\r\n  this.secure = opts.secure;\r\n  this.query = opts.query;\r\n " +
                    " this.timestampParam = opts.timestampParam;\r\n  this.timestampRequests = opts.tim" +
                    "estampRequests;\r\n  this.readyState = \'\';\r\n  this.agent = opts.agent || false;\r\n " +
                    " this.socket = opts.socket;\r\n  this.enablesXDR = opts.enablesXDR;\r\n}\r\n\r\n/**\r\n * " +
                    "Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Transport.prototype);\r\n\r\n/**\r\n * A counter use" +
                    "d to prevent collisions in the timestamps used\r\n * for cache busting.\r\n */\r\n\r\nTr" +
                    "ansport.timestamps = 0;\r\n\r\n/**\r\n * Emits an error.\r\n *\r\n * @param {String} str\r\n" +
                    " * @return {Transport} for chaining\r\n * @api public\r\n */\r\n\r\nTransport.prototype." +
                    "onError = function (msg, desc) {\r\n  var err = new Error(msg);\r\n  err.type = \'Tra" +
                    "nsportError\';\r\n  err.description = desc;\r\n  this.emit(\'error\', err);\r\n  return t" +
                    "his;\r\n};\r\n\r\n/**\r\n * Opens the transport.\r\n *\r\n * @api public\r\n */\r\n\r\nTransport.p" +
                    "rototype.open = function () {\r\n  if (\'closed\' == this.readyState || \'\' == this.r" +
                    "eadyState) {\r\n    this.readyState = \'opening\';\r\n    this.doOpen();\r\n  }\r\n\r\n  ret" +
                    "urn this;\r\n};\r\n\r\n/**\r\n * Closes the transport.\r\n *\r\n * @api private\r\n */\r\n\r\nTran" +
                    "sport.prototype.close = function () {\r\n  if (\'opening\' == this.readyState || \'op" +
                    "en\' == this.readyState) {\r\n    this.doClose();\r\n    this.onClose();\r\n  }\r\n\r\n  re" +
                    "turn this;\r\n};\r\n\r\n/**\r\n * Sends multiple packets.\r\n *\r\n * @param {Array} packets" +
                    "\r\n * @api private\r\n */\r\n\r\nTransport.prototype.send = function(packets){\r\n  if (\'" +
                    "open\' == this.readyState) {\r\n    this.write(packets);\r\n  } else {\r\n    throw new" +
                    " Error(\'Transport not open\');\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon open\r\n *\r\n * @api " +
                    "private\r\n */\r\n\r\nTransport.prototype.onOpen = function () {\r\n  this.readyState = " +
                    "\'open\';\r\n  this.writable = true;\r\n  this.emit(\'open\');\r\n};\r\n\r\n/**\r\n * Called wit" +
                    "h data.\r\n *\r\n * @param {String} data\r\n * @api private\r\n */\r\n\r\nTransport.prototyp" +
                    "e.onData = function(data){\r\n  var packet = parser.decodePacket(data, this.socket" +
                    ".binaryType);\r\n  this.onPacket(packet);\r\n};\r\n\r\n/**\r\n * Called with a decoded pac" +
                    "ket.\r\n */\r\n\r\nTransport.prototype.onPacket = function (packet) {\r\n  this.emit(\'pa" +
                    "cket\', packet);\r\n};\r\n\r\n/**\r\n * Called upon close.\r\n *\r\n * @api private\r\n */\r\n\r\nT" +
                    "ransport.prototype.onClose = function () {\r\n  this.readyState = \'closed\';\r\n  thi" +
                    "s.emit(\'close\');\r\n};\r\n\r\n},{\"component-emitter\":12,\"engine.io-parser\":17}],5:[fun" +
                    "ction(_dereq_,module,exports){\r\n(function (global){\r\n/**\r\n * Module dependencies" +
                    "\r\n */\r\n\r\nvar XMLHttpRequest = _dereq_(\'xmlhttprequest\');\r\nvar XHR = _dereq_(\'./p" +
                    "olling-xhr\');\r\nvar JSONP = _dereq_(\'./polling-jsonp\');\r\nvar websocket = _dereq_(" +
                    "\'./websocket\');\r\n\r\n/**\r\n * Export transports.\r\n */\r\n\r\nexports.polling = polling;" +
                    "\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic constr" +
                    "uctor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api priv" +
                    "ate\r\n */\r\n\r\nfunction polling(opts){\r\n  var xhr;\r\n  var xd = false;\r\n  var xs = f" +
                    "alse;\r\n  var jsonp = false !== opts.jsonp;\r\n\r\n  if (global.location) {\r\n    var " +
                    "isSSL = \'https:\' == location.protocol;\r\n    var port = location.port;\r\n\r\n    // " +
                    "some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSS" +
                    "L ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname != location.hostname || port != o" +
                    "pts.port;\r\n    xs = opts.secure != isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  opts.x" +
                    "scheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if (\'open\' in xhr && !opts." +
                    "forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw new " +
                    "Error(\'JSONP disabled\');\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n\r\n}).call(this,ty" +
                    "peof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r" +
                    "\n},{\"./polling-jsonp\":6,\"./polling-xhr\":7,\"./websocket\":9,\"xmlhttprequest\":10}]," +
                    "6:[function(_dereq_,module,exports){\r\n(function (global){\r\n\r\n/**\r\n * Module requ" +
                    "irements.\r\n */\r\n\r\nvar Polling = _dereq_(\'./polling\');\r\nvar inherit = _dereq_(\'co" +
                    "mponent-inherit\');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = JSONPPoll" +
                    "ing;\r\n\r\n/**\r\n * Cached regular expressions.\r\n */\r\n\r\nvar rNewline = /\\n/g;\r\nvar r" +
                    "EscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nvar callback" +
                    "s;\r\n\r\n/**\r\n * Callbacks count.\r\n */\r\n\r\nvar index = 0;\r\n\r\n/**\r\n * Noop.\r\n */\r\n\r\nf" +
                    "unction empty () { }\r\n\r\n/**\r\n * JSONP Polling constructor.\r\n *\r\n * @param {Objec" +
                    "t} opts.\r\n * @api public\r\n */\r\n\r\nfunction JSONPPolling (opts) {\r\n  Polling.call(" +
                    "this, opts);\r\n\r\n  this.query = this.query || {};\r\n\r\n  // define global callbacks" +
                    " array if not present\r\n  // we do this here (lazily) to avoid unneeded global po" +
                    "llution\r\n  if (!callbacks) {\r\n    // we need to consider multiple engines in the" +
                    " same page\r\n    if (!global.___eio) global.___eio = [];\r\n    callbacks = global." +
                    "___eio;\r\n  }\r\n\r\n  // callback identifier\r\n  this.index = callbacks.length;\r\n\r\n  " +
                    "// add callback to jsonp global\r\n  var self = this;\r\n  callbacks.push(function (" +
                    "msg) {\r\n    self.onData(msg);\r\n  });\r\n\r\n  // append to query string\r\n  this.quer" +
                    "y.j = this.index;\r\n\r\n  // prevent spurious errors from being emitted when the wi" +
                    "ndow is unloaded\r\n  if (global.document && global.addEventListener) {\r\n    globa" +
                    "l.addEventListener(\'beforeunload\', function () {\r\n      if (self.script) self.sc" +
                    "ript.onerror = empty;\r\n    }, false);\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r" +
                    "\n */\r\n\r\ninherit(JSONPPolling, Polling);\r\n\r\n/*\r\n * JSONP only supports binary as " +
                    "base64 encoded strings\r\n */\r\n\r\nJSONPPolling.prototype.supportsBinary = false;\r\n\r" +
                    "\n/**\r\n * Closes the socket.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype." +
                    "doClose = function () {\r\n  if (this.script) {\r\n    this.script.parentNode.remove" +
                    "Child(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  if (this.form) {\r\n    thi" +
                    "s.form.parentNode.removeChild(this.form);\r\n    this.form = null;\r\n    this.ifram" +
                    "e = null;\r\n  }\r\n\r\n  Polling.prototype.doClose.call(this);\r\n};\r\n\r\n/**\r\n * Starts " +
                    "a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doPoll = funct" +
                    "ion () {\r\n  var self = this;\r\n  var script = document.createElement(\'script\');\r\n" +
                    "\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n  " +
                    "  this.script = null;\r\n  }\r\n\r\n  script.async = true;\r\n  script.src = this.uri();" +
                    "\r\n  script.onerror = function(e){\r\n    self.onError(\'jsonp poll error\',e);\r\n  };" +
                    "\r\n\r\n  var insertAt = document.getElementsByTagName(\'script\')[0];\r\n  insertAt.par" +
                    "entNode.insertBefore(script, insertAt);\r\n  this.script = script;\r\n\r\n  var isUAge" +
                    "cko = \'undefined\' != typeof navigator && /gecko/i.test(navigator.userAgent);\r\n  " +
                    "\r\n  if (isUAgecko) {\r\n    setTimeout(function () {\r\n      var iframe = document." +
                    "createElement(\'iframe\');\r\n      document.body.appendChild(iframe);\r\n      docume" +
                    "nt.body.removeChild(iframe);\r\n    }, 100);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes with a hid" +
                    "den iframe.\r\n *\r\n * @param {String} data to send\r\n * @param {Function} called up" +
                    "on flush.\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doWrite = function (da" +
                    "ta, fn) {\r\n  var self = this;\r\n\r\n  if (!this.form) {\r\n    var form = document.cr" +
                    "eateElement(\'form\');\r\n    var area = document.createElement(\'textarea\');\r\n    va" +
                    "r id = this.iframeId = \'eio_iframe_\' + this.index;\r\n    var iframe;\r\n\r\n    form." +
                    "className = \'socketio\';\r\n    form.style.position = \'absolute\';\r\n    form.style.t" +
                    "op = \'-1000px\';\r\n    form.style.left = \'-1000px\';\r\n    form.target = id;\r\n    fo" +
                    "rm.method = \'POST\';\r\n    form.setAttribute(\'accept-charset\', \'utf-8\');\r\n    area" +
                    ".name = \'d\';\r\n    form.appendChild(area);\r\n    document.body.appendChild(form);\r" +
                    "\n\r\n    this.form = form;\r\n    this.area = area;\r\n  }\r\n\r\n  this.form.action = thi" +
                    "s.uri();\r\n\r\n  function complete () {\r\n    initIframe();\r\n    fn();\r\n  }\r\n\r\n  fun" +
                    "ction initIframe () {\r\n    if (self.iframe) {\r\n      try {\r\n        self.form.re" +
                    "moveChild(self.iframe);\r\n      } catch (e) {\r\n        self.onError(\'jsonp pollin" +
                    "g iframe removal error\', e);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // ie6 dynamic " +
                    "iframes with target=\"\" support (thanks Chris Lambacher)\r\n      var html = \'<ifra" +
                    "me src=\"javascript:0\" name=\"\'+ self.iframeId +\'\">\';\r\n      iframe = document.cre" +
                    "ateElement(html);\r\n    } catch (e) {\r\n      iframe = document.createElement(\'ifr" +
                    "ame\');\r\n      iframe.name = self.iframeId;\r\n      iframe.src = \'javascript:0\';\r\n" +
                    "    }\r\n\r\n    iframe.id = self.iframeId;\r\n\r\n    self.form.appendChild(iframe);\r\n " +
                    "   self.iframe = iframe;\r\n  }\r\n\r\n  initIframe();\r\n\r\n  // escape \\n to prevent it" +
                    " from being converted into \\r\\n by some UAs\r\n  // double escaping is required fo" +
                    "r escaped new lines because unescaping of new lines can be done safely on server" +
                    "-side\r\n  data = data.replace(rEscapedNewline, \'\\\\\\n\');\r\n  this.area.value = data" +
                    ".replace(rNewline, \'\\\\n\');\r\n\r\n  try {\r\n    this.form.submit();\r\n  } catch(e) {}\r" +
                    "\n\r\n  if (this.iframe.attachEvent) {\r\n    this.iframe.onreadystatechange = functi" +
                    "on(){\r\n      if (self.iframe.readyState == \'complete\') {\r\n        complete();\r\n " +
                    "     }\r\n    };\r\n  } else {\r\n    this.iframe.onload = complete;\r\n  }\r\n};\r\n\r\n}).ca" +
                    "ll(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? win" +
                    "dow : {})\r\n},{\"./polling\":8,\"component-inherit\":13}],7:[function(_dereq_,module," +
                    "exports){\r\n(function (global){\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar XMLHttp" +
                    "Request = _dereq_(\'xmlhttprequest\');\r\nvar Polling = _dereq_(\'./polling\');\r\nvar E" +
                    "mitter = _dereq_(\'component-emitter\');\r\nvar inherit = _dereq_(\'component-inherit" +
                    "\');\r\nvar debug = _dereq_(\'debug\')(\'engine.io-client:polling-xhr\');\r\n\r\nif(typeof " +
                    "spike === \'undefined\')\r\n\tspike = new Object();\r\nspike.Emitter = Emitter;\r\nspike." +
                    "debug = _dereq_(\'debug\')(\'spike\');\r\n\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.e" +
                    "xports = XHR;\r\nmodule.exports.Request = Request;\r\n\r\n/**\r\n * Empty function\r\n */\r" +
                    "\n\r\nfunction empty(){}\r\n\r\n/**\r\n * XHR Polling constructor.\r\n *\r\n * @param {Object" +
                    "} opts\r\n * @api public\r\n */\r\n\r\nfunction XHR(opts){\r\n  Polling.call(this, opts);\r" +
                    "\n\r\n  if (global.location) {\r\n    var isSSL = \'https:\' == location.protocol;\r\n   " +
                    " var port = location.port;\r\n\r\n    // some user agents have empty `location.port`" +
                    "\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    this.xd = opts." +
                    "hostname != global.location.hostname ||\r\n      port != opts.port;\r\n    this.xs =" +
                    " opts.secure != isSSL;\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit" +
                    "(XHR, Polling);\r\n\r\n/**\r\n * XHR supports binary\r\n */\r\n\r\nXHR.prototype.supportsBin" +
                    "ary = true;\r\n\r\n/**\r\n * Creates a request.\r\n *\r\n * @param {String} method\r\n * @ap" +
                    "i private\r\n */\r\n\r\nXHR.prototype.request = function(opts){\r\n  opts = opts || {};\r" +
                    "\n  opts.uri = this.uri();\r\n  opts.xd = this.xd;\r\n  opts.xs = this.xs;\r\n  opts.ag" +
                    "ent = this.agent || false;\r\n  opts.supportsBinary = this.supportsBinary;\r\n  opts" +
                    ".enablesXDR = this.enablesXDR;\r\n  return new Request(opts);\r\n};\r\n\r\n/**\r\n * Sends" +
                    " data.\r\n *\r\n * @param {String} data to send.\r\n * @param {Function} called upon f" +
                    "lush.\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doWrite = function(data, fn){\r\n  va" +
                    "r isBinary = typeof data !== \'string\' && data !== undefined;\r\n  var req = this.r" +
                    "equest({ method: \'POST\', data: data, isBinary: isBinary });\r\n  var self = this;\r" +
                    "\n  req.on(\'success\', fn);\r\n  req.on(\'error\', function(err){\r\n    self.onError(\'x" +
                    "hr post error\', err);\r\n  });\r\n  this.sendXhr = req;\r\n};\r\n\r\n/**\r\n * Starts a poll" +
                    " cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doPoll = function(){\r\n  debug" +
                    "(\'xhr poll\');\r\n  var req = this.request();\r\n  var self = this;\r\n  req.on(\'data\'," +
                    " function(data){\r\n    self.onData(data);\r\n  });\r\n  req.on(\'error\', function(err)" +
                    "{\r\n    self.onError(\'xhr poll error\', err);\r\n  });\r\n  this.pollXhr = req;\r\n};\r\n\r" +
                    "\n/**\r\n * Request constructor\r\n *\r\n * @param {Object} options\r\n * @api public\r\n *" +
                    "/\r\n\r\nfunction Request(opts){\r\n  this.method = opts.method || \'GET\';\r\n  this.uri " +
                    "= opts.uri;\r\n  this.xd = !!opts.xd;\r\n  this.xs = !!opts.xs;\r\n  this.async = fals" +
                    "e !== opts.async;\r\n  this.data = undefined != opts.data ? opts.data : null;\r\n  t" +
                    "his.agent = opts.agent;\r\n  this.isBinary = opts.isBinary;\r\n  this.supportsBinary" +
                    " = opts.supportsBinary;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.create();\r" +
                    "\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Request.prototype);\r\n\r\n/**\r\n * C" +
                    "reates the XHR object and sends the request.\r\n *\r\n * @api private\r\n */\r\n\r\nReques" +
                    "t.prototype.create = function(){\r\n  var xhr = this.xhr = new XMLHttpRequest({ ag" +
                    "ent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR" +
                    " });\r\n  var self = this;\r\n\r\n  try {\r\n    debug(\'xhr open %s: %s\', this.method, t" +
                    "his.uri);\r\n    xhr.open(this.method, this.uri, this.async);\r\n    if (this.suppor" +
                    "tsBinary) {\r\n      // This has to be done after open because Firefox is stupid\r\n" +
                    "      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhtt" +
                    "prequest-in-a-firefox-extension\r\n      xhr.responseType = \'arraybuffer\';\r\n    }\r" +
                    "\n\r\n    if (\'POST\' == this.method) {\r\n      try {\r\n        if (this.isBinary) {\r\n" +
                    "          xhr.setRequestHeader(\'Content-type\', \'application/octet-stream\');\r\n   " +
                    "     } else {\r\n          xhr.setRequestHeader(\'Content-type\', \'text/plain;charse" +
                    "t=UTF-8\');\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    // ie6 check\r\n    if (" +
                    "\'withCredentials\' in xhr) {\r\n      xhr.withCredentials = true;\r\n    }\r\n\r\n    if " +
                    "(this.hasXDR()) {\r\n      xhr.onload = function(){\r\n        self.onLoad();\r\n     " +
                    " };\r\n      xhr.onerror = function(){\r\n        self.onError(xhr.responseText);\r\n " +
                    "     };\r\n    } else {\r\n      xhr.onreadystatechange = function(){\r\n        if (4" +
                    " != xhr.readyState) return;\r\n        if (200 == xhr.status || 1223 == xhr.status" +
                    ") {\r\n          self.onLoad();\r\n        } else {\r\n          // make sure the `err" +
                    "or` event handler that\'s user-set\r\n          // does not throw in the same tick " +
                    "and gets caught here\r\n          setTimeout(function(){\r\n            self.onError" +
                    "(xhr.status);\r\n          }, 0);\r\n        }\r\n      };\r\n    }\r\n\r\n    debug(\'xhr da" +
                    "ta %s\', this.data);\r\n    xhr.send(this.data);\r\n  } catch (e) {\r\n    // Need to d" +
                    "efer since .create() is called directly fhrom the constructor\r\n    // and thus t" +
                    "he \'error\' event can only be only bound *after* this exception\r\n    // occurs.  " +
                    "Therefore, also, we cannot throw here at all.\r\n    setTimeout(function() {\r\n    " +
                    "  self.onError(e);\r\n    }, 0);\r\n    return;\r\n  }\r\n\r\n  if (global.document) {\r\n  " +
                    "  this.index = Request.requestsCount++;\r\n    Request.requests[this.index] = this" +
                    ";\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful response.\r\n *\r\n * @api private\r\n */" +
                    "\r\n\r\nRequest.prototype.onSuccess = function(){\r\n  this.emit(\'success\');\r\n  this.c" +
                    "leanup();\r\n};\r\n\r\n/**\r\n * Called if we have data.\r\n *\r\n * @api private\r\n */\r\n\r\nRe" +
                    "quest.prototype.onData = function(data){\r\n  this.emit(\'data\', data);\r\n  this.onS" +
                    "uccess();\r\n};\r\n\r\n/**\r\n * Called upon error.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest" +
                    ".prototype.onError = function(err){\r\n  this.emit(\'error\', err);\r\n  this.cleanup(" +
                    ");\r\n};\r\n\r\n/**\r\n * Cleans up house.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototyp" +
                    "e.cleanup = function(){\r\n  if (\'undefined\' == typeof this.xhr || null === this.x" +
                    "hr) {\r\n    return;\r\n  }\r\n  // xmlhttprequest\r\n  if (this.hasXDR()) {\r\n    this.x" +
                    "hr.onload = this.xhr.onerror = empty;\r\n  } else {\r\n    this.xhr.onreadystatechan" +
                    "ge = empty;\r\n  }\r\n\r\n  try {\r\n    this.xhr.abort();\r\n  } catch(e) {}\r\n\r\n  if (glo" +
                    "bal.document) {\r\n    delete Request.requests[this.index];\r\n  }\r\n\r\n  this.xhr = n" +
                    "ull;\r\n};\r\n\r\n/**\r\n * Called upon load.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.proto" +
                    "type.onLoad = function(){\r\n  var data;\r\n  try {\r\n    var contentType;\r\n    try {" +
                    "\r\n      contentType = this.xhr.getResponseHeader(\'Content-Type\').split(\';\')[0];\r" +
                    "\n    } catch (e) {}\r\n    if (contentType === \'application/octet-stream\') {\r\n    " +
                    "  data = this.xhr.response;\r\n    } else {\r\n      if (!this.supportsBinary) {\r\n  " +
                    "      data = this.xhr.responseText;\r\n      } else {\r\n        data = \'ok\';\r\n     " +
                    " }\r\n    }\r\n  } catch (e) {\r\n    this.onError(e);\r\n  }\r\n  if (null != data) {\r\n  " +
                    "  this.onData(data);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if it has XDomainRequest.\r\n *\r\n *" +
                    " @api private\r\n */\r\n\r\nRequest.prototype.hasXDR = function(){\r\n  return \'undefine" +
                    "d\' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\r\n};\r\n\r\n/**\r\n" +
                    " * Aborts the request.\r\n *\r\n * @api public\r\n */\r\n\r\nRequest.prototype.abort = fun" +
                    "ction(){\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Aborts pending requests when unloadin" +
                    "g the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) an" +
                    "d to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nif (global.document) " +
                    "{\r\n  Request.requestsCount = 0;\r\n  Request.requests = {};\r\n  if (global.attachEv" +
                    "ent) {\r\n    global.attachEvent(\'onunload\', unloadHandler);\r\n  } else if (global." +
                    "addEventListener) {\r\n    global.addEventListener(\'beforeunload\', unloadHandler, " +
                    "false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler() {\r\n  for (var i in Request.requests)" +
                    " {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abo" +
                    "rt();\r\n    }\r\n  }\r\n}\r\n\r\n}).call(this,typeof self !== \"undefined\" ? self : typeof" +
                    " window !== \"undefined\" ? window : {})\r\n},{\"./polling\":8,\"component-emitter\":12," +
                    "\"component-inherit\":13,\"debug\":14,\"xmlhttprequest\":10}],8:[function(_dereq_,modu" +
                    "le,exports){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = _dereq_(\'../t" +
                    "ransport\');\r\nvar parseqs = _dereq_(\'parseqs\');\r\nvar parser = _dereq_(\'engine.io-" +
                    "parser\');\r\nvar inherit = _dereq_(\'component-inherit\');\r\nvar debug = _dereq_(\'deb" +
                    "ug\')(\'engine.io-client:polling\');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.expo" +
                    "rts = Polling;\r\n\r\n/**\r\n * Is XHR2 supported?\r\n */\r\n\r\nvar hasXHR2 = (function() {" +
                    "\r\n  var XMLHttpRequest = _dereq_(\'xmlhttprequest\');\r\n  var xhr = new XMLHttpRequ" +
                    "est({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\n/**\r\n * P" +
                    "olling interface.\r\n *\r\n * @param {Object} opts\r\n * @api private\r\n */\r\n\r\nfunction" +
                    " Polling(opts){\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (!hasXHR2" +
                    " || forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  Transport.call(this" +
                    ", opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(Polling, Transpo" +
                    "rt);\r\n\r\n/**\r\n * Transport name.\r\n */\r\n\r\nPolling.prototype.name = \'polling\';\r\n\r\n/" +
                    "**\r\n * Opens the socket (triggers polling). We write a PING message to determine" +
                    "\r\n * when the transport is open.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype." +
                    "doOpen = function(){\r\n  this.poll();\r\n};\r\n\r\n/**\r\n * Pauses polling.\r\n *\r\n * @par" +
                    "am {Function} callback upon buffers are flushed and transport is paused\r\n * @api" +
                    " private\r\n */\r\n\r\nPolling.prototype.pause = function(onPause){\r\n  var pending = 0" +
                    ";\r\n  var self = this;\r\n\r\n  this.readyState = \'pausing\';\r\n\r\n  function pause(){\r\n" +
                    "    debug(\'paused\');\r\n    self.readyState = \'paused\';\r\n    onPause();\r\n  }\r\n\r\n  " +
                    "if (this.polling || !this.writable) {\r\n    var total = 0;\r\n\r\n    if (this.pollin" +
                    "g) {\r\n      debug(\'we are currently polling - waiting to pause\');\r\n      total++" +
                    ";\r\n      this.once(\'pollComplete\', function(){\r\n        debug(\'pre-pause polling" +
                    " complete\');\r\n        --total || pause();\r\n      });\r\n    }\r\n\r\n    if (!this.wri" +
                    "table) {\r\n      debug(\'we are currently writing - waiting to pause\');\r\n      tot" +
                    "al++;\r\n      this.once(\'drain\', function(){\r\n        debug(\'pre-pause writing co" +
                    "mplete\');\r\n        --total || pause();\r\n      });\r\n    }\r\n  } else {\r\n    pause(" +
                    ");\r\n  }\r\n};\r\n\r\n/**\r\n * Starts polling cycle.\r\n *\r\n * @api public\r\n */\r\n\r\nPolling" +
                    ".prototype.poll = function(){\r\n  debug(\'polling\');\r\n  this.polling = true;\r\n  th" +
                    "is.doPoll();\r\n  this.emit(\'poll\');\r\n};\r\n\r\n/**\r\n * Overloads onData to detect pay" +
                    "loads.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.onData = function(data){\r\n" +
                    "  var self = this;\r\n  debug(\'polling got data %s\', data);\r\n  var callback = func" +
                    "tion(packet, index, total) {\r\n    // if its the first message we consider the tr" +
                    "ansport open\r\n    if (\'opening\' == self.readyState) {\r\n      self.onOpen();\r\n   " +
                    " }\r\n\r\n    // if its a close packet, we close the ongoing requests\r\n    if (\'clos" +
                    "e\' == packet.type) {\r\n      self.onClose();\r\n      return false;\r\n    }\r\n\r\n    /" +
                    "/ otherwise bypass onData and handle the message\r\n    self.onPacket(packet);\r\n  " +
                    "};\r\n\r\n  // decode payload\r\n  parser.decodePayload(data, this.socket.binaryType, " +
                    "callback);\r\n\r\n  // if an event did not trigger closing\r\n  if (\'closed\' != this.r" +
                    "eadyState) {\r\n    // if we got data we\'re not polling\r\n    this.polling = false;" +
                    "\r\n    this.emit(\'pollComplete\');\r\n\r\n    if (\'open\' == this.readyState) {\r\n      " +
                    "this.poll();\r\n    } else {\r\n      debug(\'ignoring poll - transport state \"%s\"\', " +
                    "this.readyState);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For polling, send a close packet.\r\n" +
                    " *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doClose = function(){\r\n  var self " +
                    "= this;\r\n\r\n  function close(){\r\n    debug(\'writing close packet\');\r\n    self.wri" +
                    "te([{ type: \'close\' }]);\r\n  }\r\n\r\n  if (\'open\' == this.readyState) {\r\n    debug(\'" +
                    "transport open - closing\');\r\n    close();\r\n  } else {\r\n    // in case we\'re tryi" +
                    "ng to close while\r\n    // handshaking is in progress (GH-164)\r\n    debug(\'transp" +
                    "ort not open - deferring close\');\r\n    this.once(\'open\', close);\r\n  }\r\n};\r\n\r\n/**" +
                    "\r\n * Writes a packets payload.\r\n *\r\n * @param {Array} data packets\r\n * @param {F" +
                    "unction} drain callback\r\n * @api private\r\n */\r\n\r\nPolling.prototype.write = funct" +
                    "ion(packets){\r\n  var self = this;\r\n  this.writable = false;\r\n  var callbackfn = " +
                    "function() {\r\n    self.writable = true;\r\n    self.emit(\'drain\');\r\n  };\r\n\r\n  var " +
                    "self = this;\r\n  parser.encodePayload(packets, this.supportsBinary, function(data" +
                    ") {\r\n    self.doWrite(data, callbackfn);\r\n  });\r\n};\r\n\r\n/**\r\n * Generates uri for" +
                    " connection.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.uri = function(){\r\n " +
                    " var query = this.query || {};\r\n  var schema = this.secure ? \'https\' : \'http\';\r\n" +
                    "  var port = \'\';\r\n\r\n  // cache busting is forced\r\n  if (false !== this.timestamp" +
                    "Requests) {\r\n    query[this.timestampParam] = +new Date + \'-\' + Transport.timest" +
                    "amps++;\r\n  }\r\n\r\n  if (!this.supportsBinary && !query.sid) {\r\n    query.b64 = 1;\r" +
                    "\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // avoid port if default for schem" +
                    "a\r\n  if (this.port && ((\'https\' == schema && this.port != 443) ||\r\n     (\'http\' " +
                    "== schema && this.port != 80))) {\r\n    port = \':\' + this.port;\r\n  }\r\n\r\n  // prep" +
                    "end ? to query\r\n  if (query.length) {\r\n    query = \'?\' + query;\r\n  }\r\n\r\n  return" +
                    " schema + \'://\' + this.hostname + port + this.path + query;\r\n};\r\n\r\n},{\"../transp" +
                    "ort\":4,\"component-inherit\":13,\"debug\":14,\"engine.io-parser\":17,\"parseqs\":27,\"xml" +
                    "httprequest\":10}],9:[function(_dereq_,module,exports){\r\n/**\r\n * Module dependenc" +
                    "ies.\r\n */\r\n\r\nvar Transport = _dereq_(\'../transport\');\r\nvar parser = _dereq_(\'eng" +
                    "ine.io-parser\');\r\nvar parseqs = _dereq_(\'parseqs\');\r\nvar inherit = _dereq_(\'comp" +
                    "onent-inherit\');\r\nvar debug = _dereq_(\'debug\')(\'engine.io-client:websocket\');\r\n\r" +
                    "\n/**\r\n * `ws` exposes a WebSocket-compatible interface in\r\n * Node, or the `WebS" +
                    "ocket` or `MozWebSocket` globals\r\n * in the browser.\r\n */\r\n\r\nvar WebSocket = _de" +
                    "req_(\'ws\');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = WS;\r\n\r\n/**\r\n * W" +
                    "ebSocket transport constructor.\r\n *\r\n * @api {Object} connection options\r\n * @ap" +
                    "i public\r\n */\r\n\r\nfunction WS(opts){\r\n  var forceBase64 = (opts && opts.forceBase" +
                    "64);\r\n  if (forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  Transport.c" +
                    "all(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(WS, Tran" +
                    "sport);\r\n\r\n/**\r\n * Transport name.\r\n *\r\n * @api public\r\n */\r\n\r\nWS.prototype.name" +
                    " = \'websocket\';\r\n\r\n/*\r\n * WebSockets support binary\r\n */\r\n\r\nWS.prototype.support" +
                    "sBinary = true;\r\n\r\n/**\r\n * Opens socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototy" +
                    "pe.doOpen = function(){\r\n  if (!this.check()) {\r\n    // let probe timeout\r\n    r" +
                    "eturn;\r\n  }\r\n\r\n  var self = this;\r\n  var uri = this.uri();\r\n  var protocols = vo" +
                    "id(0);\r\n  var opts = { agent: this.agent };\r\n\r\n  this.ws = new WebSocket(uri, pr" +
                    "otocols, opts);\r\n\r\n  if (this.ws.binaryType === undefined) {\r\n    this.supportsB" +
                    "inary = false;\r\n  }\r\n\r\n  this.ws.binaryType = \'arraybuffer\';\r\n  this.addEventLis" +
                    "teners();\r\n};\r\n\r\n/**\r\n * Adds event listeners to the socket\r\n *\r\n * @api private" +
                    "\r\n */\r\n\r\nWS.prototype.addEventListeners = function(){\r\n  var self = this;\r\n\r\n  t" +
                    "his.ws.onopen = function(){\r\n    self.onOpen();\r\n  };\r\n  this.ws.onclose = funct" +
                    "ion(){\r\n    self.onClose();\r\n  };\r\n  this.ws.onmessage = function(ev){\r\n    self" +
                    ".onData(ev.data);\r\n  };\r\n  this.ws.onerror = function(e){\r\n    self.onError(\'web" +
                    "socket error\', e);\r\n  };\r\n};\r\n\r\n/**\r\n * Override `onData` to use a timer on iOS." +
                    "\r\n * See: https://gist.github.com/mloughran/2052006\r\n *\r\n * @api private\r\n */\r\n\r" +
                    "\nif (\'undefined\' != typeof navigator\r\n  && /iPad|iPhone|iPod/i.test(navigator.us" +
                    "erAgent)) {\r\n  WS.prototype.onData = function(data){\r\n    var self = this;\r\n    " +
                    "setTimeout(function(){\r\n      Transport.prototype.onData.call(self, data);\r\n    " +
                    "}, 0);\r\n  };\r\n}\r\n\r\n/**\r\n * Writes data to socket.\r\n *\r\n * @param {Array} array o" +
                    "f packets.\r\n * @api private\r\n */\r\n\r\nWS.prototype.write = function(packets){\r\n  v" +
                    "ar self = this;\r\n  this.writable = false;\r\n  // encodePacket efficient as it use" +
                    "s WS framing\r\n  // no need for encodePayload\r\n  for (var i = 0, l = packets.leng" +
                    "th; i < l; i++) {\r\n    parser.encodePacket(packets[i], this.supportsBinary, func" +
                    "tion(data) {\r\n      //Sometimes the websocket has already been closed but the br" +
                    "owser didn\'t\r\n      //have a chance of informing us about it yet, in that case s" +
                    "end will\r\n      //throw an error\r\n      try {\r\n        self.ws.send(data);\r\n    " +
                    "  } catch (e){\r\n        debug(\'websocket closed before onclose event\');\r\n      }" +
                    "\r\n    });\r\n  }\r\n\r\n  function ondrain() {\r\n    self.writable = true;\r\n    self.em" +
                    "it(\'drain\');\r\n  }\r\n  // fake drain\r\n  // defer to next tick to allow Socket to c" +
                    "lear writeBuffer\r\n  setTimeout(ondrain, 0);\r\n};\r\n\r\n/**\r\n * Called upon close\r\n *" +
                    "\r\n * @api private\r\n */\r\n\r\nWS.prototype.onClose = function(){\r\n  Transport.protot" +
                    "ype.onClose.call(this);\r\n};\r\n\r\n/**\r\n * Closes socket.\r\n *\r\n * @api private\r\n */\r" +
                    "\n\r\nWS.prototype.doClose = function(){\r\n  if (typeof this.ws !== \'undefined\') {\r\n" +
                    "    this.ws.close();\r\n  }\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @" +
                    "api private\r\n */\r\n\r\nWS.prototype.uri = function(){\r\n  var query = this.query || " +
                    "{};\r\n  var schema = this.secure ? \'wss\' : \'ws\';\r\n  var port = \'\';\r\n\r\n  // avoid " +
                    "port if default for schema\r\n  if (this.port && ((\'wss\' == schema && this.port !=" +
                    " 443)\r\n    || (\'ws\' == schema && this.port != 80))) {\r\n    port = \':\' + this.por" +
                    "t;\r\n  }\r\n\r\n  // append timestamp to URI\r\n  if (this.timestampRequests) {\r\n    qu" +
                    "ery[this.timestampParam] = +new Date;\r\n  }\r\n\r\n  // communicate binary support ca" +
                    "pabilities\r\n  if (!this.supportsBinary) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = " +
                    "parseqs.encode(query);\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    qu" +
                    "ery = \'?\' + query;\r\n  }\r\n\r\n  return schema + \'://\' + this.hostname + port + this" +
                    ".path + query;\r\n};\r\n\r\n/**\r\n * Feature detection for WebSocket.\r\n *\r\n * @return {" +
                    "Boolean} whether this transport is available.\r\n * @api public\r\n */\r\n\r\nWS.prototy" +
                    "pe.check = function(){\r\n  return !!WebSocket && !(\'__initialize\' in WebSocket &&" +
                    " this.name === WS.prototype.name);\r\n};\r\n\r\n},{\"../transport\":4,\"component-inherit" +
                    "\":13,\"debug\":14,\"engine.io-parser\":17,\"parseqs\":27,\"ws\":29}],10:[function(_dereq" +
                    "_,module,exports){\r\n// browser shim for xmlhttprequest module\r\nvar hasCORS = _de" +
                    "req_(\'has-cors\');\r\n\r\nmodule.exports = function(opts) {\r\n  var xdomain = opts.xdo" +
                    "main;\r\n\r\n  // scheme must be same when usign XDomainRequest\r\n  // http://blogs.m" +
                    "sdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations" +
                    "-and-workarounds.aspx\r\n  var xscheme = opts.xscheme;\r\n\r\n  // XDomainRequest has " +
                    "a flow of not sending cookie, therefore it should be disabled as a default.\r\n  /" +
                    "/ https://github.com/Automattic/engine.io-client/pull/217\r\n  var enablesXDR = op" +
                    "ts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be disabled on IE\r\n  try {\r\n    if (\'u" +
                    "ndefined\' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n      return new" +
                    " XMLHttpRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  // Use XDomainRequest for IE8 " +
                    "if enablesXDR is true\r\n  // because loading bar keeps flashing when using jsonp-" +
                    "polling\r\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n  try {" +
                    "\r\n    if (\'undefined\' != typeof XDomainRequest && !xscheme && enablesXDR) {\r\n   " +
                    "   return new XDomainRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  if (!xdomain) {\r\n" +
                    "    try {\r\n      return new ActiveXObject(\'Microsoft.XMLHTTP\');\r\n    } catch(e) " +
                    "{ }\r\n  }\r\n}\r\n\r\n},{\"has-cors\":23}],11:[function(_dereq_,module,exports){\r\n(functi" +
                    "on (global){\r\n/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */" +
                    "\r\n\r\nvar BlobBuilder = global.BlobBuilder\r\n  || global.WebKitBlobBuilder\r\n  || gl" +
                    "obal.MSBlobBuilder\r\n  || global.MozBlobBuilder;\r\n\r\n/**\r\n * Check if Blob constru" +
                    "ctor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var b " +
                    "= new Blob([\'hi\']);\r\n    return b.size == 2;\r\n  } catch(e) {\r\n    return false;\r" +
                    "\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilder" +
                    "Supported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.pro" +
                    "totype.getBlob;\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = " +
                    "options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  for (var i = 0; i < ary.lengt" +
                    "h; i++) {\r\n    bb.append(ary[i]);\r\n  }\r\n  return (options.type) ? bb.getBlob(opt" +
                    "ions.type) : bb.getBlob();\r\n};\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupp" +
                    "orted) {\r\n    return global.Blob;\r\n  } else if (blobBuilderSupported) {\r\n    ret" +
                    "urn BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\r\n})" +
                    ".call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? " +
                    "window : {})\r\n},{}],12:[function(_dereq_,module,exports){\r\n\r\n/**\r\n * Expose `Emi" +
                    "tter`.\r\n */\r\n\r\nmodule.exports = Emitter;\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r" +
                    "\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj" +
                    ");\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * " +
                    "@return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key " +
                    "in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return o" +
                    "bj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String}" +
                    " event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEm" +
                    "itter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r" +
                    "\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks[event] = this._c" +
                    "allbacks[event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `e" +
                    "vent` listener that will be invoked a single\r\n * time then automatically removed" +
                    ".\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n" +
                    " * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  var self" +
                    " = this;\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  function on() {\r\n    s" +
                    "elf.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  thi" +
                    "s.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `e" +
                    "vent` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param " +
                    "{Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.of" +
                    "f =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r" +
                    "\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks" +
                    " = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this." +
                    "_callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks " +
                    "= this._callbacks[event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all han" +
                    "dlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks[event];\r\n    r" +
                    "eturn this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i" +
                    " < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn " +
                    "=== fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return thi" +
                    "s;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} even" +
                    "t\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = " +
                    "function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].sl" +
                    "ice.call(arguments, 1)\r\n    , callbacks = this._callbacks[event];\r\n\r\n  if (callb" +
                    "acks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callback" +
                    "s.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n" +
                    "  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @pa" +
                    "ram {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype" +
                    ".listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  ret" +
                    "urn this._callbacks[event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `even" +
                    "t` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public" +
                    "\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.lis" +
                    "teners(event).length;\r\n};\r\n\r\n},{}],13:[function(_dereq_,module,exports){\r\n\r\nmodu" +
                    "le.exports = function(a, b){\r\n  var fn = function(){};\r\n  fn.prototype = b.proto" +
                    "type;\r\n  a.prototype = new fn;\r\n  a.prototype.constructor = a;\r\n};\r\n},{}],14:[fu" +
                    "nction(_dereq_,module,exports){\r\n\r\n/**\r\n * This is the web browser implementatio" +
                    "n of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module" +
                    ".exports = _dereq_(\'./debug\');\r\nexports.log = log;\r\nexports.formatArgs = formatA" +
                    "rgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;" +
                    "\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  \'lightseagreen\',\r\n  \'forestgre" +
                    "en\',\r\n  \'goldenrod\',\r\n  \'dodgerblue\',\r\n  \'darkorchid\',\r\n  \'crimson\'\r\n];\r\n\r\n/**\r\n" +
                    " * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Fireb" +
                    "ug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizati" +
                    "ons.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable co" +
                    "lors\r\n */\r\n\r\nfunction useColors() {\r\n  // is webkit? http://stackoverflow.com/a/" +
                    "16459606/376773\r\n  return (\'WebkitAppearance\' in document.documentElement.style)" +
                    " ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (window.co" +
                    "nsole && (console.firebug || (console.exception && console.table))) ||\r\n    // i" +
                    "s firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Con" +
                    "sole#Styling_messages\r\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\" +
                    "d+)/) && parseInt(RegExp.$1, 10) >= 31);\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify" +
                    "()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = " +
                    "function(v) {\r\n  return JSON.stringify(v);\r\n};\r\n\r\n\r\n/**\r\n * Colorize log argumen" +
                    "ts if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs() {\r\n  var args =" +
                    " arguments;\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? \'%c\' " +
                    ": \'\')\r\n    + this.namespace\r\n    + (useColors ? \' %c\' : \' \')\r\n    + args[0]\r\n   " +
                    " + (useColors ? \'%c \' : \' \')\r\n    + \'+\' + exports.humanize(this.diff);\r\n\r\n  if (" +
                    "!useColors) return args;\r\n\r\n  var c = \'color: \' + this.color;\r\n  args = [args[0]" +
                    ", c, \'color: inherit\'].concat(Array.prototype.slice.call(args, 1));\r\n\r\n  // the " +
                    "final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments pass" +
                    "ed either before or after the %c, so we need to\r\n  // figure out the correct ind" +
                    "ex to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace" +
                    "(/%[a-z%]/g, function(match) {\r\n    if (\'%\' === match) return;\r\n    index++;\r\n  " +
                    "  if (\'%c\' === match) {\r\n      // we only are interested in the *last* %c\r\n     " +
                    " // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n" +
                    "\r\n  args.splice(lastC, 0, c);\r\n  return args;\r\n}\r\n\r\n/**\r\n * Invokes `console.log" +
                    "()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @a" +
                    "pi public\r\n */\r\n\r\nfunction log() {\r\n  // This hackery is required for IE8,\r\n  //" +
                    " where the `console.log` function doesn\'t have \'apply\'\r\n  return \'object\' == typ" +
                    "eof console\r\n    && \'function\' == typeof console.log\r\n    && Function.prototype." +
                    "apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n " +
                    "*\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespac" +
                    "es) {\r\n  try {\r\n    if (null == namespaces) {\r\n      localStorage.removeItem(\'de" +
                    "bug\');\r\n    } else {\r\n      localStorage.debug = namespaces;\r\n    }\r\n  } catch(e" +
                    ") {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previ" +
                    "ously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;" +
                    "\r\n  try {\r\n    r = localStorage.debug;\r\n  } catch(e) {}\r\n  return r;\r\n}\r\n\r\n/**\r\n" +
                    " * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.e" +
                    "nable(load());\r\n\r\n},{\"./debug\":15}],15:[function(_dereq_,module,exports){\r\n\r\n/**" +
                    "\r\n * This is the common logic for both the Node.js and web browser\r\n * implement" +
                    "ations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = m" +
                    "odule.exports = debug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nex" +
                    "ports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = _dereq_(\'" +
                    "ms\');\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r" +
                    "\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handl" +
                    "ing functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a si" +
                    "ngle, lowercased letter, i.e. \"n\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * P" +
                    "reviously assigned color.\r\n */\r\n\r\nvar prevColor = 0;\r\n\r\n/**\r\n * Previous log tim" +
                    "estamp.\r\n */\r\n\r\nvar prevTime;\r\n\r\n/**\r\n * Select a color.\r\n *\r\n * @return {Number" +
                    "}\r\n * @api private\r\n */\r\n\r\nfunction selectColor() {\r\n  return exports.colors[pre" +
                    "vColor++ % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the give" +
                    "n `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api" +
                    " public\r\n */\r\n\r\nfunction debug(namespace) {\r\n\r\n  // define the `disabled` versio" +
                    "n\r\n  function disabled() {\r\n  }\r\n  disabled.enabled = false;\r\n\r\n  // define the " +
                    "`enabled` version\r\n  function enabled() {\r\n\r\n    var self = enabled;\r\n\r\n    // s" +
                    "et `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime " +
                    "|| curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;" +
                    "\r\n    prevTime = curr;\r\n\r\n    // add the `color` if not set\r\n    if (null == sel" +
                    "f.useColors) self.useColors = exports.useColors();\r\n    if (null == self.color &" +
                    "& self.useColors) self.color = selectColor();\r\n\r\n    var args = Array.prototype." +
                    "slice.call(arguments);\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if (\'str" +
                    "ing\' !== typeof args[0]) {\r\n      // anything else let\'s inspect with %o\r\n      " +
                    "args = [\'%o\'].concat(args);\r\n    }\r\n\r\n    // apply any `formatters` transformati" +
                    "ons\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-z%])/g, function(ma" +
                    "tch, format) {\r\n      // if we encounter an escaped % then don\'t increase the ar" +
                    "ray index\r\n      if (match === \'%\') return match;\r\n      index++;\r\n      var for" +
                    "matter = exports.formatters[format];\r\n      if (\'function\' === typeof formatter)" +
                    " {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n" +
                    "\r\n        // now we need to remove `args[index]` since it\'s inlined in the `form" +
                    "at`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return mat" +
                    "ch;\r\n    });\r\n\r\n    if (\'function\' === typeof exports.formatArgs) {\r\n      args " +
                    "= exports.formatArgs.apply(self, args);\r\n    }\r\n    var logFn = enabled.log || e" +
                    "xports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n  e" +
                    "nabled.enabled = true;\r\n\r\n  var fn = exports.enabled(namespace) ? enabled : disa" +
                    "bled;\r\n\r\n  fn.namespace = namespace;\r\n\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Enables a deb" +
                    "ug mode by namespaces. This can include modes\r\n * separated by a colon and wildc" +
                    "ards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable" +
                    "(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  var split = (namespaces || \'\')." +
                    "split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (var i = 0; i < len; i++) {" +
                    "\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i" +
                    "].replace(/\\*/g, \'.*?\');\r\n    if (namespaces[0] === \'-\') {\r\n      exports.skips." +
                    "push(new RegExp(\'^\' + namespaces.substr(1) + \'$\'));\r\n    } else {\r\n      exports" +
                    ".names.push(new RegExp(\'^\' + namespaces + \'$\'));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Disab" +
                    "le debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.ena" +
                    "ble(\'\');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false oth" +
                    "erwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r" +
                    "\n\r\nfunction enabled(name) {\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.le" +
                    "ngth; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return fals" +
                    "e;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    i" +
                    "f (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return fals" +
                    "e;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n " +
                    "* @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) retur" +
                    "n val.stack || val.message;\r\n  return val;\r\n}\r\n\r\n},{\"ms\":16}],16:[function(_dere" +
                    "q_,module,exports){\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nva" +
                    "r h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format t" +
                    "he given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n " +
                    "*\r\n * @param {String|Number} val\r\n * @param {Object} options\r\n * @return {String" +
                    "|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options){\r\n  opt" +
                    "ions = options || {};\r\n  if (\'string\' == typeof val) return parse(val);\r\n  retur" +
                    "n options.long\r\n    ? _long(val)\r\n    : _short(val);\r\n};\r\n\r\n/**\r\n * Parse the gi" +
                    "ven `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Numb" +
                    "er}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  var match = /^((?:\\d+)?\\.?" +
                    "\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\r\n  if " +
                    "(!match) return;\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || \'ms" +
                    "\').toLowerCase();\r\n  switch (type) {\r\n    case \'years\':\r\n    case \'year\':\r\n    c" +
                    "ase \'y\':\r\n      return n * y;\r\n    case \'days\':\r\n    case \'day\':\r\n    case \'d\':\r" +
                    "\n      return n * d;\r\n    case \'hours\':\r\n    case \'hour\':\r\n    case \'h\':\r\n      " +
                    "return n * h;\r\n    case \'minutes\':\r\n    case \'minute\':\r\n    case \'m\':\r\n      ret" +
                    "urn n * m;\r\n    case \'seconds\':\r\n    case \'second\':\r\n    case \'s\':\r\n      return" +
                    " n * s;\r\n    case \'ms\':\r\n      return n;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms" +
                    "`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunc" +
                    "tion _short(ms) {\r\n  if (ms >= d) return Math.round(ms / d) + \'d\';\r\n  if (ms >= " +
                    "h) return Math.round(ms / h) + \'h\';\r\n  if (ms >= m) return Math.round(ms / m) + " +
                    "\'m\';\r\n  if (ms >= s) return Math.round(ms / s) + \'s\';\r\n  return ms + \'ms\';\r\n}\r\n\r" +
                    "\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n" +
                    " * @api private\r\n */\r\n\r\nfunction _long(ms) {\r\n  return plural(ms, d, \'day\')\r\n   " +
                    " || plural(ms, h, \'hour\')\r\n    || plural(ms, m, \'minute\')\r\n    || plural(ms, s, " +
                    "\'second\')\r\n    || ms + \' ms\';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfuncti" +
                    "on plural(ms, n, name) {\r\n  if (ms < n) return;\r\n  if (ms < n * 1.5) return Math" +
                    ".floor(ms / n) + \' \' + name;\r\n  return Math.ceil(ms / n) + \' \' + name + \'s\';\r\n}\r" +
                    "\n\r\n},{}],17:[function(_dereq_,module,exports){\r\n(function (global){\r\n/**\r\n * Mod" +
                    "ule dependencies.\r\n */\r\n\r\nvar keys = _dereq_(\'./keys\');\r\nvar sliceBuffer = _dere" +
                    "q_(\'arraybuffer.slice\');\r\nvar base64encoder = _dereq_(\'base64-arraybuffer\');\r\nva" +
                    "r after = _dereq_(\'after\');\r\nvar utf8 = _dereq_(\'utf8\');\r\n\r\n/**\r\n * Check if we " +
                    "are running an android browser. That requires us to use\r\n * ArrayBuffer with pol" +
                    "ling transports...\r\n *\r\n * http://ghinda.net/jpeg-blob-ajax-android/\r\n */\r\n\r\nvar" +
                    " isAndroid = navigator.userAgent.match(/Android/i);\r\n\r\n/**\r\n * Current protocol " +
                    "version.\r\n */\r\n\r\nexports.protocol = 3;\r\n\r\n/**\r\n * Packet types.\r\n */\r\n\r\nvar pack" +
                    "ets = exports.packets = {\r\n    open:     0    // non-ws\r\n  , close:    1    // n" +
                    "on-ws\r\n  , ping:     2\r\n  , pong:     3\r\n  , message:  4\r\n  , upgrade:  5\r\n  , n" +
                    "oop:     6\r\n};\r\n\r\nvar packetslist = keys(packets);\r\n\r\n/**\r\n * Premade error pack" +
                    "et.\r\n */\r\n\r\nvar err = { type: \'error\', data: \'parser error\' };\r\n\r\n/**\r\n * Create" +
                    " a blob api even for blob builder when vendor prefixes exist\r\n */\r\n\r\nvar Blob = " +
                    "_dereq_(\'blob\');\r\n\r\n/**\r\n * Encodes a packet.\r\n *\r\n *     <packet type id> [ <da" +
                    "ta> ]\r\n *\r\n * Example:\r\n *\r\n *     5hello world\r\n *     3\r\n *     4\r\n *\r\n * Bina" +
                    "ry is encoded in an identical principle\r\n *\r\n * @api private\r\n */\r\n\r\nexports.enc" +
                    "odePacket = function (packet, supportsBinary, utf8encode, callback) {\r\n  if (\'fu" +
                    "nction\' == typeof supportsBinary) {\r\n    callback = supportsBinary;\r\n    support" +
                    "sBinary = false;\r\n  }\r\n\r\n  if (\'function\' == typeof utf8encode) {\r\n    callback " +
                    "= utf8encode;\r\n    utf8encode = null;\r\n  }\r\n\r\n  var data = (packet.data === unde" +
                    "fined)\r\n    ? undefined\r\n    : packet.data.buffer || packet.data;\r\n\r\n  if (globa" +
                    "l.ArrayBuffer && data instanceof ArrayBuffer) {\r\n    return encodeArrayBuffer(pa" +
                    "cket, supportsBinary, callback);\r\n  } else if (Blob && data instanceof global.Bl" +
                    "ob) {\r\n    return encodeBlob(packet, supportsBinary, callback);\r\n  }\r\n\r\n  // Sen" +
                    "ding data as a utf-8 string\r\n  var encoded = packets[packet.type];\r\n\r\n  // data " +
                    "fragment is optional\r\n  if (undefined !== packet.data) {\r\n    encoded += utf8enc" +
                    "ode ? utf8.encode(String(packet.data)) : String(packet.data);\r\n  }\r\n\r\n  return c" +
                    "allback(\'\' + encoded);\r\n\r\n};\r\n\r\n/**\r\n * Encode packet helpers for binary types\r\n" +
                    " */\r\n\r\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\r\n  if (!su" +
                    "pportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n" +
                    "\r\n  var data = packet.data;\r\n  var contentArray = new Uint8Array(data);\r\n  var r" +
                    "esultBuffer = new Uint8Array(1 + data.byteLength);\r\n\r\n  resultBuffer[0] = packet" +
                    "s[packet.type];\r\n  for (var i = 0; i < contentArray.length; i++) {\r\n    resultBu" +
                    "ffer[i+1] = contentArray[i];\r\n  }\r\n\r\n  return callback(resultBuffer.buffer);\r\n}\r" +
                    "\n\r\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\r\n  if (!" +
                    "supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }" +
                    "\r\n\r\n  var fr = new FileReader();\r\n  fr.onload = function() {\r\n    packet.data = " +
                    "fr.result;\r\n    exports.encodePacket(packet, supportsBinary, true, callback);\r\n " +
                    " };\r\n  return fr.readAsArrayBuffer(packet.data);\r\n}\r\n\r\nfunction encodeBlob(packe" +
                    "t, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.enc" +
                    "odeBase64Packet(packet, callback);\r\n  }\r\n\r\n  if (isAndroid) {\r\n    return encode" +
                    "BlobAsArrayBuffer(packet, supportsBinary, callback);\r\n  }\r\n\r\n  var length = new " +
                    "Uint8Array(1);\r\n  length[0] = packets[packet.type];\r\n  var blob = new Blob([leng" +
                    "th.buffer, packet.data]);\r\n\r\n  return callback(blob);\r\n}\r\n\r\n/**\r\n * Encodes a pa" +
                    "cket with binary data in a base64 string\r\n *\r\n * @param {Object} packet, has `ty" +
                    "pe` and `data`\r\n * @return {String} base64 encoded message\r\n */\r\n\r\nexports.encod" +
                    "eBase64Packet = function(packet, callback) {\r\n  var message = \'b\' + exports.pack" +
                    "ets[packet.type];\r\n  if (Blob && packet.data instanceof Blob) {\r\n    var fr = ne" +
                    "w FileReader();\r\n    fr.onload = function() {\r\n      var b64 = fr.result.split(\'" +
                    ",\')[1];\r\n      callback(message + b64);\r\n    };\r\n    return fr.readAsDataURL(pac" +
                    "ket.data);\r\n  }\r\n\r\n  var b64data;\r\n  try {\r\n    b64data = String.fromCharCode.ap" +
                    "ply(null, new Uint8Array(packet.data));\r\n  } catch (e) {\r\n    // iPhone Safari d" +
                    "oesn\'t let you apply with typed arrays\r\n    var typed = new Uint8Array(packet.da" +
                    "ta);\r\n    var basic = new Array(typed.length);\r\n    for (var i = 0; i < typed.le" +
                    "ngth; i++) {\r\n      basic[i] = typed[i];\r\n    }\r\n    b64data = String.fromCharCo" +
                    "de.apply(null, basic);\r\n  }\r\n  message += global.btoa(b64data);\r\n  return callba" +
                    "ck(message);\r\n};\r\n\r\n/**\r\n * Decodes a packet. Changes format to Blob if requeste" +
                    "d.\r\n *\r\n * @return {Object} with `type` and `data` (if any)\r\n * @api private\r\n *" +
                    "/\r\n\r\nexports.decodePacket = function (data, binaryType, utf8decode) {\r\n  // Stri" +
                    "ng data\r\n  if (typeof data == \'string\' || data === undefined) {\r\n    if (data.ch" +
                    "arAt(0) == \'b\') {\r\n      return exports.decodeBase64Packet(data.substr(1), binar" +
                    "yType);\r\n    }\r\n\r\n    if (utf8decode) {\r\n      try {\r\n        data = utf8.decode" +
                    "(data);\r\n      } catch (e) {\r\n        return err;\r\n      }\r\n    }\r\n    var type " +
                    "= data.charAt(0);\r\n\r\n    if (Number(type) != type || !packetslist[type]) {\r\n    " +
                    "  return err;\r\n    }\r\n\r\n    if (data.length > 1) {\r\n      return { type: packets" +
                    "list[type], data: data.substring(1) };\r\n    } else {\r\n      return { type: packe" +
                    "tslist[type] };\r\n    }\r\n  }\r\n\r\n  var asArray = new Uint8Array(data);\r\n  var type" +
                    " = asArray[0];\r\n  var rest = sliceBuffer(data, 1);\r\n  if (Blob && binaryType ===" +
                    " \'blob\') {\r\n    rest = new Blob([rest]);\r\n  }\r\n  return { type: packetslist[type" +
                    "], data: rest };\r\n};\r\n\r\n/**\r\n * Decodes a packet encoded in a base64 string\r\n *\r" +
                    "\n * @param {String} base64 encoded message\r\n * @return {Object} with `type` and " +
                    "`data` (if any)\r\n */\r\n\r\nexports.decodeBase64Packet = function(msg, binaryType) {" +
                    "\r\n  var type = packetslist[msg.charAt(0)];\r\n  if (!global.ArrayBuffer) {\r\n    re" +
                    "turn { type: type, data: { base64: true, data: msg.substr(1) } };\r\n  }\r\n\r\n  var " +
                    "data = base64encoder.decode(msg.substr(1));\r\n\r\n  if (binaryType === \'blob\' && Bl" +
                    "ob) {\r\n    data = new Blob([data]);\r\n  }\r\n\r\n  return { type: type, data: data };" +
                    "\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (payload).\r\n *\r\n *     <length>:data\r\n" +
                    " *\r\n * Example:\r\n *\r\n *     11:hello world2:hi\r\n *\r\n * If any contents are binar" +
                    "y, they will be encoded as base64 strings. Base64\r\n * encoded strings are marked" +
                    " with a b before the length specifier\r\n *\r\n * @param {Array} packets\r\n * @api pr" +
                    "ivate\r\n */\r\n\r\nexports.encodePayload = function (packets, supportsBinary, callbac" +
                    "k) {\r\n  if (typeof supportsBinary == \'function\') {\r\n    callback = supportsBinar" +
                    "y;\r\n    supportsBinary = null;\r\n  }\r\n\r\n  if (supportsBinary) {\r\n    if (Blob && " +
                    "!isAndroid) {\r\n      return exports.encodePayloadAsBlob(packets, callback);\r\n   " +
                    " }\r\n\r\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\r\n  }\r\n\r\n" +
                    "  if (!packets.length) {\r\n    return callback(\'0:\');\r\n  }\r\n\r\n  function setLengt" +
                    "hHeader(message) {\r\n    return message.length + \':\' + message;\r\n  }\r\n\r\n  functio" +
                    "n encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, supportsBi" +
                    "nary, true, function(message) {\r\n      doneCallback(null, setLengthHeader(messag" +
                    "e));\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, results) {\r\n    re" +
                    "turn callback(results.join(\'\'));\r\n  });\r\n};\r\n\r\n/**\r\n * Async array map using aft" +
                    "er\r\n */\r\n\r\nfunction map(ary, each, done) {\r\n  var result = new Array(ary.length)" +
                    ";\r\n  var next = after(ary.length, done);\r\n\r\n  var eachWithIndex = function(i, el" +
                    ", cb) {\r\n    each(el, function(error, msg) {\r\n      result[i] = msg;\r\n      cb(e" +
                    "rror, result);\r\n    });\r\n  };\r\n\r\n  for (var i = 0; i < ary.length; i++) {\r\n    e" +
                    "achWithIndex(i, ary[i], next);\r\n  }\r\n}\r\n\r\n/*\r\n * Decodes data when a payload is " +
                    "maybe expected. Possible binary contents are\r\n * decoded from their base64 repre" +
                    "sentation\r\n *\r\n * @param {String} data, callback method\r\n * @api public\r\n */\r\n\r\n" +
                    "exports.decodePayload = function (data, binaryType, callback) {\r\n  if (typeof da" +
                    "ta != \'string\') {\r\n    return exports.decodePayloadAsBinary(data, binaryType, ca" +
                    "llback);\r\n  }\r\n\r\n  if (typeof binaryType === \'function\') {\r\n    callback = binar" +
                    "yType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var packet;\r\n  if (data == \'\') {\r\n    /" +
                    "/ parser error - ignoring payload\r\n    return callback(err, 0, 1);\r\n  }\r\n\r\n  var" +
                    " length = \'\'\r\n    , n, msg;\r\n\r\n  for (var i = 0, l = data.length; i < l; i++) {\r" +
                    "\n    var chr = data.charAt(i);\r\n\r\n    if (\':\' != chr) {\r\n      length += chr;\r\n " +
                    "   } else {\r\n      if (\'\' == length || (length != (n = Number(length)))) {\r\n    " +
                    "    // parser error - ignoring payload\r\n        return callback(err, 0, 1);\r\n   " +
                    "   }\r\n\r\n      msg = data.substr(i + 1, n);\r\n\r\n      if (length != msg.length) {\r" +
                    "\n        // parser error - ignoring payload\r\n        return callback(err, 0, 1);" +
                    "\r\n      }\r\n\r\n      if (msg.length) {\r\n        packet = exports.decodePacket(msg," +
                    " binaryType, true);\r\n\r\n        if (err.type == packet.type && err.data == packet" +
                    ".data) {\r\n          // parser error in individual packet - ignoring payload\r\n   " +
                    "       return callback(err, 0, 1);\r\n        }\r\n\r\n        var ret = callback(pack" +
                    "et, i + n, l);\r\n        if (false === ret) return;\r\n      }\r\n\r\n      // advance " +
                    "cursor\r\n      i += n;\r\n      length = \'\';\r\n    }\r\n  }\r\n\r\n  if (length != \'\') {\r\n" +
                    "    // parser error - ignoring payload\r\n    return callback(err, 0, 1);\r\n  }\r\n\r\n" +
                    "};\r\n\r\n/**\r\n * Encodes multiple messages (payload) as binary.\r\n *\r\n * <1 = binary" +
                    ", 0 = string><number from 0-9><number from 0-9>[...]<number\r\n * 255><data>\r\n *\r\n" +
                    " * Example:\r\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit i" +
                    "ntegers\r\n *\r\n * @param {Array} packets\r\n * @return {ArrayBuffer} encoded payload" +
                    "\r\n * @api private\r\n */\r\n\r\nexports.encodePayloadAsArrayBuffer = function(packets," +
                    " callback) {\r\n  if (!packets.length) {\r\n    return callback(new ArrayBuffer(0));" +
                    "\r\n  }\r\n\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(" +
                    "packet, true, true, function(data) {\r\n      return doneCallback(null, data);\r\n  " +
                    "  });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, encodedPackets) {\r\n    var" +
                    " totalLength = encodedPackets.reduce(function(acc, p) {\r\n      var len;\r\n      i" +
                    "f (typeof p === \'string\'){\r\n        len = p.length;\r\n      } else {\r\n        len" +
                    " = p.byteLength;\r\n      }\r\n      return acc + len.toString().length + len + 2; /" +
                    "/ string/binary identifier + separator = 2\r\n    }, 0);\r\n\r\n    var resultArray = " +
                    "new Uint8Array(totalLength);\r\n\r\n    var bufferIndex = 0;\r\n    encodedPackets.for" +
                    "Each(function(p) {\r\n      var isString = typeof p === \'string\';\r\n      var ab = " +
                    "p;\r\n      if (isString) {\r\n        var view = new Uint8Array(p.length);\r\n       " +
                    " for (var i = 0; i < p.length; i++) {\r\n          view[i] = p.charCodeAt(i);\r\n   " +
                    "     }\r\n        ab = view.buffer;\r\n      }\r\n\r\n      if (isString) { // not true " +
                    "binary\r\n        resultArray[bufferIndex++] = 0;\r\n      } else { // true binary\r\n" +
                    "        resultArray[bufferIndex++] = 1;\r\n      }\r\n\r\n      var lenStr = ab.byteLe" +
                    "ngth.toString();\r\n      for (var i = 0; i < lenStr.length; i++) {\r\n        resul" +
                    "tArray[bufferIndex++] = parseInt(lenStr[i]);\r\n      }\r\n      resultArray[bufferI" +
                    "ndex++] = 255;\r\n\r\n      var view = new Uint8Array(ab);\r\n      for (var i = 0; i " +
                    "< view.length; i++) {\r\n        resultArray[bufferIndex++] = view[i];\r\n      }\r\n " +
                    "   });\r\n\r\n    return callback(resultArray.buffer);\r\n  });\r\n};\r\n\r\n/**\r\n * Encode " +
                    "as Blob\r\n */\r\n\r\nexports.encodePayloadAsBlob = function(packets, callback) {\r\n  f" +
                    "unction encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, true" +
                    ", true, function(encoded) {\r\n      var binaryIdentifier = new Uint8Array(1);\r\n  " +
                    "    binaryIdentifier[0] = 1;\r\n      if (typeof encoded === \'string\') {\r\n        " +
                    "var view = new Uint8Array(encoded.length);\r\n        for (var i = 0; i < encoded." +
                    "length; i++) {\r\n          view[i] = encoded.charCodeAt(i);\r\n        }\r\n        e" +
                    "ncoded = view.buffer;\r\n        binaryIdentifier[0] = 0;\r\n      }\r\n\r\n      var le" +
                    "n = (encoded instanceof ArrayBuffer)\r\n        ? encoded.byteLength\r\n        : en" +
                    "coded.size;\r\n\r\n      var lenStr = len.toString();\r\n      var lengthAry = new Uin" +
                    "t8Array(lenStr.length + 1);\r\n      for (var i = 0; i < lenStr.length; i++) {\r\n  " +
                    "      lengthAry[i] = parseInt(lenStr[i]);\r\n      }\r\n      lengthAry[lenStr.lengt" +
                    "h] = 255;\r\n\r\n      if (Blob) {\r\n        var blob = new Blob([binaryIdentifier.bu" +
                    "ffer, lengthAry.buffer, encoded]);\r\n        doneCallback(null, blob);\r\n      }\r\n" +
                    "    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, results) {\r\n    return c" +
                    "allback(new Blob(results));\r\n  });\r\n};\r\n\r\n/*\r\n * Decodes data when a payload is " +
                    "maybe expected. Strings are decoded by\r\n * interpreting each byte as a key code " +
                    "for entries marked to start with 0. See\r\n * description of encodePayloadAsBinary" +
                    "\r\n *\r\n * @param {ArrayBuffer} data, callback method\r\n * @api public\r\n */\r\n\r\nexpo" +
                    "rts.decodePayloadAsBinary = function (data, binaryType, callback) {\r\n  if (typeo" +
                    "f binaryType === \'function\') {\r\n    callback = binaryType;\r\n    binaryType = nul" +
                    "l;\r\n  }\r\n\r\n  var bufferTail = data;\r\n  var buffers = [];\r\n\r\n  var numberTooLong " +
                    "= false;\r\n  while (bufferTail.byteLength > 0) {\r\n    var tailArray = new Uint8Ar" +
                    "ray(bufferTail);\r\n    var isString = tailArray[0] === 0;\r\n    var msgLength = \'\'" +
                    ";\r\n\r\n    for (var i = 1; ; i++) {\r\n      if (tailArray[i] == 255) break;\r\n\r\n    " +
                    "  if (msgLength.length > 310) {\r\n        numberTooLong = true;\r\n        break;\r\n" +
                    "      }\r\n\r\n      msgLength += tailArray[i];\r\n    }\r\n\r\n    if(numberTooLong) retu" +
                    "rn callback(err, 0, 1);\r\n\r\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLengt" +
                    "h.length);\r\n    msgLength = parseInt(msgLength);\r\n\r\n    var msg = sliceBuffer(bu" +
                    "fferTail, 0, msgLength);\r\n    if (isString) {\r\n      try {\r\n        msg = String" +
                    ".fromCharCode.apply(null, new Uint8Array(msg));\r\n      } catch (e) {\r\n        //" +
                    " iPhone Safari doesn\'t let you apply to typed arrays\r\n        var typed = new Ui" +
                    "nt8Array(msg);\r\n        msg = \'\';\r\n        for (var i = 0; i < typed.length; i++" +
                    ") {\r\n          msg += String.fromCharCode(typed[i]);\r\n        }\r\n      }\r\n    }\r" +
                    "\n\r\n    buffers.push(msg);\r\n    bufferTail = sliceBuffer(bufferTail, msgLength);\r" +
                    "\n  }\r\n\r\n  var total = buffers.length;\r\n  buffers.forEach(function(buffer, i) {\r\n" +
                    "    callback(exports.decodePacket(buffer, binaryType, true), i, total);\r\n  });\r\n" +
                    "};\r\n\r\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undef" +
                    "ined\" ? window : {})\r\n},{\"./keys\":18,\"after\":19,\"arraybuffer.slice\":20,\"base64-a" +
                    "rraybuffer\":21,\"blob\":11,\"utf8\":22}],18:[function(_dereq_,module,exports){\r\n\r\n/*" +
                    "*\r\n * Gets the keys for an object.\r\n *\r\n * @return {Array} keys\r\n * @api private" +
                    "\r\n */\r\n\r\nmodule.exports = Object.keys || function keys (obj){\r\n  var arr = [];\r\n" +
                    "  var has = Object.prototype.hasOwnProperty;\r\n\r\n  for (var i in obj) {\r\n    if (" +
                    "has.call(obj, i)) {\r\n      arr.push(i);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\n},{}]," +
                    "19:[function(_dereq_,module,exports){\r\nmodule.exports = after\r\n\r\nfunction after(" +
                    "count, callback, err_cb) {\r\n    var bail = false\r\n    err_cb = err_cb || noop\r\n " +
                    "   proxy.count = count\r\n\r\n    return (count === 0) ? callback() : proxy\r\n\r\n    f" +
                    "unction proxy(err, result) {\r\n        if (proxy.count <= 0) {\r\n            throw" +
                    " new Error(\'after called too many times\')\r\n        }\r\n        --proxy.count\r\n\r\n " +
                    "       // after first error, rest are passed to err_cb\r\n        if (err) {\r\n    " +
                    "        bail = true\r\n            callback(err)\r\n            // future error call" +
                    "backs will go to error handler\r\n            callback = err_cb\r\n        } else if" +
                    " (proxy.count === 0 && !bail) {\r\n            callback(null, result)\r\n        }\r\n" +
                    "    }\r\n}\r\n\r\nfunction noop() {}\r\n\r\n},{}],20:[function(_dereq_,module,exports){\r\n/" +
                    "**\r\n * An abstraction for slicing an arraybuffer even when\r\n * ArrayBuffer.proto" +
                    "type.slice is not supported\r\n *\r\n * @api public\r\n */\r\n\r\nmodule.exports = functio" +
                    "n(arraybuffer, start, end) {\r\n  var bytes = arraybuffer.byteLength;\r\n  start = s" +
                    "tart || 0;\r\n  end = end || bytes;\r\n\r\n  if (arraybuffer.slice) { return arraybuff" +
                    "er.slice(start, end); }\r\n\r\n  if (start < 0) { start += bytes; }\r\n  if (end < 0) " +
                    "{ end += bytes; }\r\n  if (end > bytes) { end = bytes; }\r\n\r\n  if (start >= bytes |" +
                    "| start >= end || bytes === 0) {\r\n    return new ArrayBuffer(0);\r\n  }\r\n\r\n  var a" +
                    "bv = new Uint8Array(arraybuffer);\r\n  var result = new Uint8Array(end - start);\r\n" +
                    "  for (var i = start, ii = 0; i < end; i++, ii++) {\r\n    result[ii] = abv[i];\r\n " +
                    " }\r\n  return result.buffer;\r\n};\r\n\r\n},{}],21:[function(_dereq_,module,exports){\r\n" +
                    "/*\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *" +
                    "\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n" +
                    " */\r\n(function(chars){\r\n  \"use strict\";\r\n\r\n  exports.encode = function(arraybuff" +
                    "er) {\r\n    var bytes = new Uint8Array(arraybuffer),\r\n    i, len = bytes.length, " +
                    "base64 = \"\";\r\n\r\n    for (i = 0; i < len; i+=3) {\r\n      base64 += chars[bytes[i]" +
                    " >> 2];\r\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n  " +
                    "    base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n      ba" +
                    "se64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2) {\r\n      ba" +
                    "se64 = base64.substring(0, base64.length - 1) + \"=\";\r\n    } else if (len % 3 ===" +
                    " 1) {\r\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n    }\r\n\r\n " +
                    "   return base64;\r\n  };\r\n\r\n  exports.decode =  function(base64) {\r\n    var buffe" +
                    "rLength = base64.length * 0.75,\r\n    len = base64.length, i, p = 0,\r\n    encoded" +
                    "1, encoded2, encoded3, encoded4;\r\n\r\n    if (base64[base64.length - 1] === \"=\") {" +
                    "\r\n      bufferLength--;\r\n      if (base64[base64.length - 2] === \"=\") {\r\n       " +
                    " bufferLength--;\r\n      }\r\n    }\r\n\r\n    var arraybuffer = new ArrayBuffer(buffer" +
                    "Length),\r\n    bytes = new Uint8Array(arraybuffer);\r\n\r\n    for (i = 0; i < len; i" +
                    "+=4) {\r\n      encoded1 = chars.indexOf(base64[i]);\r\n      encoded2 = chars.index" +
                    "Of(base64[i+1]);\r\n      encoded3 = chars.indexOf(base64[i+2]);\r\n      encoded4 =" +
                    " chars.indexOf(base64[i+3]);\r\n\r\n      bytes[p++] = (encoded1 << 2) | (encoded2 >" +
                    "> 4);\r\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n      bytes" +
                    "[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arraybuffe" +
                    "r;\r\n  };\r\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\")" +
                    ";\r\n\r\n},{}],22:[function(_dereq_,module,exports){\r\n(function (global){\r\n/*! http:" +
                    "//mths.be/utf8js v2.0.0 by @mathias */\r\n;(function(root) {\r\n\r\n\t// Detect free va" +
                    "riables `exports`\r\n\tvar freeExports = typeof exports == \'object\' && exports;\r\n\r\n" +
                    "\t// Detect free variable `module`\r\n\tvar freeModule = typeof module == \'object\' &" +
                    "& module &&\r\n\t\tmodule.exports == freeExports && module;\r\n\r\n\t// Detect free varia" +
                    "ble `global`, from Node.js or Browserified code,\r\n\t// and use it as `root`\r\n\tvar" +
                    " freeGlobal = typeof global == \'object\' && global;\r\n\tif (freeGlobal.global === f" +
                    "reeGlobal || freeGlobal.window === freeGlobal) {\r\n\t\troot = freeGlobal;\r\n\t}\r\n\r\n\t/" +
                    "*--------------------------------------------------------------------------*/\r\n\r" +
                    "\n\tvar stringFromCharCode = String.fromCharCode;\r\n\r\n\t// Taken from http://mths.be" +
                    "/punycode\r\n\tfunction ucs2decode(string) {\r\n\t\tvar output = [];\r\n\t\tvar counter = 0" +
                    ";\r\n\t\tvar length = string.length;\r\n\t\tvar value;\r\n\t\tvar extra;\r\n\t\twhile (counter <" +
                    " length) {\r\n\t\t\tvalue = string.charCodeAt(counter++);\r\n\t\t\tif (value >= 0xD800 && " +
                    "value <= 0xDBFF && counter < length) {\r\n\t\t\t\t// high surrogate, and there is a ne" +
                    "xt character\r\n\t\t\t\textra = string.charCodeAt(counter++);\r\n\t\t\t\tif ((extra & 0xFC00" +
                    ") == 0xDC00) { // low surrogate\r\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (ext" +
                    "ra & 0x3FF) + 0x10000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// unmatched surrogate; only append " +
                    "this code unit, in case the next\r\n\t\t\t\t\t// code unit is the high surrogate of a s" +
                    "urrogate pair\r\n\t\t\t\t\toutput.push(value);\r\n\t\t\t\t\tcounter--;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t" +
                    "\t\toutput.push(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// Taken from http://" +
                    "mths.be/punycode\r\n\tfunction ucs2encode(array) {\r\n\t\tvar length = array.length;\r\n\t" +
                    "\tvar index = -1;\r\n\t\tvar value;\r\n\t\tvar output = \'\';\r\n\t\twhile (++index < length) {" +
                    "\r\n\t\t\tvalue = array[index];\r\n\t\t\tif (value > 0xFFFF) {\r\n\t\t\t\tvalue -= 0x10000;\r\n\t\t\t" +
                    "\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\r\n\t\t\t\tvalue = 0xDC0" +
                    "0 | value & 0x3FF;\r\n\t\t\t}\r\n\t\t\toutput += stringFromCharCode(value);\r\n\t\t}\r\n\t\treturn" +
                    " output;\r\n\t}\r\n\r\n\t/*-------------------------------------------------------------" +
                    "-------------*/\r\n\r\n\tfunction createByte(codePoint, shift) {\r\n\t\treturn stringFrom" +
                    "CharCode(((codePoint >> shift) & 0x3F) | 0x80);\r\n\t}\r\n\r\n\tfunction encodeCodePoint" +
                    "(codePoint) {\r\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\r\n\t\t\tret" +
                    "urn stringFromCharCode(codePoint);\r\n\t\t}\r\n\t\tvar symbol = \'\';\r\n\t\tif ((codePoint & " +
                    "0xFFFFF800) == 0) { // 2-byte sequence\r\n\t\t\tsymbol = stringFromCharCode(((codePoi" +
                    "nt >> 6) & 0x1F) | 0xC0);\r\n\t\t}\r\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3" +
                    "-byte sequence\r\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0" +
                    ");\r\n\t\t\tsymbol += createByte(codePoint, 6);\r\n\t\t}\r\n\t\telse if ((codePoint & 0xFFE00" +
                    "000) == 0) { // 4-byte sequence\r\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 1" +
                    "8) & 0x07) | 0xF0);\r\n\t\t\tsymbol += createByte(codePoint, 12);\r\n\t\t\tsymbol += creat" +
                    "eByte(codePoint, 6);\r\n\t\t}\r\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0" +
                    "x80);\r\n\t\treturn symbol;\r\n\t}\r\n\r\n\tfunction utf8encode(string) {\r\n\t\tvar codePoints " +
                    "= ucs2decode(string);\r\n\r\n\t\t// console.log(JSON.stringify(codePoints.map(function" +
                    "(x) {\r\n\t\t// \treturn \'U+\' + x.toString(16).toUpperCase();\r\n\t\t// })));\r\n\r\n\t\tvar le" +
                    "ngth = codePoints.length;\r\n\t\tvar index = -1;\r\n\t\tvar codePoint;\r\n\t\tvar byteString" +
                    " = \'\';\r\n\t\twhile (++index < length) {\r\n\t\t\tcodePoint = codePoints[index];\r\n\t\t\tbyte" +
                    "String += encodeCodePoint(codePoint);\r\n\t\t}\r\n\t\treturn byteString;\r\n\t}\r\n\r\n\t/*-----" +
                    "---------------------------------------------------------------------*/\r\n\r\n\tfunc" +
                    "tion readContinuationByte() {\r\n\t\tif (byteIndex >= byteCount) {\r\n\t\t\tthrow Error(\'" +
                    "Invalid byte index\');\r\n\t\t}\r\n\r\n\t\tvar continuationByte = byteArray[byteIndex] & 0x" +
                    "FF;\r\n\t\tbyteIndex++;\r\n\r\n\t\tif ((continuationByte & 0xC0) == 0x80) {\r\n\t\t\treturn con" +
                    "tinuationByte & 0x3F;\r\n\t\t}\r\n\r\n\t\t// If we end up here, it’s not a continuation by" +
                    "te\r\n\t\tthrow Error(\'Invalid continuation byte\');\r\n\t}\r\n\r\n\tfunction decodeSymbol() " +
                    "{\r\n\t\tvar byte1;\r\n\t\tvar byte2;\r\n\t\tvar byte3;\r\n\t\tvar byte4;\r\n\t\tvar codePoint;\r\n\r\n\t" +
                    "\tif (byteIndex > byteCount) {\r\n\t\t\tthrow Error(\'Invalid byte index\');\r\n\t\t}\r\n\r\n\t\ti" +
                    "f (byteIndex == byteCount) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Read first byte\r\n\t\tb" +
                    "yte1 = byteArray[byteIndex] & 0xFF;\r\n\t\tbyteIndex++;\r\n\r\n\t\t// 1-byte sequence (no " +
                    "continuation bytes)\r\n\t\tif ((byte1 & 0x80) == 0) {\r\n\t\t\treturn byte1;\r\n\t\t}\r\n\r\n\t\t//" +
                    " 2-byte sequence\r\n\t\tif ((byte1 & 0xE0) == 0xC0) {\r\n\t\t\tvar byte2 = readContinuati" +
                    "onByte();\r\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\r\n\t\t\tif (codePoint >= 0x" +
                    "80) {\r\n\t\t\t\treturn codePoint;\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error(\'Invalid continuation" +
                    " byte\');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3-byte sequence (may include unpaired surrogates)\r\n\t" +
                    "\tif ((byte1 & 0xF0) == 0xE0) {\r\n\t\t\tbyte2 = readContinuationByte();\r\n\t\t\tbyte3 = r" +
                    "eadContinuationByte();\r\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | b" +
                    "yte3;\r\n\t\t\tif (codePoint >= 0x0800) {\r\n\t\t\t\treturn codePoint;\r\n\t\t\t} else {\r\n\t\t\t\tth" +
                    "row Error(\'Invalid continuation byte\');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 4-byte sequence\r\n\t\tif" +
                    " ((byte1 & 0xF8) == 0xF0) {\r\n\t\t\tbyte2 = readContinuationByte();\r\n\t\t\tbyte3 = read" +
                    "ContinuationByte();\r\n\t\t\tbyte4 = readContinuationByte();\r\n\t\t\tcodePoint = ((byte1 " +
                    "& 0x0F) << 0x12) | (byte2 << 0x0C) |\r\n\t\t\t\t(byte3 << 0x06) | byte4;\r\n\t\t\tif (codeP" +
                    "oint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n\t\t\t\treturn codePoint;\r\n\t\t\t}\r\n\t\t}\r\n" +
                    "\r\n\t\tthrow Error(\'Invalid UTF-8 detected\');\r\n\t}\r\n\r\n\tvar byteArray;\r\n\tvar byteCoun" +
                    "t;\r\n\tvar byteIndex;\r\n\tfunction utf8decode(byteString) {\r\n\t\tbyteArray = ucs2decod" +
                    "e(byteString);\r\n\t\tbyteCount = byteArray.length;\r\n\t\tbyteIndex = 0;\r\n\t\tvar codePoi" +
                    "nts = [];\r\n\t\tvar tmp;\r\n\t\twhile ((tmp = decodeSymbol()) !== false) {\r\n\t\t\tcodePoin" +
                    "ts.push(tmp);\r\n\t\t}\r\n\t\treturn ucs2encode(codePoints);\r\n\t}\r\n\r\n\t/*-----------------" +
                    "---------------------------------------------------------*/\r\n\r\n\tvar utf8 = {\r\n\t\t" +
                    "\'version\': \'2.0.0\',\r\n\t\t\'encode\': utf8encode,\r\n\t\t\'decode\': utf8decode\r\n\t};\r\n\r\n\t//" +
                    " Some AMD build optimizers, like r.js, check for specific condition patterns\r\n\t/" +
                    "/ like the following:\r\n\tif (\r\n\t\ttypeof define == \'function\' &&\r\n\t\ttypeof define." +
                    "amd == \'object\' &&\r\n\t\tdefine.amd\r\n\t) {\r\n\t\tdefine(function() {\r\n\t\t\treturn utf8;\r\n" +
                    "\t\t});\r\n\t}\telse if (freeExports && !freeExports.nodeType) {\r\n\t\tif (freeModule) { " +
                    "// in Node.js or RingoJS v0.8.0+\r\n\t\t\tfreeModule.exports = utf8;\r\n\t\t} else { // i" +
                    "n Narwhal or RingoJS v0.7.0-\r\n\t\t\tvar object = {};\r\n\t\t\tvar hasOwnProperty = objec" +
                    "t.hasOwnProperty;\r\n\t\t\tfor (var key in utf8) {\r\n\t\t\t\thasOwnProperty.call(utf8, key" +
                    ") && (freeExports[key] = utf8[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else { // in Rhino or a web " +
                    "browser\r\n\t\troot.utf8 = utf8;\r\n\t}\r\n\r\n}(this));\r\n\r\n}).call(this,typeof self !== \"u" +
                    "ndefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{}],23:[funct" +
                    "ion(_dereq_,module,exports){\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar global " +
                    "= _dereq_(\'global\');\r\n\r\n/**\r\n * Module exports.\r\n *\r\n * Logic borrowed from Mode" +
                    "rnizr:\r\n *\r\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-de" +
                    "tects/cors.js\r\n */\r\n\r\ntry {\r\n  module.exports = \'XMLHttpRequest\' in global &&\r\n " +
                    "   \'withCredentials\' in new global.XMLHttpRequest();\r\n} catch (err) {\r\n  // if X" +
                    "MLHttp support is disabled in IE then it will throw\r\n  // when trying to create\r" +
                    "\n  module.exports = false;\r\n}\r\n\r\n},{\"global\":24}],24:[function(_dereq_,module,ex" +
                    "ports){\r\n\r\n/**\r\n * Returns `this`. Execute this without a \"context\" (i.e. withou" +
                    "t it being\r\n * attached to an object of the left-hand side), and `this` points t" +
                    "o the\r\n * \"global\" scope of the current JS execution.\r\n */\r\n\r\nmodule.exports = (" +
                    "function () { return this; })();\r\n\r\n},{}],25:[function(_dereq_,module,exports){\r" +
                    "\n\r\nvar indexOf = [].indexOf;\r\n\r\nmodule.exports = function(arr, obj){\r\n  if (inde" +
                    "xOf) return arr.indexOf(obj);\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if " +
                    "(arr[i] === obj) return i;\r\n  }\r\n  return -1;\r\n};\r\n},{}],26:[function(_dereq_,mo" +
                    "dule,exports){\r\n(function (global){\r\n/**\r\n * JSON parse.\r\n *\r\n * @see Based on j" +
                    "Query#parseJSON (MIT) and JSON2\r\n * @api private\r\n */\r\n\r\nvar rvalidchars = /^[\\]" +
                    ",:{}\\s]*$/;\r\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\r\nvar rval" +
                    "idtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\n" +
                    "var rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\r\nvar rtrimLeft = /^\\s+/;\r\nvar rtrimRi" +
                    "ght = /\\s+$/;\r\n\r\nmodule.exports = function parsejson(data) {\r\n  if (\'string\' != " +
                    "typeof data || !data) {\r\n    return null;\r\n  }\r\n\r\n  data = data.replace(rtrimLef" +
                    "t, \'\').replace(rtrimRight, \'\');\r\n\r\n  // Attempt to parse using the native JSON p" +
                    "arser first\r\n  if (global.JSON && JSON.parse) {\r\n    return JSON.parse(data);\r\n " +
                    " }\r\n\r\n  if (rvalidchars.test(data.replace(rvalidescape, \'@\')\r\n      .replace(rva" +
                    "lidtokens, \']\')\r\n      .replace(rvalidbraces, \'\'))) {\r\n    return (new Function(" +
                    "\'return \' + data))();\r\n  }\r\n};\r\n}).call(this,typeof self !== \"undefined\" ? self " +
                    ": typeof window !== \"undefined\" ? window : {})\r\n},{}],27:[function(_dereq_,modul" +
                    "e,exports){\r\n/**\r\n * Compiles a querystring\r\n * Returns string representation of" +
                    " the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = fu" +
                    "nction (obj) {\r\n  var str = \'\';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnPro" +
                    "perty(i)) {\r\n      if (str.length) str += \'&\';\r\n      str += encodeURIComponent(" +
                    "i) + \'=\' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n" +
                    " * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @ap" +
                    "i private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs =" +
                    " qs.split(\'&\');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair" +
                    " = pairs[i].split(\'=\');\r\n    qry[decodeURIComponent(pair[0])] = decodeURICompone" +
                    "nt(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\r\n},{}],28:[function(_dereq_,module,export" +
                    "s){\r\n/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> " +
                    "(MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|h" +
                    "ttps|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0" +
                    "-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\" +
                    "/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    \'source\', \'prot" +
                    "ocol\', \'authority\', \'userInfo\', \'user\', \'password\', \'host\', \'port\', \'relative\', " +
                    "\'path\', \'directory\', \'file\', \'query\', \'anchor\'\r\n];\r\n\r\nmodule.exports = function " +
                    "parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf(\'[\'),\r\n        e = " +
                    "str.indexOf(\']\');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(" +
                    "0, b) + str.substring(b, e).replace(/:/g, \';\') + str.substring(e, str.length);\r\n" +
                    "    }\r\n\r\n    var m = re.exec(str || \'\'),\r\n        uri = {},\r\n        i = 14;\r\n\r\n" +
                    "    while (i--) {\r\n        uri[parts[i]] = m[i] || \'\';\r\n    }\r\n\r\n    if (b != -1" +
                    " && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring" +
                    "(1, uri.host.length - 1).replace(/;/g, \':\');\r\n        uri.authority = uri.author" +
                    "ity.replace(\'[\', \'\').replace(\']\', \'\').replace(/;/g, \':\');\r\n        uri.ipv6uri =" +
                    " true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\r\n},{}],29:[function(_dereq_,module,export" +
                    "s){\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar global = (function() { return th" +
                    "is; })();\r\n\r\n/**\r\n * WebSocket constructor.\r\n */\r\n\r\nvar WebSocket = global.WebSo" +
                    "cket || global.MozWebSocket;\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports =" +
                    " WebSocket ? ws : null;\r\n\r\n/**\r\n * WebSocket constructor.\r\n *\r\n * The third `opt" +
                    "s` options object gets ignored in web browsers, since it\'s\r\n * non-standard, and" +
                    " throws a TypeError if passed to the constructor.\r\n * See: https://github.com/ei" +
                    "naros/ws/issues/227\r\n *\r\n * @param {String} uri\r\n * @param {Array} protocols (op" +
                    "tional)\r\n * @param {Object) opts (optional)\r\n * @api public\r\n */\r\n\r\nfunction ws(" +
                    "uri, protocols, opts) {\r\n  var instance;\r\n  if (protocols) {\r\n    instance = new" +
                    " WebSocket(uri, protocols);\r\n  } else {\r\n    instance = new WebSocket(uri);\r\n  }" +
                    "\r\n  return instance;\r\n}\r\n\r\nif (WebSocket) ws.prototype = WebSocket.prototype;\r\n\r" +
                    "\n},{}]},{},[1])(1)\r\n});");
            this.Write(" ");
            
            #line 13 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 14 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "TcpChannel") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write(@"spike.Channel = function(uri, opts){
	if (!(this instanceof spike.Channel)) 
		return new spike.Channel(uri, opts);

	if (uri && ('object' == typeof uri)) {
		opts = uri;
		uri = undefined;
	}
	opts = opts || {};

	// Make sure we have a correct path
	opts.path = '/engine.io';
	var self = this;

	// Main properties
	this.opts = opts;
	this.endPoint = uri;
	this.buffer = new spike.ByteArray();
	this.readyState = 'closed';
	this.socket = null;
	this.transport = """";
	this.autoConnect = opts.autoConnect !== false;
	this._partialRecord = false;

	// Reconnection options
	this.reconnection(opts.reconnection !== false);
	this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
	this.reconnectionDelay(opts.reconnectionDelay || 1000);
	this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
	this.randomizationFactor(opts.randomizationFactor || 0.5);
	this.timeout(null == opts.timeout ? 20000 : opts.timeout);
	this.backoff = new spike.Backoff({
		min: this.reconnectionDelay(),
		max: this.reconnectionDelayMax(),
		jitter: this.randomizationFactor()
	});

	// We need to close every time the window is unloading
	window.addEventListener(""beforeunload"", function( event ) {
		console.log(""beforeunload"");
		self.disconnect();
	});

	// Event: occurs when the client is connected to the server.
	this.onConnect = null;

	// Event: occurs when the client is disconnected from the server.
	this.onDisconnect = null;
");
            
            #line 49 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 foreach(var receive in Model.Receives){ 
            
            #line default
            #line hidden
            this.Write("\t// Event: occurs when the ");
            
            #line 50 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name));
            
            #line default
            #line hidden
            this.Write(" inform is received from the server. \r\n\tthis.");
            
            #line 51 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = null; \r\n\r\n");
            
            #line 53 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 } 
            
            #line default
            #line hidden
            this.Write("\t\r\n\t// Attempt to auto-connect if specified (default behavior)\r\n\tif (this.autoCon" +
                    "nect) this.open();\r\n};\r\n\t\t    \r\n\t// Send Methods    \r\n");
            
            #line 60 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 foreach(var send in Model.Sends) { 
            
            #line default
            #line hidden
            this.Write("\t/* Sends a ");
            
            #line 61 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Name));
            
            #line default
            #line hidden
            this.Write(" request to the remote server. */\t\r\nspike.Channel.prototype.");
            
            #line 62 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = function(");
            
            #line 62 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
	
		var first = true;
		foreach(var member in send.Members){
			if(!first) Write(", ");
			Write(member.Name.CamelCase());
			first = false;
		}
	
            
            #line default
            #line hidden
            this.Write("){\r\n\t\t\r\n\tvar writer = new spike.PacketWriter();\r\n");
            
            #line 72 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
		foreach(var member in send.Members) { 
            
            #line default
            #line hidden
            this.Write("\twriter.write");
            
            #line 73 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 73 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 73 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 74 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t");
            
            #line 76 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Compressed ? "writer.compress();" : ""));
            
            #line default
            #line hidden
            this.Write("\r\n\tthis.send(\"");
            
            #line 77 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Id.ToString("X")));
            
            #line default
            #line hidden
            this.Write("\", writer);\r\n};\r\n\r\n");
            
            #line 80 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n// Dispatcher\r\nspike.Channel.prototype.onReceive = function(key, reader){\r\n\tswi" +
                    "tch (key){\r\n");
            
            #line 85 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
			foreach(var receive in Model.Receives){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t// ");
            
            #line 87 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name));
            
            #line default
            #line hidden
            this.Write(" \t\r\n\t\tcase \"");
            
            #line 88 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Id.ToString("X")));
            
            #line default
            #line hidden
            this.Write("\": {\r\n\t\t\t");
            
            #line 89 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Compressed ? "reader.decompress();" : ""));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tvar packet = new Object();\r\n");
            
            #line 91 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
				foreach(var member in receive.Members){ 
            
            #line default
            #line hidden
            this.Write("\t\t\tpacket.");
            
            #line 92 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = reader.read");
            
            #line 92 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 92 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 93 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
				} 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tif (this.");
            
            #line 95 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n\t\t\t\tthis.");
            
            #line 96 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write("(packet, this);\r\n\t\t\tthis.emit(\'");
            
            #line 97 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write("\', packet);\r\n\t\t\tthis.emit(\'");
            
            #line 98 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.WithoutInform().CamelCase()));
            
            #line default
            #line hidden
            this.Write("\', packet);\r\n\r\n\t\t} break;\r\n\r\n");
            
            #line 102 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
				} 
            
            #line default
            #line hidden
            this.Write("\r\n\t\tdefault: throw new Error(\"Received an unknown packet with \'\" + key + \"\' key.\"" +
                    ");\r\n\t}\r\n};\r\n\r\n/**\r\n * Sends the data to the remote endpoint \r\n *\r\n * @param {Str" +
                    "ing} the operation id to send\r\n * @param {spike.PacketWriter} the packet writer " +
                    "containing the buffer\r\n * @api private\r\n */\r\nspike.Channel.prototype.send = func" +
                    "tion(operationKey, writer) {\r\n\tif(typeof operationKey === \'undefined\' )\r\n\t\tthrow" +
                    " new Error(\"Attempting to send without specifying the operation.\")\r\n\tif(typeof w" +
                    "riter === \'undefined\')\r\n\t\tthrow new Error(\"Attempting to send an undefined buffe" +
                    "r.\")\r\n\r\n\t// Initialize size variables\r\n\tvar sizeOfKey = 4;\r\n\tvar sizeOfLen = 4;\r" +
                    "\n\tvar sizeTotal = 8;\r\n\r\n\t// Writes the length of the packet, the operation and t" +
                    "he data\r\n\tvar length   = writer == null ? 0 : writer.buffer.getSize();\r\n\tvar com" +
                    "piled = new spike.PacketWriter();\r\n\r\n\t// Write the length of the packet\r\n\tcompil" +
                    "ed.writeUInt32(length + sizeOfKey);\r\n\r\n\t// Write the key of the packet\r\n\tcompile" +
                    "d.writeKey(operationKey);\r\n\t\r\n\t// Write the body\r\n\tif(length > 0){\r\n\t\tcompiled.b" +
                    "uffer.writeBytes(writer.buffer.data);\r\n\t}\r\n\r\n\t// Send the payload in base64\r\n\t/*" +
                    "var data = spike.binarySupport \r\n\t\t? compiled.buffer.toBuffer()\r\n\t\t: compiled.bu" +
                    "ffer.toBase64();*/\r\n\tvar data = compiled.buffer.toBase64();\r\n\t\r\n\t//spike.debug(\'" +
                    "Sending buffer: %s (%s)\', data, (typeof data).toString());\r\n\tthis.socket.send(da" +
                    "ta);\r\n};\r\n\r\n\r\n/**\r\n* Sets the current transport `socket`.\r\n*\r\n* @param {Function" +
                    "} optional, callback\r\n* @return {Channel} self\r\n* @api public\r\n*/\r\nspike.Channel" +
                    ".prototype.open =\r\nspike.Channel.prototype.connect = function(fn){\r\n\tif (~this.r" +
                    "eadyState.indexOf(\'open\')) return this;\r\n\t\r\n\t// Create a new socket and try to c" +
                    "onnect\r\n\tthis.socket = eio.Socket(this.endPoint);\r\n\tthis.socket._channel = this;" +
                    "\r\n\r\n\t// Set the \'opening\' state\r\n\tvar self = this;\r\n\tvar socket = this.socket;\r\n" +
                    "\tthis.readyState = \'opening\';\r\n\tthis.skipReconnect = false;\r\n\r\n\t// Hook socket \'" +
                    "open\' event \r\n\tthis.socket.on(\'open\', function(){\r\n\t\tspike.debug(\'socket opened\'" +
                    ");\r\n\t\tthis._channel.onopen();\r\n\t\tfn && fn();\r\n\t});\r\n\r\n\t// Hook the error on conn" +
                    "ection\r\n\tthis.socket.on(\'error\', function(data){\r\n\t\tspike.debug(\'socket error: %" +
                    "s\', data);\r\n\t\tself.readyState = \'closed\';\r\n\t\tself.emit(\'connect_error\', data);\r\n" +
                    "\t\tif (fn) {\r\n\t\t\tvar err = new Error(\'Connection error\');\r\n\t\t\terr.data = data;\r\n\t" +
                    "\t\tfn(err);\r\n\t\t} else {\r\n\t\t\t// Only do this if there is no fn to handle the error" +
                    "\r\n\t\t\tself.maybeReconnectOnOpen();\r\n\t\t}\r\n\t});\r\n\r\n\t// emit `connect_timeout`\r\n\tif " +
                    "(false !== this._timeout) {\r\n\t\tvar timeout = this._timeout;\r\n\t\tspike.debug(\'conn" +
                    "ect attempt will timeout after %d\', timeout);\r\n\r\n\t\t// set timer\r\n\t\tvar timer = s" +
                    "etTimeout(function(){\r\n\t\t\tif(self.readyState == \'open\') return;\r\n\r\n\t\t\tspike.debu" +
                    "g(\'connect attempt timed out after %d\', timeout);\r\n\t\t\tsocket.close();\r\n\t\t\tsocket" +
                    ".emit(\'error\', \'timeout\');\r\n\t\t\tself.emit(\'connect_timeout\', timeout);\r\n\t\t}, time" +
                    "out);\r\n\t}\r\n\r\n\t// Hook socket \'close\' event \r\n\tthis.socket.on(\'close\', function(r" +
                    "eason){\r\n\t\tself.transport = null;\r\n\t\tif (self.onDisconnect != null)\r\n\t\t\tself.onD" +
                    "isconnect();\r\n\t\tself.emit(\'disconnect\');\r\n\t\tself.onclose(reason);\r\n\t});\r\n\r\n\t// I" +
                    "nvoked when the socked receives incoming data \r\n\tthis.socket.on(\'message\', funct" +
                    "ion(payload) {\r\n\r\n\t\t// Initialize size variables\r\n\t\tvar sizeOfKey = 4;\r\n\t\tvar si" +
                    "zeOfLen = 4;\r\n\t\tvar sizeTotal = 8;\r\n\r\n\t\tvar data = new spike.ByteArray();\r\n\t\tvar" +
                    " channel = this._channel;\r\n\t\tif (channel._partialRecord)\r\n\t\t{\r\n\t\t\tchannel.buffer" +
                    ".readBytesTo(data, socket.buffer.getSize());\r\n\t\t\tchannel._partialRecord = false;" +
                    "\r\n\t\t}\t\t\t\r\n\r\n\t\t//spike.debug(\'Received buffer: %s\', payload);\r\n\r\n\t\t// Read receiv" +
                    "ed data and reset (SEEK)\r\n\t\tdata.writeBase64(payload);\r\n\t\tdata.position = 0;\r\n\t\t" +
                    "\r\n\t\t// While we have data to read\r\n\t\twhile(data.position < data.getSize())\r\n\t\t{\r" +
                    "\n\t\t\tif(data.getSize() - data.position < sizeOfLen)\r\n\t\t\t{\r\n\t\t\t\t// Read the partia" +
                    "l packet \r\n\t\t\t\tchannel.buffer = new spike.ByteArray();\r\n\t\t\t\tdata.readBytesTo(soc" +
                    "ket.buffer, data.getSize() - data.position);\r\n\t\t\t\tchannel._partialRecord = true;" +
                    "\r\n\t\t\t\tbreak;\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tvar length = data.readInt(32, false) + sizeOfLen;\r\n" +
                    "\t\t\tdata.position -= sizeOfLen;\r\n\t\t\t\r\n\t\t    // If we have enough data to form a f" +
                    "ull packet.\r\n\t\t    if(length <= (data.getSize() - data.position))\r\n\t\t    {\r\n\t\t\t\t" +
                    "// Read the operation and read the actual message into a new buffer\r\n\t\t\t\tvar mes" +
                    "sageLength = data.readInt(32, false); // UNUSED\r\n\t\t\t\tvar operation = \"\";\r\n\t\t\t\tfo" +
                    "r (var i=0; i < sizeOfKey; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar byte = data.readInt(8, false);\r" +
                    "\n\t\t\t\t\tvar sbyte = byte.toString(16);\r\n\t\t\t\t\tif(sbyte.length == 1)\r\n\t\t\t\t\t\tsbyte = " +
                    "\"0\" + sbyte;\r\n\t\t\t\t\toperation += sbyte;\r\n\t\t\t\t}\r\n\t\t\t\toperation = operation.toUpper" +
                    "Case();-\r\n\t\t\t\tspike.debug(\'Operation #%s received\', operation);\r\n\r\n\t\t\t\t// New bu" +
                    "ffer for the packet\r\n\t\t\t\tvar packet = new spike.ByteArray();\r\n\t\t\t\tdata.readBytes" +
                    "To(packet, length - sizeTotal);\r\n\t\t\t\tpacket.position = 0;\r\n\t\t\r\n\t\t\t\t// Create the" +
                    " reader and fire the event\r\n\t\t\t\tvar reader = new spike.PacketReader(packet);\r\n\t\t" +
                    "\t\tchannel.onReceive(operation, reader);\r\n\t\r\n\t\t    }\r\n\t\t    else \r\n\t\t    {\r\n\t\t   " +
                    "  \t// Read the partial packet\r\n\t\t\t\tchannel.buffer = new spike.ByteArray();\r\n\t\t\t\t" +
                    "data.readBytesTo(socket.buffer, data.getSize() - data.position);\r\n\t\t\t\tchannel._p" +
                    "artialRecord = true;\r\n\t\t    }\r\n\t\t\r\n\t\t}\r\n\t});\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n/**\r\n* Cl" +
                    "ose the current socket.\r\n*\r\n* @api public\r\n*/\r\nspike.Channel.prototype.close = \r" +
                    "\nspike.Channel.prototype.disconnect = function(){\r\n\tthis.skipReconnect = true;\r\n" +
                    "\tthis.readyState = \'closed\';\r\n\tthis.socket && this.socket.close();\r\n};\r\n\r\n/**\r\n*" +
                    " Called upon transport open.\r\n*\r\n* @api private\r\n*/\r\nspike.Channel.prototype.ono" +
                    "pen = function(){\r\n\tthis.readyState = \'open\';\r\n\r\n\tif (this.onConnect != null)\r\n\t" +
                    "\tthis.onConnect();\r\n\t\r\n\tthis.emit(\'connect\');\r\n\tthis.emit(\'open\');\r\n};\r\n\r\n/**\r\n*" +
                    " Called upon engine close.\r\n*\r\n* @api private\r\n*/\r\nspike.Channel.prototype.onclo" +
                    "se = function(reason){\r\n\tspike.debug(\'socket closed: %s\', reason);\r\n\tthis.backof" +
                    "f.reset();\r\n\tthis.readyState = \'closed\';\r\n\tthis.emit(\'close\', reason);\r\n\tif (thi" +
                    "s._reconnection && !this.skipReconnect) {\r\n\t\tthis.reconnect();\r\n\t}\r\n};\r\n\r\n");
            this.Write("/**\r\n * Initialize backoff timer with `opts`.\r\n *\r\n * - `min` initial timeout in " +
                    "milliseconds [100]\r\n * - `max` max timeout [10000]\r\n * - `jitter` [0]\r\n * - `fac" +
                    "tor` [2]\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\nspike.Backoff = func" +
                    "tion(opts){\r\n  opts = opts || {};\r\n  this.ms = opts.min || 100;\r\n  this.max = op" +
                    "ts.max || 10000;\r\n  this.factor = opts.factor || 2;\r\n  this.jitter = opts.jitter" +
                    " > 0 && opts.jitter <= 1 ? opts.jitter : 0;\r\n  this.attempts = 0;\r\n};\r\n\r\n/**\r\n *" +
                    " Return the backoff duration.\r\n *\r\n * @return {Number}\r\n * @api public\r\n */\r\nspi" +
                    "ke.Backoff.prototype.duration = function(){\r\n  var ms = this.ms * Math.pow(this." +
                    "factor, this.attempts++);\r\n  if (this.jitter) {\r\n    var rand =  Math.random();\r" +
                    "\n    var deviation = Math.floor(rand * this.jitter * ms);\r\n    ms = (Math.floor(" +
                    "rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\r\n  }\r\n  return Math.min" +
                    "(ms, this.max) | 0;\r\n};\r\n\r\n/**\r\n * Reset the number of attempts.\r\n *\r\n * @api pu" +
                    "blic\r\n */\r\nspike.Backoff.prototype.reset = function(){\r\n  this.attempts = 0;\r\n};" +
                    "\r\n\r\n/**\r\n * Set the minimum duration\r\n *\r\n * @api public\r\n */\r\nspike.Backoff.pro" +
                    "totype.setMin = function(min){\r\n  this.ms = min;\r\n};\r\n\r\n/**\r\n * Set the maximum " +
                    "duration\r\n *\r\n * @api public\r\n */\r\nspike.Backoff.prototype.setMax = function(max" +
                    "){\r\n  this.max = max;\r\n};\r\n\r\n/**\r\n * Set the jitter\r\n *\r\n * @api public\r\n */\r\nsp" +
                    "ike.Backoff.prototype.setJitter = function(jitter){\r\n  this.jitter = jitter;\r\n};" +
                    "\r\n\r\n\r\n/**\r\n* Called upon successful reconnect.\r\n*\r\n* @api private\r\n*/\r\nspike.Cha" +
                    "nnel.prototype.onreconnect = function(){\r\n\tvar attempt = this.backoff.attempts;\r" +
                    "\n\tthis.reconnecting = false;\r\n\tthis.backoff.reset();\r\n\tthis.emit(\'reconnect\', at" +
                    "tempt);\r\n};\r\n\r\n/**\r\n* Sets the `reconnection` config.\r\n*\r\n* @param {Boolean} tru" +
                    "e/false if it should automatically reconnect\r\n* @return {Manager} self or value\r" +
                    "\n* @api public\r\n*/\r\nspike.Channel.prototype.reconnection = function(v){\r\n\tif (!a" +
                    "rguments.length) return this._reconnection;\r\n\tthis._reconnection = !!v;\r\n\treturn" +
                    " this;\r\n};\r\n\r\n/**\r\n* Sets the reconnection attempts config.\r\n*\r\n* @param {Number" +
                    "} max reconnection attempts before giving up\r\n* @return {Manager} self or value\r" +
                    "\n* @api public\r\n*/\r\nspike.Channel.prototype.reconnectionAttempts = function(v){\r" +
                    "\n\tif (!arguments.length) return this._reconnectionAttempts;\r\n\tthis._reconnection" +
                    "Attempts = v;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n* Sets the delay between reconnections." +
                    "\r\n*\r\n* @param {Number} delay\r\n* @return {Manager} self or value\r\n* @api public\r\n" +
                    "*/\r\nspike.Channel.prototype.reconnectionDelay = function(v){\r\n\tif (!arguments.le" +
                    "ngth) return this._reconnectionDelay;\r\n\tthis._reconnectionDelay = v;\r\n\tthis.back" +
                    "off && this.backoff.setMin(v);\r\n\treturn this;\r\n};\r\nspike.Channel.prototype.rando" +
                    "mizationFactor = function(v){\r\n\tif (!arguments.length) return this._randomizatio" +
                    "nFactor;\r\n\tthis._randomizationFactor = v;\r\n\tthis.backoff && this.backoff.setJitt" +
                    "er(v);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n* Sets the maximum delay between reconnections" +
                    ".\r\n*\r\n* @param {Number} delay\r\n* @return {Manager} self or value\r\n* @api public\r" +
                    "\n*/\r\nspike.Channel.prototype.reconnectionDelayMax = function(v){\r\n\tif (!argument" +
                    "s.length) return this._reconnectionDelayMax;\r\n\tthis._reconnectionDelayMax = v;\r\n" +
                    "\tthis.backoff && this.backoff.setMax(v);\r\n\treturn this;\r\n};\r\n\r\n/**\r\n* Sets the c" +
                    "onnection timeout. `false` to disable\r\n*\r\n* @return {Manager} self or value\r\n* @" +
                    "api public\r\n*/\r\nspike.Channel.prototype.timeout = function(v){\r\n\tif (!arguments." +
                    "length) return this._timeout;\r\n\tthis._timeout = v;\r\n\treturn this;\r\n};\r\n\r\n/**\r\n* " +
                    "Starts trying to reconnect if reconnection is enabled and we have not\r\n* started" +
                    " reconnecting yet\r\n*\r\n* @api private\r\n*/\r\nspike.Channel.prototype.maybeReconnect" +
                    "OnOpen = function() {\r\n\t// Only try to reconnect if it\'s the first time we\'re co" +
                    "nnecting\r\n\tif (!this.reconnecting && this._reconnection && this.backoff.attempts" +
                    " === 0) {\r\n\t\t// keeps reconnection from firing twice for the same reconnection l" +
                    "oop\r\n\t\tthis.reconnect();\r\n\t}\r\n};\r\n\r\n/**\r\n * Attempt a reconnection.\r\n *\r\n * @api" +
                    " private\r\n */\r\nspike.Channel.prototype.reconnect = function(){\r\n  if (this.recon" +
                    "necting || this.skipReconnect) return this;\r\n\r\n  var self = this;\r\n\r\n  if (this." +
                    "backoff.attempts >= this._reconnectionAttempts) {\r\n    spike.debug(\'reconnect fa" +
                    "iled\');\r\n    this.backoff.reset();\r\n    this.emit(\'reconnect_failed\');\r\n    this" +
                    ".reconnecting = false;\r\n  } else {\r\n    var delay = this.backoff.duration();\r\n  " +
                    "  spike.debug(\'will wait %dms before reconnect attempt\', delay);\r\n\r\n    this.rec" +
                    "onnecting = true;\r\n    var timer = setTimeout(function(){\r\n      if (self.skipRe" +
                    "connect)\r\n\t\treturn;\r\n\r\n      spike.debug(\'attempting reconnect\');\r\n      self.em" +
                    "it(\'reconnect_attempt\', self.backoff.attempts);\r\n      self.emit(\'reconnecting\'," +
                    " self.backoff.attempts);\r\n\r\n      // check again for the case socket closed in a" +
                    "bove events\r\n      if (self.skipReconnect) return;\r\n\r\n      self.open(function(e" +
                    "rr){\r\n        if (err) {\r\n          spike.debug(\'reconnect attempt error, %s\', e" +
                    "rr);\r\n          self.reconnecting = false;\r\n          self.reconnect();\r\n       " +
                    "   self.emit(\'reconnect_error\', err.data);\r\n        } else {\r\n          spike.de" +
                    "bug(\'reconnect success\');\r\n          self.onreconnect();\r\n        }\r\n      });\r\n" +
                    "    }, delay);\r\n\r\n  }\r\n};\r\n");
            this.Write("\r\n\r\n/* Mix in \'Emitter\' */\r\nspike.Emitter(spike.Channel.prototype);\r\n\r\n/* Backwar" +
                    "ds compatibility and alias*/\r\nspike.ServerChannel = spike.Channel;\r\nspike.TcpCha" +
                    "nnel = spike.Channel;");
            this.Write(" ");
            
            #line 14 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 16 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 public void Clear(){
	GenerationEnvironment.Clear();
} 
        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class JavaScriptTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
