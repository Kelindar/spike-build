// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Spike.Build.JavaScript
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class JavaScriptTemplate : JavaScriptTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n\r\n");
            
            #line 9 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "ByteArray") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("if(typeof spike === \'undefined\')\r\n\tspike = new Object();\r\n\r\nspike.ByteArray = fun" +
                    "ction(data){\r\n\t\r\n\t/* The buffer containing the byte data */\r\n\tthis.data = data;\r" +
                    "\n\t\r\n\t/* Current position in the buffer */\r\n\tthis.position = 0;\r\n\r\n\t/* By default" +
                    ": use big endian */\r\n\tthis.bigEndian = true;\r\n\r\n\t/* By default: allow exceptions" +
                    " */\r\n\tthis.allowExceptions = true;\r\n};\r\nwith({p: spike.ByteArray.prototype}){\r\n\r" +
                    "\n\t/* Writes a floating-point value to the underlying buffer. */\r\n\tp.writeFloat =" +
                    " function(number, precisionBits, exponentBits){\r\n\t\tvar bias = Math.pow(2, expone" +
                    "ntBits - 1) - 1, minExp = -bias + 1, maxExp = bias, minUnnormExp = minExp - prec" +
                    "isionBits,\r\n\t\tstatus = isNaN(n = parseFloat(number)) || n == -Infinity || n == +" +
                    "Infinity ? n : 0,\r\n\t\texp = 0, len = 2 * bias + 1 + precisionBits + 3, bin = new " +
                    "Array(len),\r\n\t\tsignal = (n = status !== 0 ? 0 : n) < 0, n = Math.abs(n), intPart" +
                    " = Math.floor(n), floatPart = n - intPart,\r\n\t\ti, lastBit, rounded, j, result;\r\n\t" +
                    "\tfor(i = len; i; bin[--i] = 0);\r\n\t\tfor(i = bias + 2; intPart && i; bin[--i] = in" +
                    "tPart % 2, intPart = Math.floor(intPart / 2));\r\n\t\tfor(i = bias + 1; floatPart > " +
                    "0 && i; (bin[++i] = ((floatPart *= 2) >= 1) - 0) && --floatPart);\r\n\t\tfor(i = -1;" +
                    " ++i < len && !bin[i];);\r\n\t\tif(bin[(lastBit = precisionBits - 1 + (i = (exp = bi" +
                    "as + 1 - i) >= minExp && exp <= maxExp ? i + 1 : bias + 1 - (exp = minExp - 1)))" +
                    " + 1]){\r\n\t\t\tif(!(rounded = bin[lastBit]))\r\n\t\t\t\tfor(j = lastBit + 2; !rounded && " +
                    "j < len; rounded = bin[j++]);\r\n\t\t\tfor(j = lastBit + 1; rounded && --j >= 0; (bin" +
                    "[j] = !bin[j] - 0) && (rounded = 0));\r\n\t\t}\r\n\t\tfor(i = i - 2 < 0 ? -1 : i - 3; ++" +
                    "i < len && !bin[i];);\r\n\r\n\t\t(exp = bias + 1 - i) >= minExp && exp <= maxExp ? ++i" +
                    " : exp < minExp &&\r\n\t\t\t(exp != bias + 1 - len && exp < minUnnormExp && this.warn" +
                    "(\'encodeFloat::float underflow\'), i = bias + 1 - (exp = minExp - 1));\r\n\t\t(intPar" +
                    "t || status !== 0) && (this.warn(intPart ? \'encodeFloat::float overflow\' : \'enco" +
                    "deFloat::\' + status),\r\n\t\t\texp = maxExp + 1, i = bias + 2, status == -Infinity ? " +
                    "signal = 1 : isNaN(status) && (bin[i] = 1));\r\n\t\tfor(n = Math.abs(exp + bias), j " +
                    "= exponentBits + 1, result = \'\'; --j; result = (n % 2) + result, n = n >>= 1);\r\n" +
                    "\t\tfor(n = 0, j = 0, i = (result = (signal ? \'1\' : \'0\') + result + bin.slice(i, i" +
                    " + precisionBits).join(\'\')).length, r = [];\r\n\t\t\ti; n += (1 << j) * result.charAt" +
                    "(--i), j == 7 && (r[r.length] = String.fromCharCode(n), n = 0), j = (j + 1) % 8)" +
                    ";\r\n\t\tr[r.length] = n ? String.fromCharCode(n) : \'\';\r\n\t\tthis.data += (this.bigEnd" +
                    "ian ? r.reverse() : r).join(\'\');\r\n\t};\r\n\r\n\t/* Writes a integral value to the unde" +
                    "rlying buffer. */\r\n\tp.writeInt = function(number, bits, signed){\r\n\t    var max =" +
                    " Math.pow(2, bits), r = [];\r\n\t    var maxs = Math.pow(2, bits - 1);\r\n\t\t(signed &" +
                    "& (number >= maxs || number < -maxs)) && this.warn(\'writeInt::overflow\') && (num" +
                    "ber = 0);\r\n\t\t(!signed && (number >= max || (number < -(max >> 1)))) && this.warn" +
                    "(\'writeUInt::overflow\') && (number = 0);\r\n\t\tnumber < 0 && (number += max);\r\n\t\tfo" +
                    "r(; number; r[r.length] = String.fromCharCode(number % 256), number = Math.floor" +
                    "(number / 256));\r\n\t\tfor(bits = -(-bits >> 3) - r.length; bits--; r[r.length] = \'" +
                    "\\0\');\r\n\t\tthis.data += (this.bigEndian ? r.reverse() : r).join(\'\');\r\n\t};\r\n\r\n\t/* W" +
                    "rites an unsigned byte value to the underlying buffer. */\r\n\tp.writeByte = functi" +
                    "on(number){\r\n\t\tthis.writeInt(number, 8, false);\r\n\t};\r\n\r\n\t/* Writes bytes to the " +
                    "underlying buffer. */\r\n\tp.writeBytes = function(bytes){\r\n\t\tthis.data += bytes;\r\n" +
                    "\t};\r\n\r\n\t/* Reads a floating-point value from the underlying buffer. */\r\n\tp.readF" +
                    "loat = function(precisionBits, exponentBits){\r\n\t\tvar blen = (precisionBits + exp" +
                    "onentBits + 1) / 8;\r\n\t\tvar data = this.data.slice(this.position, this.position +" +
                    " blen);\r\n\t\tthis.position += blen;\r\n\t\tvar b = ((b = new this.Buffer(this.bigEndia" +
                    "n, data)).checkBuffer(precisionBits + exponentBits + 1), b),\r\n\t\t\tbias = Math.pow" +
                    "(2, exponentBits - 1) - 1, signal = b.readBits(precisionBits + exponentBits, 1)," +
                    "\r\n\t\t\texponent = b.readBits(precisionBits, exponentBits), significand = 0,\r\n\t\t\tdi" +
                    "visor = 2, curByte = b.buffer.length + (-precisionBits >> 3) - 1,\r\n\t\t\tbyteValue," +
                    " startBit, mask;\r\n\t\tdo\r\n\t\t\tfor(byteValue = b.buffer[ ++curByte ], startBit = pre" +
                    "cisionBits % 8 || 8, mask = 1 << startBit;\r\n\t\t\t\tmask >>= 1; (byteValue & mask) &" +
                    "& (significand += 1 / divisor), divisor *= 2);\r\n\t\twhile(precisionBits -= startBi" +
                    "t);\r\n\t\treturn exponent == (bias << 1) + 1 ? significand ? NaN : signal ? -Infini" +
                    "ty : +Infinity\r\n\t\t\t: (1 + signal * -2) * (exponent || significand ? !exponent ? " +
                    "Math.pow(2, -bias + 1) * significand\r\n\t\t\t: Math.pow(2, exponent - bias) * (1 + s" +
                    "ignificand) : 0);\r\n\t};\r\n\r\n\t/* Reads an integral value from the underlying buffer" +
                    ". */\r\n\tp.readInt = function(bits, signed){\r\n\t\tvar blen = bits / 8;\r\n\t\tvar data =" +
                    " this.data.slice(this.position, this.position + blen);\r\n\t\tthis.position += blen;" +
                    "\r\n\t\tvar b = new this.Buffer(this.bigEndian, data), x = b.readBits(0, bits), max " +
                    "= Math.pow(2, bits);\r\n\t\treturn signed && x >= max / 2 ? x - max : x;\r\n\t};\r\n\r\n\t/*" +
                    " Reads an unsigned byte value from the underlying buffer. */\r\n\tp.readByte = func" +
                    "tion(){\r\n\t\treturn this.readInt(8, false);\r\n\t};\r\n\r\n\t/* Reads bytes from the under" +
                    "lying buffer. */\r\n\tp.readBytes = function(count){\r\n\t\tvar r = this.data.slice(thi" +
                    "s.position, this.position + count);\r\n\t\tthis.position += count;\r\n\t\treturn r;\r\n\t};" +
                    "\r\n\r\n\t/* Gets a byte value on a specified position */\r\n\tp.getAt = function(index)" +
                    "{\r\n\t\treturn this.data.charCodeAt(index) & 0xff;\r\n\t};\r\n\r\n\t/* Appends the underlyi" +
                    "ng buffer data to the specified buffer. */\r\n\tp.readBytesTo = function(targetBuff" +
                    "er, count){\r\n\t\ttargetBuffer.data += this.data.slice(this.position, this.position" +
                    " + count);\r\n\t\tthis.position += count;\r\n\t};\r\n\r\n\t/* Appends the underlying buffer " +
                    "data to the specified buffer. */\r\n\tp.getSize = function(){\r\n\t\treturn this.data.l" +
                    "ength;\r\n\t};\r\n\r\n\t/* Gets the byte array data as base64 encoded string */\r\n\tp.toBa" +
                    "se64 = function(){\r\n\t\tvar cleanBuffer = new Array();\r\n\t\tvar result = \"\";\r\n\r\n\t   " +
                    "\tfor(var i=0; i<this.getSize(); ++i)\r\n\t\t\tcleanBuffer.push(this.getAt(i));\r\n\t\tfor" +
                    " (var i = 0; i < cleanBuffer.length; i++)\r\n\t\t\tresult += String.fromCharCode(clea" +
                    "nBuffer[i]);\t\r\n\r\n\t\tif (typeof(btoa) === \'function\') {\r\n\t\t\treturn btoa(result);\r\n" +
                    "\t\t} else {\r\n\t\t\treturn this._btoa(result);\r\n\t\t}\r\n\t};\r\n\r\n\t/* Writes base 64 encode" +
                    "d string to the buffer after decoding it */\r\n\tp.writeBase64 = function(input){\r\n" +
                    "\t\tif (typeof(atob) === \'function\') {\r\n\t\t\tthis.writeBytes(atob(input));\r\n\t\t} else" +
                    " {\r\n\t\t\tthis.writeBytes(this._atob(input));\r\n\t\t}\r\n\t};\r\n\r\n     /* btoa() for Inter" +
                    "net Explorer */\r\n     p._btoa = function(str) {\r\n          var chars = \'ABCDEFGH" +
                    "IJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\';\r\n          var encod" +
                    "ed = [];\r\n          var c = 0;\r\n          while (c < str.length) {\r\n            " +
                    "  var b0 = str.charCodeAt(c++);\r\n              var b1 = str.charCodeAt(c++);\r\n  " +
                    "            var b2 = str.charCodeAt(c++);\r\n              var buf = (b0 << 16) + " +
                    "((b1 || 0) << 8) + (b2 || 0);\r\n              var i0 = (buf & (63 << 18)) >> 18;\r" +
                    "\n              var i1 = (buf & (63 << 12)) >> 12;\r\n              var i2 = isNaN(" +
                    "b1) ? 64 : (buf & (63 << 6)) >> 6;\r\n              var i3 = isNaN(b2) ? 64 : (buf" +
                    " & 63);\r\n              encoded[encoded.length] = chars.charAt(i0);\r\n            " +
                    "  encoded[encoded.length] = chars.charAt(i1);\r\n              encoded[encoded.len" +
                    "gth] = chars.charAt(i2);\r\n              encoded[encoded.length] = chars.charAt(i" +
                    "3);\r\n          }\r\n          return encoded.join(\'\');\r\n      };\r\n\r\n\t/* atob() for" +
                    " Internet Explorer */\r\n\tp._atob = function(input) {\r\n\t    var b64array = \"ABCDEF" +
                    "GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\t    var output =" +
                    " \"\";\r\n\t    var hex = \"\";\r\n\t    var chr1, chr2, chr3 = \"\";\r\n\t    var enc1, enc2, " +
                    "enc3, enc4 = \"\";\r\n\t    var i = 0;\r\n\t\r\n\t    input = input.replace(/[^A-Za-z0-9\\+\\" +
                    "/\\=]/g, \"\");\r\n\t\r\n\t    do {\r\n\t        enc1 = b64array.indexOf(input.charAt(i++));" +
                    "\r\n\t        enc2 = b64array.indexOf(input.charAt(i++));\r\n\t        enc3 = b64array" +
                    ".indexOf(input.charAt(i++));\r\n\t        enc4 = b64array.indexOf(input.charAt(i++)" +
                    ");\r\n\t        \r\n\t        chr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t        chr2 = ((enc" +
                    "2 & 15) << 4) | (enc3 >> 2);\r\n\t        chr3 = ((enc3 & 3) << 6) | enc4;\r\n\t      " +
                    "  \r\n\t        output = output + String.fromCharCode(chr1);\r\n\t        \r\n\t        i" +
                    "f (enc3 != 64) {\r\n\t            output = output + String.fromCharCode(chr2);\r\n\t  " +
                    "      }\r\n\t        if (enc4 != 64) {\r\n\t            output = output + String.fromC" +
                    "harCode(chr3);\r\n\t        }\r\n\t    \r\n\t        chr1 = chr2 = chr3 = \"\";\r\n\t        e" +
                    "nc1 = enc2 = enc3 = enc4 = \"\";\r\n\t    \r\n\t    } while (i < input.length);\r\n\r\n\t    " +
                    "return output;\r\n\t};\r\n\r\n\r\n\twith({p: (p.Buffer = function(bigEndian, buffer){\r\n\t\tt" +
                    "his.bigEndian = bigEndian || 0, this.buffer = [], this.setBuffer(buffer);\r\n\t}).p" +
                    "rototype}){\r\n\t\tp.readBits = function(start, length){\r\n\t\t\t//shl fix: Henri Torgem" +
                    "ane ~1996 (compressed by Jonas Raoni)\r\n\t\t\tfunction shl(a, b){\r\n\t\t\t\tfor(++b; --b;" +
                    " a = ((a %= 0x7fffffff + 1) & 0x40000000) == 0x40000000 ? a * 2 : (a - 0x4000000" +
                    "0) * 2 + 0x7fffffff + 1);\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\t\tif(start < 0 || length <= 0)\r" +
                    "\n\t\t\t\treturn 0;\r\n\t\t\tthis.checkBuffer(start + length);\r\n\t\t\tfor(var offsetLeft, off" +
                    "setRight = start % 8, curByte = this.buffer.length - (start >> 3) - 1,\r\n\t\t\t\tlast" +
                    "Byte = this.buffer.length + (-(start + length) >> 3), diff = curByte - lastByte," +
                    "\r\n\t\t\t\tsum = ((this.buffer[ curByte ] >> offsetRight) & ((1 << (diff ? 8 - offset" +
                    "Right : length)) - 1))\r\n\t\t\t\t+ (diff && (offsetLeft = (start + length) % 8) ? (th" +
                    "is.buffer[ lastByte++ ] & ((1 << offsetLeft) - 1))\r\n\t\t\t\t<< (diff-- << 3) - offse" +
                    "tRight : 0); diff; sum += shl(this.buffer[ lastByte++ ], (diff-- << 3) - offsetR" +
                    "ight)\r\n\t\t\t);\r\n\t\t\treturn sum;\r\n\t\t};\r\n\t\tp.setBuffer = function(data){\r\n\t\t\tif(data)" +
                    "{\r\n\t\t\t\tfor(var l, i = l = data.length, b = this.buffer = new Array(l); i; b[l - " +
                    "i] = data.charCodeAt(--i));\r\n\t\t\t\tthis.bigEndian && b.reverse();\r\n\t\t\t}\r\n\t\t};\r\n\t\tp" +
                    ".hasNeededBits = function(neededBits){\r\n\t\t\treturn this.buffer.length >= -(-neede" +
                    "dBits >> 3);\r\n\t\t};\r\n\t\tp.checkBuffer = function(neededBits){\r\n\t\t\tif(!this.hasNeed" +
                    "edBits(neededBits))\r\n\t\t\t\tthrow new Error(\'checkBuffer::missing bytes\');\r\n\t\t};\r\n\t" +
                    "}\r\n\tp.warn = function(msg){\r\n\t\tif(this.allowExceptions)\r\n\t\t\tthrow new Error(msg)" +
                    ";\r\n\t\treturn 1;\r\n\t};\r\n\r\n}");
            
            #line 9 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 10 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "PacketCompressor") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("/*\r\n* JavaScript LibLZF Port:\r\n* Copyright (c) 2011 Roman Atachiants <kelindar@gm" +
                    "ail.com>\r\n* \r\n* Original CLZF C# Port:\r\n* Copyright (c) 2005 Oren J. Maurice <oy" +
                    "maurice@hazorea.org.il>\r\n* \r\n* Original LibLZF Library & Algorithm:\r\n* Copyright" +
                    " (c) 2000-2008 Marc Alexander Lehmann <schmorp@schmorp.de>\r\n* \r\n* Redistribution" +
                    " and use in source and binary forms, with or without modifica-\r\n* tion, are perm" +
                    "itted provided that the following conditions are met:\r\n* \r\n*   1.  Redistributio" +
                    "ns of source code must retain the above copyright notice,\r\n*       this list of " +
                    "conditions and the following disclaimer.\r\n* \r\n*   2.  Redistributions in binary " +
                    "form must reproduce the above copyright\r\n*       notice, this list of conditions" +
                    " and the following disclaimer in the\r\n*       documentation and/or other materia" +
                    "ls provided with the distribution.\r\n* \r\n*   3.  The name of the author may not b" +
                    "e used to endorse or promote products\r\n*       derived from this software withou" +
                    "t specific prior written permission.\r\n* \r\n* THIS SOFTWARE IS PROVIDED BY THE AUT" +
                    "HOR ``AS IS\'\' AND ANY EXPRESS OR IMPLIED\r\n* WARRANTIES, INCLUDING, BUT NOT LIMIT" +
                    "ED TO, THE IMPLIED WARRANTIES OF MER-\r\n* CHANTABILITY AND FITNESS FOR A PARTICUL" +
                    "AR PURPOSE ARE DISCLAIMED.  IN NO\r\n* EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DI" +
                    "RECT, INDIRECT, INCIDENTAL, SPE-\r\n* CIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (I" +
                    "NCLUDING, BUT NOT LIMITED TO,\r\n* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LO" +
                    "SS OF USE, DATA, OR PROFITS;\r\n* OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON " +
                    "ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCL" +
                    "UDING NEGLIGENCE OR OTH-\r\n* ERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SO" +
                    "FTWARE, EVEN IF ADVISED\r\n* OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*\r\n* Alternativel" +
                    "y, the contents of this file may be used under the terms of\r\n* the GNU General P" +
                    "ublic License version 2 (the \"GPL\"), in which case the\r\n* provisions of the GPL " +
                    "are applicable instead of the above. If you wish to\r\n* allow the use of your ver" +
                    "sion of this file only under the terms of the\r\n* GPL and not to allow others to " +
                    "use your version of this file under the\r\n* BSD license, indicate your decision b" +
                    "y deleting the provisions above and\r\n* replace them with the notice and other pr" +
                    "ovisions required by the GPL. If\r\n* you do not delete the provisions above, a re" +
                    "cipient may use your version\r\n* of this file under either the BSD or the GPL.\r\n*" +
                    "/\r\n\r\nspike.PacketCompressor = function()\r\n{\r\n\tthis.HLOG = 14;\r\n\tthis.HSIZE = (1 " +
                    "<< 14);\r\n\tthis.MAX_LIT = (1 << 5);\r\n\tthis.MAX_OFF = (1 << 13);\r\n\tthis.MAX_REF = " +
                    "((1 << 8) + (1 << 3));\r\n\r\n\t//private var HashTable:Array = new Array(this.HSIZE)" +
                    ";\t\t\r\n\tthis.HashTable = new Array(this.HSIZE);\t\t\r\n\t\r\n\t/* Compresses the data usin" +
                    "g LibLZF algorithm */\r\n\tthis.compress = function(input, inputLength)\r\n\t{\r\n\t\tthis" +
                    ".HashTable.splice(0, this.HSIZE);\r\n\t\t\r\n\t\tvar output = new spike.ByteArray([]);\r\n" +
                    "\t\t\r\n\t\tvar hslot;\r\n\t\tvar iidx = 0;\r\n\t\tvar oidx = 0;\r\n\t\tvar reference;\r\n\t\t\r\n\t\tvar " +
                    "hval = (((input.getAt(iidx)) << 8) | input.getAt(iidx + 1)); // FRST(in_data, ii" +
                    "dx);\r\n\t\tvar off;\r\n\t\tvar lit = 0;\r\n\t\t\r\n\t\tfor (; ; )\r\n\t\t{\r\n\t\t\tif (iidx < inputLeng" +
                    "th - 2)\r\n\t\t\t{\r\n\t\t\t\thval = (hval << 8) | input.getAt(iidx + 2);\r\n\t\t\t\thslot = ((hv" +
                    "al ^ (hval << 5)) >> (((3 * 8 - this.HLOG)) - hval * 5) & (this.HSIZE - 1));\r\n\t\t" +
                    "\t\treference = this.HashTable[hslot];\r\n\t\t\t\tthis.HashTable[hslot] = iidx;\r\n\t\t\t\t\r\n\t" +
                    "\t\t\t\r\n\t\t\t\tif ((off = iidx - reference - 1) < this.MAX_OFF\r\n\t\t\t\t\t&& iidx + 4 < inp" +
                    "utLength\r\n\t\t\t\t\t&& reference > 0\r\n\t\t\t\t\t&& input.getAt(reference + 0) == input.get" +
                    "At(iidx + 0)\r\n\t\t\t\t\t&& input.getAt(reference + 1) == input.getAt(iidx + 1)\r\n\t\t\t\t\t" +
                    "&& input.getAt(reference + 2) == input.getAt(iidx + 2)\r\n\t\t\t\t)\r\n\t\t\t\t{\r\n\t\t\t\t\t/* ma" +
                    "tch found at *reference++ */\r\n\t\t\t\t\tvar len = 2;\r\n\t\t\t\t\tvar maxlen = inputLength -" +
                    " iidx - len;\r\n\t\t\t\t\tmaxlen = maxlen > this.MAX_REF ? this.MAX_REF : maxlen;\r\n\t\t\t\t" +
                    "\t\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tlen++;\r\n\t\t\t\t\twhile (len < maxlen && input.getAt(reference + le" +
                    "n) == input.getAt(iidx + len));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (lit != 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toidx++" +
                    ";\r\n\t\t\t\t\t\toutput.writeByte(lit - 1);\r\n\t\t\t\t\t\tlit = -lit;\r\n\t\t\t\t\t\tdo\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t" +
                    "\t\toidx++;\r\n\t\t\t\t\t\t\toutput.writeByte(input.getAt(iidx + lit));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhi" +
                    "le ((++lit) != 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlen -= 2;\r\n\t\t\t\t\tiidx++;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif " +
                    "(len < 7)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toidx++;\r\n\t\t\t\t\t\toutput.writeByte((off >> 8) + (len << 5)" +
                    ");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toidx++;\r\n\t\t\t\t\t\toidx++;\r\n\t\t\t\t\t\toutput.writeB" +
                    "yte((off >> 8) + (7 << 5));\r\n\t\t\t\t\t\toutput.writeByte(len - 7);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t" +
                    "\t\t\toidx++;\r\n\t\t\t\t\toutput.writeByte(off);\r\n\t\t\t\t\t\r\n\t\t\t\t\tiidx += len - 1;\r\n\t\t\t\t\thval" +
                    " = (((input.getAt(iidx)) << 8) | input.getAt(iidx + 1)); \r\n\t\t\t\t\t\r\n\t\t\t\t\thval = (h" +
                    "val << 8) | input.getAt(iidx + 2);\r\n\t\t\t\t\tthis.HashTable[((hval ^ (hval << 5)) >>" +
                    " (((3 * 8 - this.HLOG)) - hval * 5) & (this.HSIZE - 1))] = iidx;\r\n\t\t\t\t\tiidx++;\r\n" +
                    "\t\t\t\t\t\r\n\t\t\t\t\thval = (hval << 8) | input.getAt(iidx + 2);\r\n\t\t\t\t\tthis.HashTable[((h" +
                    "val ^ (hval << 5)) >> (((3 * 8 - this.HLOG)) - hval * 5) & (this.HSIZE - 1))] = " +
                    "iidx;\r\n\t\t\t\t\tiidx++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (iidx == inputLengt" +
                    "h)\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t/* one more literal byte we must copy */\r\n\t\t\tlit++;\r\n\t\t\t" +
                    "iidx++;\r\n\t\t\t\r\n\t\t\tif (lit == this.MAX_LIT)\r\n\t\t\t{\r\n\t\t\t\toidx++;\r\n\t\t\t\toutput.writeBy" +
                    "te((this.MAX_LIT - 1));\r\n\t\t\t\tlit = -lit;\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\toidx++;\r\n\t\t\t\t\toutp" +
                    "ut.writeByte(input.getAt(iidx + lit));\r\n\t\t\t\t}\r\n\t\t\t\twhile ((++lit) != 0);\r\n\t\t\t}\r\n" +
                    "\t\t}\r\n\t\t\r\n\t\tif (lit != 0)\r\n\t\t{\r\n\t\t\toidx++;\r\n\t\t\toutput.writeByte((lit - 1));\r\n\t\t\tl" +
                    "it = -lit;\r\n\t\t\tdo\r\n\t\t\t{\r\n\t\t\t\toidx++;\r\n\t\t\t\toutput.writeByte(input.getAt(iidx + li" +
                    "t));\r\n\t\t\t}\r\n\t\t\twhile ((++lit) != 0);\r\n\t\t}\r\n\t\t\r\n\t\toutput.length = oidx;\r\n\t\treturn" +
                    " output;\r\n\t}\r\n\t\r\n\t/* Decompresses the data using LibLZF algorithm */\r\n\tthis.deco" +
                    "mpress = function(input, inputLength)\r\n\t{\r\n\t\tvar iidx = 0;\r\n\t\tvar oidx = 0;\r\n\t\tv" +
                    "ar output = new spike.ByteArray([]);\r\n\r\n\t\tdo\r\n\t\t{\r\n\t\t\tvar ctrl = input.getAt(iid" +
                    "x);\r\n\t\t\tiidx++;\r\n\t\t\t\r\n\t\t\tif (ctrl < (1 << 5)) /* literal run */\r\n\t\t\t{\r\n\t\t\t\tctrl+" +
                    "+;\r\n\t\t\t\t\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.writeByte(input.getAt(iidx));\r\n\t\t\t\t\tiidx++;" +
                    "\r\n\t\t\t\t\toidx++;\r\n\t\t\t\t}\r\n\t\t\t\twhile ((--ctrl) != 0);\r\n\t\t\t}\r\n\t\t\telse /* back referen" +
                    "ce */\r\n\t\t\t{\r\n\t\t\t\tvar len = ctrl >> 5;\r\n\t\t\t\tvar reference = (oidx - ((ctrl & 0x1f" +
                    ") << 8) - 1);\r\n\t\t\t\t\r\n\t\t\t\tif (len == 7){\r\n\t\t\t\t\tlen += input.getAt(iidx);\r\n\t\t\t\t\tii" +
                    "dx++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treference -= input.getAt(iidx);\r\n\t\t\t\tiidx++;\r\n\t\t\t\t\r\n\t\t\t\t" +
                    "if (reference < 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t//SET_ERRNO (EINVAL);\r\n\t\t\t\t\toutput.length = 0;\r\n" +
                    "\t\t\t\t\treturn output;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.writeByte(output.getAt(reference));\r\n\t\t" +
                    "\t\treference++;\r\n\t\t\t\toidx++;\r\n\t\t\t\toutput.writeByte(output.getAt(reference));\r\n\t\t\t" +
                    "\treference++;\r\n\t\t\t\toidx++;\r\n\t\t\t\t\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.writeByte(output.ge" +
                    "tAt(reference));\r\n\t\t\t\t\treference++;\r\n\t\t\t\t\toidx++;\r\n\t\t\t\t}\r\n\t\t\t\twhile ((--len) != " +
                    "0);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile (iidx < inputLength);\r\n\t\t\r\n\t\toutput.length = oidx;\r\n\t\tre" +
                    "turn output;\r\n\t}\r\n\t\r\n};");
            
            #line 10 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 11 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "PacketWriter") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("spike.PacketWriter = function(bufferTowrite){\r\n\tthis.buffer = new spike.ByteArray" +
                    "([]);\r\n}\r\n\r\n/* Compresses the packet */\r\nspike.PacketWriter.prototype.compress =" +
                    " function()\r\n{\t\t\t\r\n\tthis.buffer = new spike.PacketCompressor().compress(this.buf" +
                    "fer, this.buffer.getSize());\r\n}\t\r\n\t\r\nspike.PacketWriter.prototype.writeBoolean =" +
                    " function(value){\r\n\tif(value){\r\n\t\tthis.buffer.writeInt(1, 8, false);\r\n\t}else{\r\n\t" +
                    "\tthis.buffer.writeInt(0, 8, false);\r\n\t}\r\n}\r\n\t\r\nspike.PacketWriter.prototype.writ" +
                    "eKey = function(value){\r\n\tfor(var i=0; i < 8; i+=2)\r\n\t{\r\n\t\tvar s = value.charAt(" +
                    "i) + value.charAt(i + 1);\r\n\t\tvar b = parseInt(s, 16);\r\n\t\tthis.buffer.writeInt(b," +
                    " 8, false);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeByte = function(value){\r" +
                    "\n\tthis.buffer.writeInt(value, 8, false);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.wri" +
                    "teSByte = function(value){\r\n\tthis.buffer.writeInt(value, 8, true);\r\n}\r\n\t\r\nspike." +
                    "PacketWriter.prototype.writeInt16 = function(value){\r\n\tthis.buffer.writeInt(valu" +
                    "e, 16, true);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.writeInt32 = function(value){\r" +
                    "\n\tthis.buffer.writeInt(value, 32, true);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.wri" +
                    "teInt64 = function(value){\r\n\tthis.buffer.writeInt(value, 64, true);\r\n}\r\n\t\r\nspike" +
                    ".PacketWriter.prototype.writeUInt16 = function(value){\r\n\tthis.buffer.writeInt(va" +
                    "lue, 16, false);\r\n}\r\n\t\r\nspike.PacketWriter.prototype.writeUInt32 = function(valu" +
                    "e){\r\n\tthis.buffer.writeInt(value, 32, false);\r\n}\r\n\t\r\nspike.PacketWriter.prototyp" +
                    "e.writeUInt64 = function(value){\r\n\tthis.buffer.writeInt(value, 64, false);\r\n}\r\n\r" +
                    "\nspike.PacketWriter.prototype.writeDateTime = function(value){\r\n\tthis.writeInt16" +
                    "(value.getFullYear());\r\n\tthis.writeInt16(value.getMonth() + 1);\r\n\tthis.writeInt1" +
                    "6(value.getDate());\r\n\tthis.writeInt16(value.getHours());\r\n\tthis.writeInt16(value" +
                    ".getMinutes());\r\n\tthis.writeInt16(value.getSeconds());\r\n\tthis.writeInt16(value.g" +
                    "etMilliseconds());\r\n}\r\n\r\nspike.PacketWriter.prototype.writeSingle = function(val" +
                    "ue){\r\n\tthis.buffer.writeFloat(value, 23, 8);\r\n}\r\n\t\r\nspike.PacketWriter.prototype" +
                    ".writeDouble = function(value){\r\n\tthis.buffer.writeFloat(value, 52, 11);\r\n}\r\n\t\r\n" +
                    "spike.PacketWriter.prototype.writeString = function(value){\r\n\tif(value == \'undef" +
                    "ined\' || value == null || value.length == 0){\r\n\t\tthis.writeInt32(0);\t\t\r\n\t}else{\r" +
                    "\n\t\tvalue = unescape(encodeURIComponent(value));\r\n\t\tthis.writeInt32(value.length)" +
                    ";\r\n\t\tthis.buffer.writeBytes(value);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.write" +
                    "Dynamic = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"number\")\r\n\t" +
                    "{\r\n\t\tthis.writeByte(1);\r\n\t\tthis.writeString(\"Double\");\r\n\t\tthis.writeDouble(value" +
                    ");\r\n\t}\r\n\telse if(type == \"boolean\")\r\n\t{\r\n\t\tthis.writeByte(1);\r\n\t\tthis.writeStrin" +
                    "g(\"Boolean\");\r\n\t\tthis.writeBoolean(value);\r\n\t}\r\n\telse if(type == \"string\")\r\n\t{\r\n" +
                    "\t\tthis.writeByte(1);\r\n\t\tthis.writeString(\"String\");\r\n\t\tthis.writeString(value);\r" +
                    "\n\t}\r\n\telse if(type == \"object\" && value instanceof Date)\r\n\t{\r\n\t\tthis.writeByte(1" +
                    ");\r\n\t\tthis.writeString(\"DateTime\");\r\n\t\tthis.writeDateTime(value);\r\n\t}\r\n\telse\r\n\t{" +
                    "\r\n\t\tthis.writeByte(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfByte =" +
                    " function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value ins" +
                    "tanceof ByteArray){\r\n\t\tthis.writeInt32(value.getSize());\r\n\t\tthis.buffer.writeByt" +
                    "es(value.data);\r\n\t}else{\r\n\t\tthis.writeInt32(value.length);\r\n\t\tthis.buffer.writeB" +
                    "ytes(value);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfUInt16 = functio" +
                    "n(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instanceof " +
                    "Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n" +
                    "\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeUInt16(value[i]);\r\n\t\t}\r\n\t}els" +
                    "e{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfInt" +
                    "16 = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value" +
                    " instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n" +
                    "\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeInt16(value[i]);\r" +
                    "\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writ" +
                    "eArrayOfInt32 = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"objec" +
                    "t\" && value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.len" +
                    "gth == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeInt32(" +
                    "value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.pro" +
                    "totype.writeArrayOfUInt32 = function(value){\r\n\tvar type = typeof(value);\r\n\tif(ty" +
                    "pe == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\t" +
                    "if(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis" +
                    ".writeUInt32(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.Pac" +
                    "ketWriter.prototype.writeArrayOfInt64 = function(value){\r\n\tvar type = typeof(val" +
                    "ue);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value." +
                    "length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++" +
                    "i){\r\n\t\t\tthis.writeInt64(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n" +
                    "\r\nspike.PacketWriter.prototype.writeArrayOfUInt64 = function(value){\r\n\tvar type " +
                    "= typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.write" +
                    "Int32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<valu" +
                    "e.length; ++i){\r\n\t\t\tthis.writeUInt64(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32" +
                    "(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfDouble = function(value)" +
                    "{\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r" +
                    "\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(va" +
                    "r i=0; i<value.length; ++i){\r\n\t\t\tthis.writeDouble(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tth" +
                    "is.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfSingle = fu" +
                    "nction(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instan" +
                    "ceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\tretu" +
                    "rn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeSingle(value[i]);\r\n\t\t}\r\n" +
                    "\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArray" +
                    "OfDateTime = function(value){\r\n\tvar type = typeof(value);\r\n\tif(type == \"object\" " +
                    "&& value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\tif(value.length" +
                    " == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis.writeDateTime(" +
                    "value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.pro" +
                    "totype.writeArrayOfString = function(value){\r\n\tvar type = typeof(value);\r\n\tif(ty" +
                    "pe == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(value.length);\r\n\t\t" +
                    "if(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; ++i){\r\n\t\t\tthis" +
                    ".writeString(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\nspike.Pac" +
                    "ketWriter.prototype.writeArrayOfBoolean = function(value){\r\n\tvar type = typeof(v" +
                    "alue);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis.writeInt32(valu" +
                    "e.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i<value.length; " +
                    "++i){\r\n\t\t\tthis.writeBoolean(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r" +
                    "\n}\r\n\r\nspike.PacketWriter.prototype.writeArrayOfDynamic = function(value){\r\n\tvar " +
                    "type = typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t\tthis." +
                    "writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var i=0; i" +
                    "<value.length; ++i){\r\n\t\t\tthis.writeDynamic(value[i]);\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writ" +
                    "eInt32(0);\r\n\t}\r\n}\r\n\r\nspike.PacketWriter.prototype.writeArray = function(value){\r" +
                    "\n\tvar type = typeof(value);\r\n\tif(type == \"object\" && value instanceof Array){\r\n\t" +
                    "\tthis.writeInt32(value.length);\r\n\t\tif(value.length == 0)\r\n\t\t\treturn;\r\n\t\tfor(var " +
                    "i=0; i<value.length; ++i){\r\n\t\t\tif(value[i].write != \'undefined\'){\r\n\t\t\t\tvalue[i]." +
                    "write(this);\r\n\t\t\t}else{\r\n\t\t\t\tthrow \"Unable to write, the array contains unknown " +
                    "elements\";\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tthis.writeInt32(0);\r\n\t}\r\n}\r\n\r\n\r\n");
            
            #line 318 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 foreach(var customType in Model.CustomTypes) { 
            
            #line default
            #line hidden
            this.Write("spike.PacketWriter.prototype.write");
            
            #line 319 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(value)\r\n{\r\n    ");
            
            #line 321 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 foreach(var member in customType.Members){ 
            
            #line default
            #line hidden
            this.Write("\t\tthis.write");
            
            #line 322 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 322 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("(value.");
            
            #line 322 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n    ");
            
            #line 323 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 } 
            
            #line default
            #line hidden
            this.Write("}\r\n\r\nprotected void WriteArrayOf");
            
            #line 326 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(value)\r\n{\r\n\tif(Object.prototype.toString.call( someVar ) !== \'[object" +
                    " Array]\')\r\n\t\tthrow new Error(\"Attempted to write an invalid array.\");\r\n\r\n    thi" +
                    "s.writeInt32(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n       " +
                    " this.write");
            
            #line 333 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write("(value[i]);\r\n}\r\n");
            
            #line 335 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketWriter.t4"
 } 
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 11 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 12 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "PacketReader") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("/* The packet reader which is used for reading binary buffer */\r\nspike.PacketRead" +
                    "er = function(byteArray){\r\n    this.buffer = byteArray;\r\n}\r\n\r\nspike.PacketReader" +
                    ".prototype.decompress = function(){\r\n\tthis.buffer = new spike.PacketCompressor()" +
                    ".decompress(this.buffer, this.buffer.getSize());\r\n\tthis.buffer.position = 0;\r\n}\r" +
                    "\n\r\nspike.PacketReader.prototype.readBoolean = function(){\r\n\treturn this.buffer.r" +
                    "eadInt(8, false) == 1;\r\n}\r\n\r\nspike.PacketReader.prototype.readByte = function(){" +
                    "\r\n    return this.buffer.readInt(8, false);\r\n}\r\n\r\nspike.PacketReader.prototype.r" +
                    "eadSByte = function(){\r\n    return this.buffer.readInt(8, true);\r\n}\r\n\r\nspike.Pac" +
                    "ketReader.prototype.readInt16 = function(){\r\n    return this.buffer.readInt(16, " +
                    "true);\r\n}\r\n\r\nspike.PacketReader.prototype.readInt32 = function(){\r\n    return th" +
                    "is.buffer.readInt(32, true);\r\n}\r\n\r\nspike.PacketReader.prototype.readInt64 = func" +
                    "tion(){\r\n    return this.buffer.readInt(64, true);\r\n}\r\n\r\nspike.PacketReader.prot" +
                    "otype.readUInt16 = function(){\r\n    return this.buffer.readInt(16, false);\r\n}\r\n\r" +
                    "\nspike.PacketReader.prototype.readUInt32 = function(){\r\n    return this.buffer.r" +
                    "eadInt(32, false);\r\n}\r\n\r\nspike.PacketReader.prototype.readUInt64 = function(){\r\n" +
                    "    return this.buffer.readInt(64, false);\r\n}\r\n\r\nspike.PacketReader.prototype.re" +
                    "adDateTime = function(){\r\n\tvar year = this.readInt16();\r\n\tvar month = this.readI" +
                    "nt16() - 1;\r\n\tvar date = this.readInt16();\r\n\tvar hour = this.readInt16();\r\n\tvar " +
                    "minute = this.readInt16();\r\n\tvar second = this.readInt16();\r\n\tvar millisecond = " +
                    "this.readInt16();\r\n\t\t\t\r\n\treturn new Date(year,month,date,hour,minute,second,mill" +
                    "isecond);\r\n}\r\n\r\nspike.PacketReader.prototype.readSingle = function(){\r\n    retur" +
                    "n this.buffer.readFloat(23, 8);\r\n}\r\n\r\nspike.PacketReader.prototype.readDouble = " +
                    "function(){\r\n    return this.buffer.readFloat(52, 11);\r\n}\r\n\r\nspike.PacketReader." +
                    "prototype.readString = function(){\r\n\tvar length = this.readInt32();\r\n\tif(length " +
                    "> 0){\r\n\t\treturn decodeURIComponent(escape(this.buffer.readBytes(length)));\r\n\t}\r\n" +
                    "\telse{\r\n\t\treturn \'\';\r\n\t}\r\n}\r\n\r\nspike.PacketReader.prototype.readDynamic = functi" +
                    "on(){\r\nif(this.readByte()  == 1){\r\n\tvar type = this.readString();\r\n\tswitch (type" +
                    "){\r\n\t\tcase \'Byte\': return this.readByte();\r\n\t\tcase \'Int16\': return this.readInt1" +
                    "6();\r\n\t\tcase \'Int32\': return this.readInt32();\r\n\t\tcase \'Int64\': return this.read" +
                    "Int64();\r\n\t\tcase \'UInt16\': return this.readUInt16();\r\n\t\tcase \'UInt32\': return th" +
                    "is.readUInt32();\r\n\t\tcase \'UInt64\': return this.readUInt64();\r\n\t\tcase \'Boolean\': " +
                    "return this.readBoolean();\r\n\t\tcase \'Single\': return this.readSingle();\r\n\t\tcase \'" +
                    "Double\': return this.readDouble();\r\n\t\tcase \'DateTime\': return this.readDateTime(" +
                    ");\r\n\t\tcase \'String\': return this.readString();\r\n\t\tdefault: return null;\r\n\t}\r\n}\r\n" +
                    "return null;\r\n}\r\n\r\nspike.PacketReader.prototype.readPacket = function(value){\r\n\t" +
                    "value.read(this);\r\n\treturn value;\r\n}\r\n\r\nspike.PacketReader.prototype.readEntity " +
                    "= function(value){\r\n\tvalue.read(this);\r\n\treturn value;\r\n}\r\n\r\nspike.PacketReader." +
                    "prototype.readArrayOfByte = function(){\r\n\tvar len = this.readInt32();\r\n\treturn n" +
                    "ew spike.ByteArray(this.buffer.readBytes(len));\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfEntity = function(className){\r\n\tvar length = this.readInt32();\r\n\tv" +
                    "ar classCtor = \'new \' + className + \'()\';\t\t\r\n\tvar resultArray = new Array();\r\n\ti" +
                    "f(length == 0){\r\n\t\treturn resultArray;\r\n\t}\r\n\t\t\t\t\r\n\tfor(var i = 0; i < length; ++" +
                    "i){\r\n\t\tvar entityInstance = eval(classCtor);\r\n\t\tresultArray.push( this.readEntit" +
                    "y(entityInstance) );\t\r\n\t}\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfUInt16 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar result" +
                    "Array = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( " +
                    "this.readUInt16() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfInt16 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultA" +
                    "rray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( t" +
                    "his.readInt16() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype" +
                    ".readArrayOfUInt32 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultAr" +
                    "ray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( th" +
                    "is.readUInt32() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype" +
                    ".readArrayOfInt32 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultArr" +
                    "ay = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( thi" +
                    "s.readInt32() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype.r" +
                    "eadArrayOfUInt64 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultArra" +
                    "y = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( this" +
                    ".readUInt64() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype.r" +
                    "eadArrayOfInt64 = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultArray" +
                    " = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( this." +
                    "readInt64() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype.rea" +
                    "dArrayOfSingle = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultArray " +
                    "= new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( this.r" +
                    "eadSingle() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype.rea" +
                    "dArrayOfDouble = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultArray " +
                    "= new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( this.r" +
                    "eadDouble() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype.rea" +
                    "dArrayOfBoolean = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultArray" +
                    " = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( this." +
                    "readBoolean() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototype.r" +
                    "eadArrayOfDateTime = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resultAr" +
                    "ray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( th" +
                    "is.readDateTime() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfString = function(){\r\n\tvar length = this.readInt32();\r\n\tvar result" +
                    "Array = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push( " +
                    "this.readString() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\nspike.PacketReader.prototy" +
                    "pe.readArrayOfDynamic = function(){\r\n\tvar length = this.readInt32();\r\n\tvar resul" +
                    "tArray = new Array();\r\n\t\t\r\n\tfor(var i = 0; i < length; ++i)\r\n\t\tresultArray.push(" +
                    " this.readDynamic() );\r\n\t\t\t\r\n\treturn resultArray;\r\n}\r\n\r\n\r\n");
            
            #line 250 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 foreach(var customType in Model.CustomTypes) { 
            
            #line default
            #line hidden
            this.Write("spike.PacketReader.prototype.read");
            
            #line 251 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(){\r\n    var value = new Object();\r\n\t");
            
            #line 253 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 foreach(var member in customType.Members) { 
            
            #line default
            #line hidden
            this.Write("\tvalue.");
            
            #line 254 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = reader.read");
            
            #line 254 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 254 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("();\t");
            
            #line 254 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 } 
            
            #line default
            #line hidden
            this.Write("\treturn value;\r\n}\r\n\r\nspike.PacketReader.prototype.readArrayOf");
            
            #line 258 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write(" = function(){\r\n\tvar length = this.readInt32();\r\n    var value  = [];\r\n    for (v" +
                    "ar i = 0; i < length; ++i)\r\n        value[i] = this.read");
            
            #line 262 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(customType.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n    return value;\r\n}\r\n");
            
            #line 265 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\PacketReader.t4"
 } 
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 12 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 13 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "TcpEngine") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write("!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.expor" +
                    "ts=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"un" +
                    "defined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"" +
                    "!=typeof self&&(f=self),f.eio=e()}}(function(){var define,module,exports;return " +
                    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"fu" +
                    "nction\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Ca" +
                    "nnot find module \'\"+o+\"\'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports" +
                    ":{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.ex" +
                    "ports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for" +
                    "(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){" +
                    "\r\n\r\nmodule.exports =  _dereq_(\'./lib/\');\r\n\r\n},{\"./lib/\":2}],2:[function(_dereq_," +
                    "module,exports){\r\n\r\nmodule.exports = _dereq_(\'./socket\');\r\n\r\n/**\r\n * Exports par" +
                    "ser\r\n *\r\n * @api public\r\n *\r\n */\r\nmodule.exports.parser = _dereq_(\'engine.io-par" +
                    "ser\');\r\n\r\n},{\"./socket\":3,\"engine.io-parser\":17}],3:[function(_dereq_,module,exp" +
                    "orts){\r\n(function (global){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar transports" +
                    " = _dereq_(\'./transports\');\r\nvar Emitter = _dereq_(\'component-emitter\');\r\nvar de" +
                    "bug = _dereq_(\'debug\')(\'engine.io-client:socket\');\r\nvar index = _dereq_(\'indexof" +
                    "\');\r\nvar parser = _dereq_(\'engine.io-parser\');\r\nvar parseuri = _dereq_(\'parseuri" +
                    "\');\r\nvar parsejson = _dereq_(\'parsejson\');\r\nvar parseqs = _dereq_(\'parseqs\');\r\n\r" +
                    "\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Socket;\r\n\r\n/**\r\n * Noop functi" +
                    "on.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction noop(){}\r\n\r\n/**\r\n * Socket constructor" +
                    ".\r\n *\r\n * @param {String|Object} uri or options\r\n * @param {Object} options\r\n * " +
                    "@api public\r\n */\r\n\r\nfunction Socket(uri, opts){\r\n  if (!(this instanceof Socket)" +
                    ") return new Socket(uri, opts);\r\n\r\n  opts = opts || {};\r\n\r\n  if (uri && \'object\'" +
                    " == typeof uri) {\r\n    opts = uri;\r\n    uri = null;\r\n  }\r\n\r\n  if (uri) {\r\n    ur" +
                    "i = parseuri(uri);\r\n    opts.host = uri.host;\r\n    opts.secure = uri.protocol ==" +
                    " \'https\' || uri.protocol == \'wss\';\r\n    opts.port = uri.port;\r\n    if (uri.query" +
                    ") opts.query = uri.query;\r\n  }\r\n\r\n  this.secure = null != opts.secure ? opts.sec" +
                    "ure :\r\n    (global.location && \'https:\' == location.protocol);\r\n\r\n  if (opts.hos" +
                    "t) {\r\n    var pieces = opts.host.split(\':\');\r\n    opts.hostname = pieces.shift()" +
                    ";\r\n    if (pieces.length) opts.port = pieces.pop();\r\n  }\r\n\r\n  this.agent = opts." +
                    "agent || false;\r\n  this.hostname = opts.hostname ||\r\n    (global.location ? loca" +
                    "tion.hostname : \'localhost\');\r\n  this.port = opts.port || (global.location && lo" +
                    "cation.port ?\r\n       location.port :\r\n       (this.secure ? 443 : 80));\r\n  this" +
                    ".query = opts.query || {};\r\n  if (\'string\' == typeof this.query) this.query = pa" +
                    "rseqs.decode(this.query);\r\n  this.upgrade = false !== opts.upgrade;\r\n  this.path" +
                    " = (opts.path || \'/engine.io\').replace(/\\/$/, \'\') + \'/\';\r\n  this.forceJSONP = !!" +
                    "opts.forceJSONP;\r\n  this.jsonp = false !== opts.jsonp;\r\n  this.forceBase64 = !!o" +
                    "pts.forceBase64;\r\n  this.enablesXDR = !!opts.enablesXDR;\r\n  this.timestampParam " +
                    "= opts.timestampParam || \'t\';\r\n  this.timestampRequests = opts.timestampRequests" +
                    ";\r\n  this.transports = opts.transports || [\'polling\', \'websocket\'];\r\n  this.read" +
                    "yState = \'\';\r\n  this.writeBuffer = [];\r\n  this.callbackBuffer = [];\r\n  this.poli" +
                    "cyPort = opts.policyPort || 843;\r\n  this.rememberUpgrade = opts.rememberUpgrade " +
                    "|| false;\r\n  this.open();\r\n  this.binaryType = null;\r\n  this.onlyBinaryUpgrades " +
                    "= opts.onlyBinaryUpgrades;\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n " +
                    "* Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Protocol versi" +
                    "on.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an" +
                    " int\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser " +
                    "access.\r\n */\r\n\r\nSocket.Socket = Socket;\r\nSocket.Transport = _dereq_(\'./transport" +
                    "\');\r\nSocket.transports = _dereq_(\'./transports\');\r\nSocket.parser = _dereq_(\'engi" +
                    "ne.io-parser\');\r\n\r\n/**\r\n * Creates transport of the given type.\r\n *\r\n * @param {" +
                    "String} transport name\r\n * @return {Transport}\r\n * @api private\r\n */\r\n\r\nSocket.p" +
                    "rototype.createTransport = function (name) {\r\n  debug(\'creating transport \"%s\"\'," +
                    " name);\r\n  var query = clone(this.query);\r\n\r\n  // append engine.io protocol iden" +
                    "tifier\r\n  query.EIO = parser.protocol;\r\n\r\n  // transport name\r\n  query.transport" +
                    " = name;\r\n\r\n  // session id if we already have one\r\n  if (this.id) query.sid = t" +
                    "his.id;\r\n\r\n  var transport = new transports[name]({\r\n    agent: this.agent,\r\n   " +
                    " hostname: this.hostname,\r\n    port: this.port,\r\n    secure: this.secure,\r\n    p" +
                    "ath: this.path,\r\n    query: query,\r\n    forceJSONP: this.forceJSONP,\r\n    jsonp:" +
                    " this.jsonp,\r\n    forceBase64: this.forceBase64,\r\n    enablesXDR: this.enablesXD" +
                    "R,\r\n    timestampRequests: this.timestampRequests,\r\n    timestampParam: this.tim" +
                    "estampParam,\r\n    policyPort: this.policyPort,\r\n    socket: this\r\n  });\r\n\r\n  ret" +
                    "urn transport;\r\n};\r\n\r\nfunction clone (obj) {\r\n  var o = {};\r\n  for (var i in obj" +
                    ") {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  retur" +
                    "n o;\r\n}\r\n\r\n/**\r\n * Initializes transport to use and starts probe.\r\n *\r\n * @api p" +
                    "rivate\r\n */\r\nSocket.prototype.open = function () {\r\n  var transport;\r\n  if (this" +
                    ".rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf(\'web" +
                    "socket\') != -1) {\r\n    transport = \'websocket\';\r\n  } else if (0 == this.transpor" +
                    "ts.length) {\r\n    // Emit error on next tick so it can be listened to\r\n    var s" +
                    "elf = this;\r\n    setTimeout(function() {\r\n      self.emit(\'error\', \'No transport" +
                    "s available\');\r\n    }, 0);\r\n    return;\r\n  } else {\r\n    transport = this.transp" +
                    "orts[0];\r\n  }\r\n  this.readyState = \'opening\';\r\n\r\n  // Retry with the next transp" +
                    "ort if the transport is disabled (jsonp: false)\r\n  var transport;\r\n  try {\r\n    " +
                    "transport = this.createTransport(transport);\r\n  } catch (e) {\r\n    this.transpor" +
                    "ts.shift();\r\n    this.open();\r\n    return;\r\n  }\r\n\r\n  transport.open();\r\n  this.s" +
                    "etTransport(transport);\r\n};\r\n\r\n/**\r\n * Sets the current transport. Disables the " +
                    "existing one (if any).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setTranspor" +
                    "t = function(transport){\r\n  debug(\'setting transport %s\', transport.name);\r\n  va" +
                    "r self = this;\r\n\r\n  if (this.transport) {\r\n    debug(\'clearing existing transpor" +
                    "t %s\', this.transport.name);\r\n    this.transport.removeAllListeners();\r\n  }\r\n\r\n " +
                    " // set up transport\r\n  this.transport = transport;\r\n\r\n  // set up transport lis" +
                    "teners\r\n  transport\r\n  .on(\'drain\', function(){\r\n    self.onDrain();\r\n  })\r\n  .o" +
                    "n(\'packet\', function(packet){\r\n    self.onPacket(packet);\r\n  })\r\n  .on(\'error\', " +
                    "function(e){\r\n    self.onError(e);\r\n  })\r\n  .on(\'close\', function(){\r\n    self.o" +
                    "nClose(\'transport close\');\r\n  });\r\n};\r\n\r\n/**\r\n * Probes a transport.\r\n *\r\n * @pa" +
                    "ram {String} transport name\r\n * @api private\r\n */\r\n\r\nSocket.prototype.probe = fu" +
                    "nction (name) {\r\n  debug(\'probing transport \"%s\"\', name);\r\n  var transport = thi" +
                    "s.createTransport(name, { probe: 1 })\r\n    , failed = false\r\n    , self = this;\r" +
                    "\n\r\n  Socket.priorWebsocketSuccess = false;\r\n\r\n  function onTransportOpen(){\r\n   " +
                    " if (self.onlyBinaryUpgrades) {\r\n      var upgradeLosesBinary = !this.supportsBi" +
                    "nary && self.transport.supportsBinary;\r\n      failed = failed || upgradeLosesBin" +
                    "ary;\r\n    }\r\n    if (failed) return;\r\n\r\n    debug(\'probe transport \"%s\" opened\'," +
                    " name);\r\n    transport.send([{ type: \'ping\', data: \'probe\' }]);\r\n    transport.o" +
                    "nce(\'packet\', function (msg) {\r\n      if (failed) return;\r\n      if (\'pong\' == m" +
                    "sg.type && \'probe\' == msg.data) {\r\n        debug(\'probe transport \"%s\" pong\', na" +
                    "me);\r\n        self.upgrading = true;\r\n        self.emit(\'upgrading\', transport);" +
                    "\r\n        if (!transport) return;\r\n        Socket.priorWebsocketSuccess = \'webso" +
                    "cket\' == transport.name;\r\n\r\n        debug(\'pausing current transport \"%s\"\', self" +
                    ".transport.name);\r\n        self.transport.pause(function () {\r\n          if (fai" +
                    "led) return;\r\n          if (\'closed\' == self.readyState) return;\r\n          debu" +
                    "g(\'changing transport and sending upgrade packet\');\r\n\r\n          cleanup();\r\n\r\n " +
                    "         self.setTransport(transport);\r\n          transport.send([{ type: \'upgra" +
                    "de\' }]);\r\n          self.emit(\'upgrade\', transport);\r\n          transport = null" +
                    ";\r\n          self.upgrading = false;\r\n          self.flush();\r\n        });\r\n    " +
                    "  } else {\r\n        debug(\'probe transport \"%s\" failed\', name);\r\n        var err" +
                    " = new Error(\'probe error\');\r\n        err.transport = transport.name;\r\n        s" +
                    "elf.emit(\'upgradeError\', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  function freezeTransp" +
                    "ort() {\r\n    if (failed) return;\r\n\r\n    // Any callback called by transport shou" +
                    "ld be ignored since now\r\n    failed = true;\r\n\r\n    cleanup();\r\n\r\n    transport.c" +
                    "lose();\r\n    transport = null;\r\n  }\r\n\r\n  //Handle any error that happens while p" +
                    "robing\r\n  function onerror(err) {\r\n    var error = new Error(\'probe error: \' + e" +
                    "rr);\r\n    error.transport = transport.name;\r\n\r\n    freezeTransport();\r\n\r\n    deb" +
                    "ug(\'probe transport \"%s\" failed because of error: %s\', name, err);\r\n\r\n    self.e" +
                    "mit(\'upgradeError\', error);\r\n  }\r\n\r\n  function onTransportClose(){\r\n    onerror(" +
                    "\"transport closed\");\r\n  }\r\n\r\n  //When the socket is closed while we\'re probing\r\n" +
                    "  function onclose(){\r\n    onerror(\"socket closed\");\r\n  }\r\n\r\n  //When the socket" +
                    " is upgraded while we\'re probing\r\n  function onupgrade(to){\r\n    if (transport &" +
                    "& to.name != transport.name) {\r\n      debug(\'\"%s\" works - aborting \"%s\"\', to.nam" +
                    "e, transport.name);\r\n      freezeTransport();\r\n    }\r\n  }\r\n\r\n  //Remove all list" +
                    "eners on the transport and on self\r\n  function cleanup(){\r\n    transport.removeL" +
                    "istener(\'open\', onTransportOpen);\r\n    transport.removeListener(\'error\', onerror" +
                    ");\r\n    transport.removeListener(\'close\', onTransportClose);\r\n    self.removeLis" +
                    "tener(\'close\', onclose);\r\n    self.removeListener(\'upgrading\', onupgrade);\r\n  }\r" +
                    "\n\r\n  transport.once(\'open\', onTransportOpen);\r\n  transport.once(\'error\', onerror" +
                    ");\r\n  transport.once(\'close\', onTransportClose);\r\n\r\n  this.once(\'close\', onclose" +
                    ");\r\n  this.once(\'upgrading\', onupgrade);\r\n\r\n  transport.open();\r\n\r\n};\r\n\r\n/**\r\n *" +
                    " Called when connection is deemed open.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.proto" +
                    "type.onOpen = function () {\r\n  debug(\'socket open\');\r\n  this.readyState = \'open\'" +
                    ";\r\n  Socket.priorWebsocketSuccess = \'websocket\' == this.transport.name;\r\n  this." +
                    "emit(\'open\');\r\n  this.flush();\r\n\r\n  // we check for `readyState` in case an `ope" +
                    "n`\r\n  // listener already closed the socket\r\n  if (\'open\' == this.readyState && " +
                    "this.upgrade && this.transport.pause) {\r\n    debug(\'starting upgrade probes\');\r\n" +
                    "    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n      this.probe(th" +
                    "is.upgrades[i]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles a packet.\r\n *\r\n * @api priva" +
                    "te\r\n */\r\n\r\nSocket.prototype.onPacket = function (packet) {\r\n  if (\'opening\' == t" +
                    "his.readyState || \'open\' == this.readyState) {\r\n    debug(\'socket receive: type " +
                    "\"%s\", data \"%s\"\', packet.type, packet.data);\r\n\r\n    this.emit(\'packet\', packet);" +
                    "\r\n\r\n    // Socket is live - any packet counts\r\n    this.emit(\'heartbeat\');\r\n\r\n  " +
                    "  switch (packet.type) {\r\n      case \'open\':\r\n        this.onHandshake(parsejson" +
                    "(packet.data));\r\n        break;\r\n\r\n      case \'pong\':\r\n        this.setPing();\r\n" +
                    "        break;\r\n\r\n      case \'error\':\r\n        var err = new Error(\'server error" +
                    "\');\r\n        err.code = packet.data;\r\n        this.emit(\'error\', err);\r\n        " +
                    "break;\r\n\r\n      case \'message\':\r\n        this.emit(\'data\', packet.data);\r\n      " +
                    "  this.emit(\'message\', packet.data);\r\n        break;\r\n    }\r\n  } else {\r\n    deb" +
                    "ug(\'packet received with socket readyState \"%s\"\', this.readyState);\r\n  }\r\n};\r\n\r\n" +
                    "/**\r\n * Called upon handshake completion.\r\n *\r\n * @param {Object} handshake obj\r" +
                    "\n * @api private\r\n */\r\n\r\nSocket.prototype.onHandshake = function (data) {\r\n  thi" +
                    "s.emit(\'handshake\', data);\r\n  this.id = data.sid;\r\n  this.transport.query.sid = " +
                    "data.sid;\r\n  this.upgrades = this.filterUpgrades(data.upgrades);\r\n  this.pingInt" +
                    "erval = data.pingInterval;\r\n  this.pingTimeout = data.pingTimeout;\r\n  this.onOpe" +
                    "n();\r\n  // In case open handler closes socket\r\n  if  (\'closed\' == this.readyStat" +
                    "e) return;\r\n  this.setPing();\r\n\r\n  // Prolong liveness of socket on heartbeat\r\n " +
                    " this.removeListener(\'heartbeat\', this.onHeartbeat);\r\n  this.on(\'heartbeat\', thi" +
                    "s.onHeartbeat);\r\n};\r\n\r\n/**\r\n * Resets ping timeout.\r\n *\r\n * @api private\r\n */\r\n\r" +
                    "\nSocket.prototype.onHeartbeat = function (timeout) {\r\n  clearTimeout(this.pingTi" +
                    "meoutTimer);\r\n  var self = this;\r\n  self.pingTimeoutTimer = setTimeout(function " +
                    "() {\r\n    if (\'closed\' == self.readyState) return;\r\n    self.onClose(\'ping timeo" +
                    "ut\');\r\n  }, timeout || (self.pingInterval + self.pingTimeout));\r\n};\r\n\r\n/**\r\n * P" +
                    "ings server every `this.pingInterval` and expects response\r\n * within `this.ping" +
                    "Timeout` or closes connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.set" +
                    "Ping = function () {\r\n  var self = this;\r\n  clearTimeout(self.pingIntervalTimer)" +
                    ";\r\n  self.pingIntervalTimer = setTimeout(function () {\r\n    debug(\'writing ping " +
                    "packet - expecting pong within %sms\', self.pingTimeout);\r\n    self.ping();\r\n    " +
                    "self.onHeartbeat(self.pingTimeout);\r\n  }, self.pingInterval);\r\n};\r\n\r\n/**\r\n* Send" +
                    "s a ping packet.\r\n*\r\n* @api public\r\n*/\r\n\r\nSocket.prototype.ping = function () {\r" +
                    "\n  this.sendPacket(\'ping\');\r\n};\r\n\r\n/**\r\n * Called on `drain` event\r\n *\r\n * @api " +
                    "private\r\n */\r\n\r\nSocket.prototype.onDrain = function() {\r\n  for (var i = 0; i < t" +
                    "his.prevBufferLen; i++) {\r\n    if (this.callbackBuffer[i]) {\r\n      this.callbac" +
                    "kBuffer[i]();\r\n    }\r\n  }\r\n\r\n  this.writeBuffer.splice(0, this.prevBufferLen);\r\n" +
                    "  this.callbackBuffer.splice(0, this.prevBufferLen);\r\n\r\n  // setting prevBufferL" +
                    "en = 0 is very important\r\n  // for example, when upgrading, upgrade packet is se" +
                    "nt over,\r\n  // and a nonzero prevBufferLen could cause problems on `drain`\r\n  th" +
                    "is.prevBufferLen = 0;\r\n\r\n  if (this.writeBuffer.length == 0) {\r\n    this.emit(\'d" +
                    "rain\');\r\n  } else {\r\n    this.flush();\r\n  }\r\n};\r\n\r\n/**\r\n * Flush write buffers.\r" +
                    "\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.flush = function () {\r\n  if (\'clos" +
                    "ed\' != this.readyState && this.transport.writable &&\r\n    !this.upgrading && thi" +
                    "s.writeBuffer.length) {\r\n    debug(\'flushing %d packets in socket\', this.writeBu" +
                    "ffer.length);\r\n    this.transport.send(this.writeBuffer);\r\n    // keep track of " +
                    "current length of writeBuffer\r\n    // splice writeBuffer and callbackBuffer on `" +
                    "drain`\r\n    this.prevBufferLen = this.writeBuffer.length;\r\n    this.emit(\'flush\'" +
                    ");\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a message.\r\n *\r\n * @param {String} message.\r\n * @pa" +
                    "ram {Function} callback function.\r\n * @return {Socket} for chaining.\r\n * @api pu" +
                    "blic\r\n */\r\n\r\nSocket.prototype.write =\r\nSocket.prototype.send = function (msg, fn" +
                    ") {\r\n  this.sendPacket(\'message\', msg, fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends" +
                    " a packet.\r\n *\r\n * @param {String} packet type.\r\n * @param {String} data.\r\n * @p" +
                    "aram {Function} callback function.\r\n * @api private\r\n */\r\n\r\nSocket.prototype.sen" +
                    "dPacket = function (type, data, fn) {\r\n  if (\'closing\' == this.readyState || \'cl" +
                    "osed\' == this.readyState) {\r\n    return;\r\n  }\r\n\r\n  var packet = { type: type, da" +
                    "ta: data };\r\n  this.emit(\'packetCreate\', packet);\r\n  this.writeBuffer.push(packe" +
                    "t);\r\n  this.callbackBuffer.push(fn);\r\n  this.flush();\r\n};\r\n\r\n/**\r\n * Closes the " +
                    "connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.close = function () {\r" +
                    "\n  if (\'opening\' == this.readyState || \'open\' == this.readyState) {\r\n    this.re" +
                    "adyState = \'closing\';\r\n\r\n    var self = this;\r\n\r\n    function close() {\r\n      s" +
                    "elf.onClose(\'forced close\');\r\n      debug(\'socket closing - telling transport to" +
                    " close\');\r\n      self.transport.close();\r\n    }\r\n\r\n    function cleanupAndClose(" +
                    ") {\r\n      self.removeListener(\'upgrade\', cleanupAndClose);\r\n      self.removeLi" +
                    "stener(\'upgradeError\', cleanupAndClose);\r\n      close();\r\n    }\r\n\r\n    function " +
                    "waitForUpgrade() {\r\n      // wait for upgrade to finish since we can\'t send pack" +
                    "ets while pausing a transport\r\n      self.once(\'upgrade\', cleanupAndClose);\r\n   " +
                    "   self.once(\'upgradeError\', cleanupAndClose);\r\n    }\r\n\r\n    if (this.writeBuffe" +
                    "r.length) {\r\n      this.once(\'drain\', function() {\r\n        if (this.upgrading) " +
                    "{\r\n          waitForUpgrade();\r\n        } else {\r\n          close();\r\n        }\r" +
                    "\n      });\r\n    } else if (this.upgrading) {\r\n      waitForUpgrade();\r\n    } els" +
                    "e {\r\n      close();\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon tra" +
                    "nsport error\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onError = function (e" +
                    "rr) {\r\n  debug(\'socket error %j\', err);\r\n  Socket.priorWebsocketSuccess = false;" +
                    "\r\n  this.emit(\'error\', err);\r\n  this.onClose(\'transport error\', err);\r\n};\r\n\r\n/**" +
                    "\r\n * Called upon transport close.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype." +
                    "onClose = function (reason, desc) {\r\n  if (\'opening\' == this.readyState || \'open" +
                    "\' == this.readyState || \'closing\' == this.readyState) {\r\n    debug(\'socket close" +
                    " with reason: \"%s\"\', reason);\r\n    var self = this;\r\n\r\n    // clear timers\r\n    " +
                    "clearTimeout(this.pingIntervalTimer);\r\n    clearTimeout(this.pingTimeoutTimer);\r" +
                    "\n\r\n    // clean buffers in next tick, so developers can still\r\n    // grab the b" +
                    "uffers on `close` event\r\n    setTimeout(function() {\r\n      self.writeBuffer = [" +
                    "];\r\n      self.callbackBuffer = [];\r\n      self.prevBufferLen = 0;\r\n    }, 0);\r\n" +
                    "\r\n    // stop event from firing again for transport\r\n    this.transport.removeAl" +
                    "lListeners(\'close\');\r\n\r\n    // ensure transport won\'t stay open\r\n    this.transp" +
                    "ort.close();\r\n\r\n    // ignore further transport communication\r\n    this.transpor" +
                    "t.removeAllListeners();\r\n\r\n    // set ready state\r\n    this.readyState = \'closed" +
                    "\';\r\n\r\n    // clear session id\r\n    this.id = null;\r\n\r\n    // emit close event\r\n " +
                    "   this.emit(\'close\', reason, desc);\r\n  }\r\n};\r\n\r\n/**\r\n * Filters upgrades, retur" +
                    "ning only those matching client transports.\r\n *\r\n * @param {Array} server upgrad" +
                    "es\r\n * @api private\r\n *\r\n */\r\n\r\nSocket.prototype.filterUpgrades = function (upgr" +
                    "ades) {\r\n  var filteredUpgrades = [];\r\n  for (var i = 0, j = upgrades.length; i<" +
                    "j; i++) {\r\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(u" +
                    "pgrades[i]);\r\n  }\r\n  return filteredUpgrades;\r\n};\r\n\r\n}).call(this,typeof self !=" +
                    "= \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./trans" +
                    "port\":4,\"./transports\":5,\"component-emitter\":12,\"debug\":14,\"engine.io-parser\":17" +
                    ",\"indexof\":25,\"parsejson\":26,\"parseqs\":27,\"parseuri\":28}],4:[function(_dereq_,mo" +
                    "dule,exports){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = _dereq_(\'engin" +
                    "e.io-parser\');\r\nvar Emitter = _dereq_(\'component-emitter\');\r\n\r\nif(typeof spike =" +
                    "== \'undefined\')\r\n\tspike = new Object();\r\nspike.Emitter = Emitter;\r\n\r\n/**\r\n * Mod" +
                    "ule exports.\r\n */\r\n\r\nmodule.exports = Transport;\r\n\r\n/**\r\n * Transport abstract c" +
                    "onstructor.\r\n *\r\n * @param {Object} options.\r\n * @api private\r\n */\r\n\r\nfunction T" +
                    "ransport (opts) {\r\n  this.path = opts.path;\r\n  this.hostname = opts.hostname;\r\n " +
                    " this.port = opts.port;\r\n  this.secure = opts.secure;\r\n  this.query = opts.query" +
                    ";\r\n  this.timestampParam = opts.timestampParam;\r\n  this.timestampRequests = opts" +
                    ".timestampRequests;\r\n  this.readyState = \'\';\r\n  this.agent = opts.agent || false" +
                    ";\r\n  this.socket = opts.socket;\r\n  this.enablesXDR = opts.enablesXDR;\r\n}\r\n\r\n/**\r" +
                    "\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Transport.prototype);\r\n\r\n/**\r\n * A counter" +
                    " used to prevent collisions in the timestamps used\r\n * for cache busting.\r\n */\r\n" +
                    "\r\nTransport.timestamps = 0;\r\n\r\n/**\r\n * Emits an error.\r\n *\r\n * @param {String} s" +
                    "tr\r\n * @return {Transport} for chaining\r\n * @api public\r\n */\r\n\r\nTransport.protot" +
                    "ype.onError = function (msg, desc) {\r\n  var err = new Error(msg);\r\n  err.type = " +
                    "\'TransportError\';\r\n  err.description = desc;\r\n  this.emit(\'error\', err);\r\n  retu" +
                    "rn this;\r\n};\r\n\r\n/**\r\n * Opens the transport.\r\n *\r\n * @api public\r\n */\r\n\r\nTranspo" +
                    "rt.prototype.open = function () {\r\n  if (\'closed\' == this.readyState || \'\' == th" +
                    "is.readyState) {\r\n    this.readyState = \'opening\';\r\n    this.doOpen();\r\n  }\r\n\r\n " +
                    " return this;\r\n};\r\n\r\n/**\r\n * Closes the transport.\r\n *\r\n * @api private\r\n */\r\n\r\n" +
                    "Transport.prototype.close = function () {\r\n  if (\'opening\' == this.readyState ||" +
                    " \'open\' == this.readyState) {\r\n    this.doClose();\r\n    this.onClose();\r\n  }\r\n\r\n" +
                    "  return this;\r\n};\r\n\r\n/**\r\n * Sends multiple packets.\r\n *\r\n * @param {Array} pac" +
                    "kets\r\n * @api private\r\n */\r\n\r\nTransport.prototype.send = function(packets){\r\n  i" +
                    "f (\'open\' == this.readyState) {\r\n    this.write(packets);\r\n  } else {\r\n    throw" +
                    " new Error(\'Transport not open\');\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon open\r\n *\r\n * @" +
                    "api private\r\n */\r\n\r\nTransport.prototype.onOpen = function () {\r\n  this.readyStat" +
                    "e = \'open\';\r\n  this.writable = true;\r\n  this.emit(\'open\');\r\n};\r\n\r\n/**\r\n * Called" +
                    " with data.\r\n *\r\n * @param {String} data\r\n * @api private\r\n */\r\n\r\nTransport.prot" +
                    "otype.onData = function(data){\r\n  var packet = parser.decodePacket(data, this.so" +
                    "cket.binaryType);\r\n  this.onPacket(packet);\r\n};\r\n\r\n/**\r\n * Called with a decoded" +
                    " packet.\r\n */\r\n\r\nTransport.prototype.onPacket = function (packet) {\r\n  this.emit" +
                    "(\'packet\', packet);\r\n};\r\n\r\n/**\r\n * Called upon close.\r\n *\r\n * @api private\r\n */\r" +
                    "\n\r\nTransport.prototype.onClose = function () {\r\n  this.readyState = \'closed\';\r\n " +
                    " this.emit(\'close\');\r\n};\r\n\r\n},{\"component-emitter\":12,\"engine.io-parser\":17}],5:" +
                    "[function(_dereq_,module,exports){\r\n(function (global){\r\n/**\r\n * Module dependen" +
                    "cies\r\n */\r\n\r\nvar XMLHttpRequest = _dereq_(\'xmlhttprequest\');\r\nvar XHR = _dereq_(" +
                    "\'./polling-xhr\');\r\nvar JSONP = _dereq_(\'./polling-jsonp\');\r\nvar websocket = _der" +
                    "eq_(\'./websocket\');\r\n\r\n/**\r\n * Export transports.\r\n */\r\n\r\nexports.polling = poll" +
                    "ing;\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic co" +
                    "nstructor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api " +
                    "private\r\n */\r\n\r\nfunction polling(opts){\r\n  var xhr;\r\n  var xd = false;\r\n  var xs" +
                    " = false;\r\n  var jsonp = false !== opts.jsonp;\r\n\r\n  if (global.location) {\r\n    " +
                    "var isSSL = \'https:\' == location.protocol;\r\n    var port = location.port;\r\n\r\n   " +
                    " // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = " +
                    "isSSL ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname != location.hostname || port " +
                    "!= opts.port;\r\n    xs = opts.secure != isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  op" +
                    "ts.xscheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if (\'open\' in xhr && !o" +
                    "pts.forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw " +
                    "new Error(\'JSONP disabled\');\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n\r\n}).call(thi" +
                    "s,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : " +
                    "{})\r\n},{\"./polling-jsonp\":6,\"./polling-xhr\":7,\"./websocket\":9,\"xmlhttprequest\":1" +
                    "0}],6:[function(_dereq_,module,exports){\r\n(function (global){\r\n\r\n/**\r\n * Module " +
                    "requirements.\r\n */\r\n\r\nvar Polling = _dereq_(\'./polling\');\r\nvar inherit = _dereq_" +
                    "(\'component-inherit\');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = JSONP" +
                    "Polling;\r\n\r\n/**\r\n * Cached regular expressions.\r\n */\r\n\r\nvar rNewline = /\\n/g;\r\nv" +
                    "ar rEscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nvar call" +
                    "backs;\r\n\r\n/**\r\n * Callbacks count.\r\n */\r\n\r\nvar index = 0;\r\n\r\n/**\r\n * Noop.\r\n */\r" +
                    "\n\r\nfunction empty () { }\r\n\r\n/**\r\n * JSONP Polling constructor.\r\n *\r\n * @param {O" +
                    "bject} opts.\r\n * @api public\r\n */\r\n\r\nfunction JSONPPolling (opts) {\r\n  Polling.c" +
                    "all(this, opts);\r\n\r\n  this.query = this.query || {};\r\n\r\n  // define global callb" +
                    "acks array if not present\r\n  // we do this here (lazily) to avoid unneeded globa" +
                    "l pollution\r\n  if (!callbacks) {\r\n    // we need to consider multiple engines in" +
                    " the same page\r\n    if (!global.___eio) global.___eio = [];\r\n    callbacks = glo" +
                    "bal.___eio;\r\n  }\r\n\r\n  // callback identifier\r\n  this.index = callbacks.length;\r\n" +
                    "\r\n  // add callback to jsonp global\r\n  var self = this;\r\n  callbacks.push(functi" +
                    "on (msg) {\r\n    self.onData(msg);\r\n  });\r\n\r\n  // append to query string\r\n  this." +
                    "query.j = this.index;\r\n\r\n  // prevent spurious errors from being emitted when th" +
                    "e window is unloaded\r\n  if (global.document && global.addEventListener) {\r\n    g" +
                    "lobal.addEventListener(\'beforeunload\', function () {\r\n      if (self.script) sel" +
                    "f.script.onerror = empty;\r\n    }, false);\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polli" +
                    "ng.\r\n */\r\n\r\ninherit(JSONPPolling, Polling);\r\n\r\n/*\r\n * JSONP only supports binary" +
                    " as base64 encoded strings\r\n */\r\n\r\nJSONPPolling.prototype.supportsBinary = false" +
                    ";\r\n\r\n/**\r\n * Closes the socket.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.protot" +
                    "ype.doClose = function () {\r\n  if (this.script) {\r\n    this.script.parentNode.re" +
                    "moveChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  if (this.form) {\r\n   " +
                    " this.form.parentNode.removeChild(this.form);\r\n    this.form = null;\r\n    this.i" +
                    "frame = null;\r\n  }\r\n\r\n  Polling.prototype.doClose.call(this);\r\n};\r\n\r\n/**\r\n * Sta" +
                    "rts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doPoll = f" +
                    "unction () {\r\n  var self = this;\r\n  var script = document.createElement(\'script\'" +
                    ");\r\n\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);" +
                    "\r\n    this.script = null;\r\n  }\r\n\r\n  script.async = true;\r\n  script.src = this.ur" +
                    "i();\r\n  script.onerror = function(e){\r\n    self.onError(\'jsonp poll error\',e);\r\n" +
                    "  };\r\n\r\n  var insertAt = document.getElementsByTagName(\'script\')[0];\r\n  insertAt" +
                    ".parentNode.insertBefore(script, insertAt);\r\n  this.script = script;\r\n\r\n  var is" +
                    "UAgecko = \'undefined\' != typeof navigator && /gecko/i.test(navigator.userAgent);" +
                    "\r\n  \r\n  if (isUAgecko) {\r\n    setTimeout(function () {\r\n      var iframe = docum" +
                    "ent.createElement(\'iframe\');\r\n      document.body.appendChild(iframe);\r\n      do" +
                    "cument.body.removeChild(iframe);\r\n    }, 100);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes with a" +
                    " hidden iframe.\r\n *\r\n * @param {String} data to send\r\n * @param {Function} calle" +
                    "d upon flush.\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doWrite = function" +
                    " (data, fn) {\r\n  var self = this;\r\n\r\n  if (!this.form) {\r\n    var form = documen" +
                    "t.createElement(\'form\');\r\n    var area = document.createElement(\'textarea\');\r\n  " +
                    "  var id = this.iframeId = \'eio_iframe_\' + this.index;\r\n    var iframe;\r\n\r\n    f" +
                    "orm.className = \'socketio\';\r\n    form.style.position = \'absolute\';\r\n    form.sty" +
                    "le.top = \'-1000px\';\r\n    form.style.left = \'-1000px\';\r\n    form.target = id;\r\n  " +
                    "  form.method = \'POST\';\r\n    form.setAttribute(\'accept-charset\', \'utf-8\');\r\n    " +
                    "area.name = \'d\';\r\n    form.appendChild(area);\r\n    document.body.appendChild(for" +
                    "m);\r\n\r\n    this.form = form;\r\n    this.area = area;\r\n  }\r\n\r\n  this.form.action =" +
                    " this.uri();\r\n\r\n  function complete () {\r\n    initIframe();\r\n    fn();\r\n  }\r\n\r\n " +
                    " function initIframe () {\r\n    if (self.iframe) {\r\n      try {\r\n        self.for" +
                    "m.removeChild(self.iframe);\r\n      } catch (e) {\r\n        self.onError(\'jsonp po" +
                    "lling iframe removal error\', e);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // ie6 dyna" +
                    "mic iframes with target=\"\" support (thanks Chris Lambacher)\r\n      var html = \'<" +
                    "iframe src=\"javascript:0\" name=\"\'+ self.iframeId +\'\">\';\r\n      iframe = document" +
                    ".createElement(html);\r\n    } catch (e) {\r\n      iframe = document.createElement(" +
                    "\'iframe\');\r\n      iframe.name = self.iframeId;\r\n      iframe.src = \'javascript:0" +
                    "\';\r\n    }\r\n\r\n    iframe.id = self.iframeId;\r\n\r\n    self.form.appendChild(iframe)" +
                    ";\r\n    self.iframe = iframe;\r\n  }\r\n\r\n  initIframe();\r\n\r\n  // escape \\n to preven" +
                    "t it from being converted into \\r\\n by some UAs\r\n  // double escaping is require" +
                    "d for escaped new lines because unescaping of new lines can be done safely on se" +
                    "rver-side\r\n  data = data.replace(rEscapedNewline, \'\\\\\\n\');\r\n  this.area.value = " +
                    "data.replace(rNewline, \'\\\\n\');\r\n\r\n  try {\r\n    this.form.submit();\r\n  } catch(e)" +
                    " {}\r\n\r\n  if (this.iframe.attachEvent) {\r\n    this.iframe.onreadystatechange = fu" +
                    "nction(){\r\n      if (self.iframe.readyState == \'complete\') {\r\n        complete()" +
                    ";\r\n      }\r\n    };\r\n  } else {\r\n    this.iframe.onload = complete;\r\n  }\r\n};\r\n\r\n}" +
                    ").call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ?" +
                    " window : {})\r\n},{\"./polling\":8,\"component-inherit\":13}],7:[function(_dereq_,mod" +
                    "ule,exports){\r\n(function (global){\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar XML" +
                    "HttpRequest = _dereq_(\'xmlhttprequest\');\r\nvar Polling = _dereq_(\'./polling\');\r\nv" +
                    "ar Emitter = _dereq_(\'component-emitter\');\r\nvar inherit = _dereq_(\'component-inh" +
                    "erit\');\r\nvar debug = _dereq_(\'debug\')(\'engine.io-client:polling-xhr\');\r\n\r\n/**\r\n " +
                    "* Module exports.\r\n */\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Reques" +
                    "t;\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty(){}\r\n\r\n/**\r\n * XHR Polling c" +
                    "onstructor.\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction XHR(op" +
                    "ts){\r\n  Polling.call(this, opts);\r\n\r\n  if (global.location) {\r\n    var isSSL = \'" +
                    "https:\' == location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user" +
                    " agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 :" +
                    " 80;\r\n    }\r\n\r\n    this.xd = opts.hostname != global.location.hostname ||\r\n     " +
                    " port != opts.port;\r\n    this.xs = opts.secure != isSSL;\r\n  }\r\n}\r\n\r\n/**\r\n * Inhe" +
                    "rits from Polling.\r\n */\r\n\r\ninherit(XHR, Polling);\r\n\r\n/**\r\n * XHR supports binary" +
                    "\r\n */\r\n\r\nXHR.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Creates a request.\r\n *\r" +
                    "\n * @param {String} method\r\n * @api private\r\n */\r\n\r\nXHR.prototype.request = func" +
                    "tion(opts){\r\n  opts = opts || {};\r\n  opts.uri = this.uri();\r\n  opts.xd = this.xd" +
                    ";\r\n  opts.xs = this.xs;\r\n  opts.agent = this.agent || false;\r\n  opts.supportsBin" +
                    "ary = this.supportsBinary;\r\n  opts.enablesXDR = this.enablesXDR;\r\n  return new R" +
                    "equest(opts);\r\n};\r\n\r\n/**\r\n * Sends data.\r\n *\r\n * @param {String} data to send.\r\n" +
                    " * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nXHR.prototype.d" +
                    "oWrite = function(data, fn){\r\n  var isBinary = typeof data !== \'string\' && data " +
                    "!== undefined;\r\n  var req = this.request({ method: \'POST\', data: data, isBinary:" +
                    " isBinary });\r\n  var self = this;\r\n  req.on(\'success\', fn);\r\n  req.on(\'error\', f" +
                    "unction(err){\r\n    self.onError(\'xhr post error\', err);\r\n  });\r\n  this.sendXhr =" +
                    " req;\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nXHR.proto" +
                    "type.doPoll = function(){\r\n  debug(\'xhr poll\');\r\n  var req = this.request();\r\n  " +
                    "var self = this;\r\n  req.on(\'data\', function(data){\r\n    self.onData(data);\r\n  })" +
                    ";\r\n  req.on(\'error\', function(err){\r\n    self.onError(\'xhr poll error\', err);\r\n " +
                    " });\r\n  this.pollXhr = req;\r\n};\r\n\r\n/**\r\n * Request constructor\r\n *\r\n * @param {O" +
                    "bject} options\r\n * @api public\r\n */\r\n\r\nfunction Request(opts){\r\n  this.method = " +
                    "opts.method || \'GET\';\r\n  this.uri = opts.uri;\r\n  this.xd = !!opts.xd;\r\n  this.xs" +
                    " = !!opts.xs;\r\n  this.async = false !== opts.async;\r\n  this.data = undefined != " +
                    "opts.data ? opts.data : null;\r\n  this.agent = opts.agent;\r\n  this.isBinary = opt" +
                    "s.isBinary;\r\n  this.supportsBinary = opts.supportsBinary;\r\n  this.enablesXDR = o" +
                    "pts.enablesXDR;\r\n  this.create();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitte" +
                    "r(Request.prototype);\r\n\r\n/**\r\n * Creates the XHR object and sends the request.\r\n" +
                    " *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.create = function(){\r\n  var xhr = " +
                    "this.xhr = new XMLHttpRequest({ agent: this.agent, xdomain: this.xd, xscheme: th" +
                    "is.xs, enablesXDR: this.enablesXDR });\r\n  var self = this;\r\n\r\n  try {\r\n    debug" +
                    "(\'xhr open %s: %s\', this.method, this.uri);\r\n    xhr.open(this.method, this.uri," +
                    " this.async);\r\n    if (this.supportsBinary) {\r\n      // This has to be done afte" +
                    "r open because Firefox is stupid\r\n      // http://stackoverflow.com/questions/13" +
                    "216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\r\n      xhr.res" +
                    "ponseType = \'arraybuffer\';\r\n    }\r\n\r\n    if (\'POST\' == this.method) {\r\n      try" +
                    " {\r\n        if (this.isBinary) {\r\n          xhr.setRequestHeader(\'Content-type\'," +
                    " \'application/octet-stream\');\r\n        } else {\r\n          xhr.setRequestHeader(" +
                    "\'Content-type\', \'text/plain;charset=UTF-8\');\r\n        }\r\n      } catch (e) {}\r\n " +
                    "   }\r\n\r\n    // ie6 check\r\n    if (\'withCredentials\' in xhr) {\r\n      xhr.withCre" +
                    "dentials = true;\r\n    }\r\n\r\n    if (this.hasXDR()) {\r\n      xhr.onload = function" +
                    "(){\r\n        self.onLoad();\r\n      };\r\n      xhr.onerror = function(){\r\n        " +
                    "self.onError(xhr.responseText);\r\n      };\r\n    } else {\r\n      xhr.onreadystatec" +
                    "hange = function(){\r\n        if (4 != xhr.readyState) return;\r\n        if (200 =" +
                    "= xhr.status || 1223 == xhr.status) {\r\n          self.onLoad();\r\n        } else " +
                    "{\r\n          // make sure the `error` event handler that\'s user-set\r\n          /" +
                    "/ does not throw in the same tick and gets caught here\r\n          setTimeout(fun" +
                    "ction(){\r\n            self.onError(xhr.status);\r\n          }, 0);\r\n        }\r\n  " +
                    "    };\r\n    }\r\n\r\n    debug(\'xhr data %s\', this.data);\r\n    xhr.send(this.data);\r" +
                    "\n  } catch (e) {\r\n    // Need to defer since .create() is called directly fhrom " +
                    "the constructor\r\n    // and thus the \'error\' event can only be only bound *after" +
                    "* this exception\r\n    // occurs.  Therefore, also, we cannot throw here at all.\r" +
                    "\n    setTimeout(function() {\r\n      self.onError(e);\r\n    }, 0);\r\n    return;\r\n " +
                    " }\r\n\r\n  if (global.document) {\r\n    this.index = Request.requestsCount++;\r\n    R" +
                    "equest.requests[this.index] = this;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful r" +
                    "esponse.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onSuccess = function(){\r" +
                    "\n  this.emit(\'success\');\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Called if we have dat" +
                    "a.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onData = function(data){\r\n  th" +
                    "is.emit(\'data\', data);\r\n  this.onSuccess();\r\n};\r\n\r\n/**\r\n * Called upon error.\r\n " +
                    "*\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onError = function(err){\r\n  this.em" +
                    "it(\'error\', err);\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Cleans up house.\r\n *\r\n * @ap" +
                    "i private\r\n */\r\n\r\nRequest.prototype.cleanup = function(){\r\n  if (\'undefined\' == " +
                    "typeof this.xhr || null === this.xhr) {\r\n    return;\r\n  }\r\n  // xmlhttprequest\r\n" +
                    "  if (this.hasXDR()) {\r\n    this.xhr.onload = this.xhr.onerror = empty;\r\n  } els" +
                    "e {\r\n    this.xhr.onreadystatechange = empty;\r\n  }\r\n\r\n  try {\r\n    this.xhr.abor" +
                    "t();\r\n  } catch(e) {}\r\n\r\n  if (global.document) {\r\n    delete Request.requests[t" +
                    "his.index];\r\n  }\r\n\r\n  this.xhr = null;\r\n};\r\n\r\n/**\r\n * Called upon load.\r\n *\r\n * " +
                    "@api private\r\n */\r\n\r\nRequest.prototype.onLoad = function(){\r\n  var data;\r\n  try " +
                    "{\r\n    var contentType;\r\n    try {\r\n      contentType = this.xhr.getResponseHead" +
                    "er(\'Content-Type\').split(\';\')[0];\r\n    } catch (e) {}\r\n    if (contentType === \'" +
                    "application/octet-stream\') {\r\n      data = this.xhr.response;\r\n    } else {\r\n   " +
                    "   if (!this.supportsBinary) {\r\n        data = this.xhr.responseText;\r\n      } e" +
                    "lse {\r\n        data = \'ok\';\r\n      }\r\n    }\r\n  } catch (e) {\r\n    this.onError(e" +
                    ");\r\n  }\r\n  if (null != data) {\r\n    this.onData(data);\r\n  }\r\n};\r\n\r\n/**\r\n * Check" +
                    " if it has XDomainRequest.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.hasXDR" +
                    " = function(){\r\n  return \'undefined\' !== typeof global.XDomainRequest && !this.x" +
                    "s && this.enablesXDR;\r\n};\r\n\r\n/**\r\n * Aborts the request.\r\n *\r\n * @api public\r\n *" +
                    "/\r\n\r\nRequest.prototype.abort = function(){\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Abo" +
                    "rts pending requests when unloading the window. This is needed to prevent\r\n * me" +
                    "mory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emit" +
                    "ted.\r\n */\r\n\r\nif (global.document) {\r\n  Request.requestsCount = 0;\r\n  Request.req" +
                    "uests = {};\r\n  if (global.attachEvent) {\r\n    global.attachEvent(\'onunload\', unl" +
                    "oadHandler);\r\n  } else if (global.addEventListener) {\r\n    global.addEventListen" +
                    "er(\'beforeunload\', unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler() {\r" +
                    "\n  for (var i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)" +
                    ") {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\r\n}).call(this,typeof se" +
                    "lf !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./" +
                    "polling\":8,\"component-emitter\":12,\"component-inherit\":13,\"debug\":14,\"xmlhttprequ" +
                    "est\":10}],8:[function(_dereq_,module,exports){\r\n/**\r\n * Module dependencies.\r\n *" +
                    "/\r\n\r\nvar Transport = _dereq_(\'../transport\');\r\nvar parseqs = _dereq_(\'parseqs\');" +
                    "\r\nvar parser = _dereq_(\'engine.io-parser\');\r\nvar inherit = _dereq_(\'component-in" +
                    "herit\');\r\nvar debug = _dereq_(\'debug\')(\'engine.io-client:polling\');\r\n\r\n/**\r\n * M" +
                    "odule exports.\r\n */\r\n\r\nmodule.exports = Polling;\r\n\r\n/**\r\n * Is XHR2 supported?\r\n" +
                    " */\r\n\r\nvar hasXHR2 = (function() {\r\n  var XMLHttpRequest = _dereq_(\'xmlhttpreque" +
                    "st\');\r\n  var xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr" +
                    ".responseType;\r\n})();\r\n\r\n/**\r\n * Polling interface.\r\n *\r\n * @param {Object} opts" +
                    "\r\n * @api private\r\n */\r\n\r\nfunction Polling(opts){\r\n  var forceBase64 = (opts && " +
                    "opts.forceBase64);\r\n  if (!hasXHR2 || forceBase64) {\r\n    this.supportsBinary = " +
                    "false;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport" +
                    ".\r\n */\r\n\r\ninherit(Polling, Transport);\r\n\r\n/**\r\n * Transport name.\r\n */\r\n\r\nPollin" +
                    "g.prototype.name = \'polling\';\r\n\r\n/**\r\n * Opens the socket (triggers polling). We" +
                    " write a PING message to determine\r\n * when the transport is open.\r\n *\r\n * @api " +
                    "private\r\n */\r\n\r\nPolling.prototype.doOpen = function(){\r\n  this.poll();\r\n};\r\n\r\n/*" +
                    "*\r\n * Pauses polling.\r\n *\r\n * @param {Function} callback upon buffers are flushe" +
                    "d and transport is paused\r\n * @api private\r\n */\r\n\r\nPolling.prototype.pause = fun" +
                    "ction(onPause){\r\n  var pending = 0;\r\n  var self = this;\r\n\r\n  this.readyState = \'" +
                    "pausing\';\r\n\r\n  function pause(){\r\n    debug(\'paused\');\r\n    self.readyState = \'p" +
                    "aused\';\r\n    onPause();\r\n  }\r\n\r\n  if (this.polling || !this.writable) {\r\n    var" +
                    " total = 0;\r\n\r\n    if (this.polling) {\r\n      debug(\'we are currently polling - " +
                    "waiting to pause\');\r\n      total++;\r\n      this.once(\'pollComplete\', function(){" +
                    "\r\n        debug(\'pre-pause polling complete\');\r\n        --total || pause();\r\n   " +
                    "   });\r\n    }\r\n\r\n    if (!this.writable) {\r\n      debug(\'we are currently writin" +
                    "g - waiting to pause\');\r\n      total++;\r\n      this.once(\'drain\', function(){\r\n " +
                    "       debug(\'pre-pause writing complete\');\r\n        --total || pause();\r\n      " +
                    "});\r\n    }\r\n  } else {\r\n    pause();\r\n  }\r\n};\r\n\r\n/**\r\n * Starts polling cycle.\r\n" +
                    " *\r\n * @api public\r\n */\r\n\r\nPolling.prototype.poll = function(){\r\n  debug(\'pollin" +
                    "g\');\r\n  this.polling = true;\r\n  this.doPoll();\r\n  this.emit(\'poll\');\r\n};\r\n\r\n/**\r" +
                    "\n * Overloads onData to detect payloads.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.pr" +
                    "ototype.onData = function(data){\r\n  var self = this;\r\n  debug(\'polling got data " +
                    "%s\', data);\r\n  var callback = function(packet, index, total) {\r\n    // if its th" +
                    "e first message we consider the transport open\r\n    if (\'opening\' == self.readyS" +
                    "tate) {\r\n      self.onOpen();\r\n    }\r\n\r\n    // if its a close packet, we close t" +
                    "he ongoing requests\r\n    if (\'close\' == packet.type) {\r\n      self.onClose();\r\n " +
                    "     return false;\r\n    }\r\n\r\n    // otherwise bypass onData and handle the messa" +
                    "ge\r\n    self.onPacket(packet);\r\n  };\r\n\r\n  // decode payload\r\n  parser.decodePayl" +
                    "oad(data, this.socket.binaryType, callback);\r\n\r\n  // if an event did not trigger" +
                    " closing\r\n  if (\'closed\' != this.readyState) {\r\n    // if we got data we\'re not " +
                    "polling\r\n    this.polling = false;\r\n    this.emit(\'pollComplete\');\r\n\r\n    if (\'o" +
                    "pen\' == this.readyState) {\r\n      this.poll();\r\n    } else {\r\n      debug(\'ignor" +
                    "ing poll - transport state \"%s\"\', this.readyState);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * F" +
                    "or polling, send a close packet.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype." +
                    "doClose = function(){\r\n  var self = this;\r\n\r\n  function close(){\r\n    debug(\'wri" +
                    "ting close packet\');\r\n    self.write([{ type: \'close\' }]);\r\n  }\r\n\r\n  if (\'open\' " +
                    "== this.readyState) {\r\n    debug(\'transport open - closing\');\r\n    close();\r\n  }" +
                    " else {\r\n    // in case we\'re trying to close while\r\n    // handshaking is in pr" +
                    "ogress (GH-164)\r\n    debug(\'transport not open - deferring close\');\r\n    this.on" +
                    "ce(\'open\', close);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes a packets payload.\r\n *\r\n * @param " +
                    "{Array} data packets\r\n * @param {Function} drain callback\r\n * @api private\r\n */\r" +
                    "\n\r\nPolling.prototype.write = function(packets){\r\n  var self = this;\r\n  this.writ" +
                    "able = false;\r\n  var callbackfn = function() {\r\n    self.writable = true;\r\n    s" +
                    "elf.emit(\'drain\');\r\n  };\r\n\r\n  var self = this;\r\n  parser.encodePayload(packets, " +
                    "this.supportsBinary, function(data) {\r\n    self.doWrite(data, callbackfn);\r\n  })" +
                    ";\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nPoll" +
                    "ing.prototype.uri = function(){\r\n  var query = this.query || {};\r\n  var schema =" +
                    " this.secure ? \'https\' : \'http\';\r\n  var port = \'\';\r\n\r\n  // cache busting is forc" +
                    "ed\r\n  if (false !== this.timestampRequests) {\r\n    query[this.timestampParam] = " +
                    "+new Date + \'-\' + Transport.timestamps++;\r\n  }\r\n\r\n  if (!this.supportsBinary && " +
                    "!query.sid) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  " +
                    "// avoid port if default for schema\r\n  if (this.port && ((\'https\' == schema && t" +
                    "his.port != 443) ||\r\n     (\'http\' == schema && this.port != 80))) {\r\n    port = " +
                    "\':\' + this.port;\r\n  }\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    que" +
                    "ry = \'?\' + query;\r\n  }\r\n\r\n  return schema + \'://\' + this.hostname + port + this." +
                    "path + query;\r\n};\r\n\r\n},{\"../transport\":4,\"component-inherit\":13,\"debug\":14,\"engi" +
                    "ne.io-parser\":17,\"parseqs\":27,\"xmlhttprequest\":10}],9:[function(_dereq_,module,e" +
                    "xports){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = _dereq_(\'../trans" +
                    "port\');\r\nvar parser = _dereq_(\'engine.io-parser\');\r\nvar parseqs = _dereq_(\'parse" +
                    "qs\');\r\nvar inherit = _dereq_(\'component-inherit\');\r\nvar debug = _dereq_(\'debug\')" +
                    "(\'engine.io-client:websocket\');\r\n\r\n/**\r\n * `ws` exposes a WebSocket-compatible i" +
                    "nterface in\r\n * Node, or the `WebSocket` or `MozWebSocket` globals\r\n * in the br" +
                    "owser.\r\n */\r\n\r\nvar WebSocket = _dereq_(\'ws\');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r" +
                    "\nmodule.exports = WS;\r\n\r\n/**\r\n * WebSocket transport constructor.\r\n *\r\n * @api {" +
                    "Object} connection options\r\n * @api public\r\n */\r\n\r\nfunction WS(opts){\r\n  var for" +
                    "ceBase64 = (opts && opts.forceBase64);\r\n  if (forceBase64) {\r\n    this.supportsB" +
                    "inary = false;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from T" +
                    "ransport.\r\n */\r\n\r\ninherit(WS, Transport);\r\n\r\n/**\r\n * Transport name.\r\n *\r\n * @ap" +
                    "i public\r\n */\r\n\r\nWS.prototype.name = \'websocket\';\r\n\r\n/*\r\n * WebSockets support b" +
                    "inary\r\n */\r\n\r\nWS.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Opens socket.\r\n *\r\n" +
                    " * @api private\r\n */\r\n\r\nWS.prototype.doOpen = function(){\r\n  if (!this.check()) " +
                    "{\r\n    // let probe timeout\r\n    return;\r\n  }\r\n\r\n  var self = this;\r\n  var uri =" +
                    " this.uri();\r\n  var protocols = void(0);\r\n  var opts = { agent: this.agent };\r\n\r" +
                    "\n  this.ws = new WebSocket(uri, protocols, opts);\r\n\r\n  if (this.ws.binaryType ==" +
                    "= undefined) {\r\n    this.supportsBinary = false;\r\n  }\r\n\r\n  this.ws.binaryType = " +
                    "\'arraybuffer\';\r\n  this.addEventListeners();\r\n};\r\n\r\n/**\r\n * Adds event listeners " +
                    "to the socket\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.addEventListeners = func" +
                    "tion(){\r\n  var self = this;\r\n\r\n  this.ws.onopen = function(){\r\n    self.onOpen()" +
                    ";\r\n  };\r\n  this.ws.onclose = function(){\r\n    self.onClose();\r\n  };\r\n  this.ws.o" +
                    "nmessage = function(ev){\r\n    self.onData(ev.data);\r\n  };\r\n  this.ws.onerror = f" +
                    "unction(e){\r\n    self.onError(\'websocket error\', e);\r\n  };\r\n};\r\n\r\n/**\r\n * Overri" +
                    "de `onData` to use a timer on iOS.\r\n * See: https://gist.github.com/mloughran/20" +
                    "52006\r\n *\r\n * @api private\r\n */\r\n\r\nif (\'undefined\' != typeof navigator\r\n  && /iP" +
                    "ad|iPhone|iPod/i.test(navigator.userAgent)) {\r\n  WS.prototype.onData = function(" +
                    "data){\r\n    var self = this;\r\n    setTimeout(function(){\r\n      Transport.protot" +
                    "ype.onData.call(self, data);\r\n    }, 0);\r\n  };\r\n}\r\n\r\n/**\r\n * Writes data to sock" +
                    "et.\r\n *\r\n * @param {Array} array of packets.\r\n * @api private\r\n */\r\n\r\nWS.prototy" +
                    "pe.write = function(packets){\r\n  var self = this;\r\n  this.writable = false;\r\n  /" +
                    "/ encodePacket efficient as it uses WS framing\r\n  // no need for encodePayload\r\n" +
                    "  for (var i = 0, l = packets.length; i < l; i++) {\r\n    parser.encodePacket(pac" +
                    "kets[i], this.supportsBinary, function(data) {\r\n      //Sometimes the websocket " +
                    "has already been closed but the browser didn\'t\r\n      //have a chance of informi" +
                    "ng us about it yet, in that case send will\r\n      //throw an error\r\n      try {\r" +
                    "\n        self.ws.send(data);\r\n      } catch (e){\r\n        debug(\'websocket close" +
                    "d before onclose event\');\r\n      }\r\n    });\r\n  }\r\n\r\n  function ondrain() {\r\n    " +
                    "self.writable = true;\r\n    self.emit(\'drain\');\r\n  }\r\n  // fake drain\r\n  // defer" +
                    " to next tick to allow Socket to clear writeBuffer\r\n  setTimeout(ondrain, 0);\r\n}" +
                    ";\r\n\r\n/**\r\n * Called upon close\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.onClose" +
                    " = function(){\r\n  Transport.prototype.onClose.call(this);\r\n};\r\n\r\n/**\r\n * Closes " +
                    "socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doClose = function(){\r\n  if (t" +
                    "ypeof this.ws !== \'undefined\') {\r\n    this.ws.close();\r\n  }\r\n};\r\n\r\n/**\r\n * Gener" +
                    "ates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.uri = functio" +
                    "n(){\r\n  var query = this.query || {};\r\n  var schema = this.secure ? \'wss\' : \'ws\'" +
                    ";\r\n  var port = \'\';\r\n\r\n  // avoid port if default for schema\r\n  if (this.port &&" +
                    " ((\'wss\' == schema && this.port != 443)\r\n    || (\'ws\' == schema && this.port != " +
                    "80))) {\r\n    port = \':\' + this.port;\r\n  }\r\n\r\n  // append timestamp to URI\r\n  if " +
                    "(this.timestampRequests) {\r\n    query[this.timestampParam] = +new Date;\r\n  }\r\n\r\n" +
                    "  // communicate binary support capabilities\r\n  if (!this.supportsBinary) {\r\n   " +
                    " query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // prepend ? to qu" +
                    "ery\r\n  if (query.length) {\r\n    query = \'?\' + query;\r\n  }\r\n\r\n  return schema + \'" +
                    "://\' + this.hostname + port + this.path + query;\r\n};\r\n\r\n/**\r\n * Feature detectio" +
                    "n for WebSocket.\r\n *\r\n * @return {Boolean} whether this transport is available.\r" +
                    "\n * @api public\r\n */\r\n\r\nWS.prototype.check = function(){\r\n  return !!WebSocket &" +
                    "& !(\'__initialize\' in WebSocket && this.name === WS.prototype.name);\r\n};\r\n\r\n},{\"" +
                    "../transport\":4,\"component-inherit\":13,\"debug\":14,\"engine.io-parser\":17,\"parseqs" +
                    "\":27,\"ws\":29}],10:[function(_dereq_,module,exports){\r\n// browser shim for xmlhtt" +
                    "prequest module\r\nvar hasCORS = _dereq_(\'has-cors\');\r\n\r\nmodule.exports = function" +
                    "(opts) {\r\n  var xdomain = opts.xdomain;\r\n\r\n  // scheme must be same when usign X" +
                    "DomainRequest\r\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdoma" +
                    "inrequest-restrictions-limitations-and-workarounds.aspx\r\n  var xscheme = opts.xs" +
                    "cheme;\r\n\r\n  // XDomainRequest has a flow of not sending cookie, therefore it sho" +
                    "uld be disabled as a default.\r\n  // https://github.com/Automattic/engine.io-clie" +
                    "nt/pull/217\r\n  var enablesXDR = opts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be d" +
                    "isabled on IE\r\n  try {\r\n    if (\'undefined\' != typeof XMLHttpRequest && (!xdomai" +
                    "n || hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n  } catch (e) { }\r\n" +
                    "\r\n  // Use XDomainRequest for IE8 if enablesXDR is true\r\n  // because loading ba" +
                    "r keeps flashing when using jsonp-polling\r\n  // https://github.com/yujiosaka/soc" +
                    "ke.io-ie8-loading-example\r\n  try {\r\n    if (\'undefined\' != typeof XDomainRequest" +
                    " && !xscheme && enablesXDR) {\r\n      return new XDomainRequest();\r\n    }\r\n  } ca" +
                    "tch (e) { }\r\n\r\n  if (!xdomain) {\r\n    try {\r\n      return new ActiveXObject(\'Mic" +
                    "rosoft.XMLHTTP\');\r\n    } catch(e) { }\r\n  }\r\n}\r\n\r\n},{\"has-cors\":23}],11:[function" +
                    "(_dereq_,module,exports){\r\n(function (global){\r\n/**\r\n * Create a blob builder ev" +
                    "en when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = global.BlobBuilder\r\n  ||" +
                    " global.WebKitBlobBuilder\r\n  || global.MSBlobBuilder\r\n  || global.MozBlobBuilder" +
                    ";\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = " +
                    "(function() {\r\n  try {\r\n    var b = new Blob([\'hi\']);\r\n    return b.size == 2;\r\n" +
                    "  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is" +
                    " supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prot" +
                    "otype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\nfunction BlobBuilderConstru" +
                    "ctor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder()" +
                    ";\r\n  for (var i = 0; i < ary.length; i++) {\r\n    bb.append(ary[i]);\r\n  }\r\n  retu" +
                    "rn (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nmodule.expor" +
                    "ts = (function() {\r\n  if (blobSupported) {\r\n    return global.Blob;\r\n  } else if" +
                    " (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    r" +
                    "eturn undefined;\r\n  }\r\n})();\r\n\r\n}).call(this,typeof self !== \"undefined\" ? self " +
                    ": typeof window !== \"undefined\" ? window : {})\r\n},{}],12:[function(_dereq_,modul" +
                    "e,exports){\r\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nmodule.exports = Emitter;\r\n\r\n/*" +
                    "*\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(o" +
                    "bj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties" +
                    ".\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunc" +
                    "tion mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitte" +
                    "r.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` " +
                    "with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {E" +
                    "mitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEve" +
                    "ntListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n " +
                    " (this._callbacks[event] = this._callbacks[event] || [])\r\n    .push(fn);\r\n  retu" +
                    "rn this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n" +
                    " * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Fu" +
                    "nction} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once " +
                    "= function(event, fn){\r\n  var self = this;\r\n  this._callbacks = this._callbacks " +
                    "|| {};\r\n\r\n  function on() {\r\n    self.off(event, on);\r\n    fn.apply(this, argume" +
                    "nts);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n " +
                    "* Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n *" +
                    " @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api p" +
                    "ublic\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitt" +
                    "er.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = funct" +
                    "ion(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0" +
                    " == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  /" +
                    "/ specific event\r\n  var callbacks = this._callbacks[event];\r\n  if (!callbacks) r" +
                    "eturn this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    del" +
                    "ete this._callbacks[event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handl" +
                    "er\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callback" +
                    "s[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n    " +
                    "  break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given " +
                    "args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}" +
                    "\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._ca" +
                    "llbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this" +
                    "._callbacks[event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n" +
                    "    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i]." +
                    "apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of " +
                    "callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @ap" +
                    "i public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbac" +
                    "ks = this._callbacks || {};\r\n  return this._callbacks[event] || [];\r\n};\r\n\r\n/**\r\n" +
                    " * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n *" +
                    " @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = func" +
                    "tion(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\r\n},{}],13:[functio" +
                    "n(_dereq_,module,exports){\r\n\r\nmodule.exports = function(a, b){\r\n  var fn = funct" +
                    "ion(){};\r\n  fn.prototype = b.prototype;\r\n  a.prototype = new fn;\r\n  a.prototype." +
                    "constructor = a;\r\n};\r\n},{}],14:[function(_dereq_,module,exports){\r\n\r\n/**\r\n * Thi" +
                    "s is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as th" +
                    "e module.\r\n */\r\n\r\nexports = module.exports = _dereq_(\'./debug\');\r\nexports.log = " +
                    "log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = loa" +
                    "d;\r\nexports.useColors = useColors;\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [" +
                    "\r\n  \'lightseagreen\',\r\n  \'forestgreen\',\r\n  \'goldenrod\',\r\n  \'dodgerblue\',\r\n  \'dark" +
                    "orchid\',\r\n  \'crimson\'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors," +
                    " Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n" +
                    " * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variab" +
                    "le to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // is w" +
                    "ebkit? http://stackoverflow.com/a/16459606/376773\r\n  return (\'WebkitAppearance\' " +
                    "in document.documentElement.style) ||\r\n    // is firebug? http://stackoverflow.c" +
                    "om/a/398120/376773\r\n    (window.console && (console.firebug || (console.exceptio" +
                    "n && console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mo" +
                    "zilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (navigator.userAgen" +
                    "t.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\r\n}\r\n\r" +
                    "\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by defaul" +
                    "t.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  return JSON.stringify(v);\r\n};" +
                    "\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfun" +
                    "ction formatArgs() {\r\n  var args = arguments;\r\n  var useColors = this.useColors;" +
                    "\r\n\r\n  args[0] = (useColors ? \'%c\' : \'\')\r\n    + this.namespace\r\n    + (useColors " +
                    "? \' %c\' : \' \')\r\n    + args[0]\r\n    + (useColors ? \'%c \' : \' \')\r\n    + \'+\' + expo" +
                    "rts.humanize(this.diff);\r\n\r\n  if (!useColors) return args;\r\n\r\n  var c = \'color: " +
                    "\' + this.color;\r\n  args = [args[0], c, \'color: inherit\'].concat(Array.prototype." +
                    "slice.call(args, 1));\r\n\r\n  // the final \"%c\" is somewhat tricky, because there c" +
                    "ould be other\r\n  // arguments passed either before or after the %c, so we need t" +
                    "o\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n " +
                    " var lastC = 0;\r\n  args[0].replace(/%[a-z%]/g, function(match) {\r\n    if (\'%\' ==" +
                    "= match) return;\r\n    index++;\r\n    if (\'%c\' === match) {\r\n      // we only are " +
                    "interested in the *last* %c\r\n      // (the user may have provided their own)\r\n  " +
                    "    lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n  return args;\r" +
                    "\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.lo" +
                    "g` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // This " +
                    "hackery is required for IE8,\r\n  // where the `console.log` function doesn\'t have" +
                    " \'apply\'\r\n  return \'object\' == typeof console\r\n    && \'function\' == typeof conso" +
                    "le.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n" +
                    "}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api priv" +
                    "ate\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r" +
                    "\n      localStorage.removeItem(\'debug\');\r\n    } else {\r\n      localStorage.debug" +
                    " = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * " +
                    "@return {String} returns the previously persisted debug modes\r\n * @api private\r\n" +
                    " */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = localStorage.debug;\r\n  } ca" +
                    "tch(e) {}\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.d" +
                    "ebug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n},{\"./debug\":15}],15:[functi" +
                    "on(_dereq_,module,exports){\r\n\r\n/**\r\n * This is the common logic for both the Nod" +
                    "e.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` " +
                    "as the module.\r\n */\r\n\r\nexports = module.exports = debug;\r\nexports.coerce = coerc" +
                    "e;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enab" +
                    "led;\r\nexports.humanize = _dereq_(\'ms\');\r\n\r\n/**\r\n * The currently active debug mo" +
                    "de names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r" +
                    "\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument" +
                    ".\r\n *\r\n * Valid key names are a single, lowercased letter, i.e. \"n\".\r\n */\r\n\r\nexp" +
                    "orts.formatters = {};\r\n\r\n/**\r\n * Previously assigned color.\r\n */\r\n\r\nvar prevColo" +
                    "r = 0;\r\n\r\n/**\r\n * Previous log timestamp.\r\n */\r\n\r\nvar prevTime;\r\n\r\n/**\r\n * Selec" +
                    "t a color.\r\n *\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColo" +
                    "r() {\r\n  return exports.colors[prevColor++ % exports.colors.length];\r\n}\r\n\r\n/**\r\n" +
                    " * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespa" +
                    "ce\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction debug(namespace) {\r\n\r" +
                    "\n  // define the `disabled` version\r\n  function disabled() {\r\n  }\r\n  disabled.en" +
                    "abled = false;\r\n\r\n  // define the `enabled` version\r\n  function enabled() {\r\n\r\n " +
                    "   var self = enabled;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date(" +
                    ");\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev " +
                    "= prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // add the `colo" +
                    "r` if not set\r\n    if (null == self.useColors) self.useColors = exports.useColor" +
                    "s();\r\n    if (null == self.color && self.useColors) self.color = selectColor();\r" +
                    "\n\r\n    var args = Array.prototype.slice.call(arguments);\r\n\r\n    args[0] = export" +
                    "s.coerce(args[0]);\r\n\r\n    if (\'string\' !== typeof args[0]) {\r\n      // anything " +
                    "else let\'s inspect with %o\r\n      args = [\'%o\'].concat(args);\r\n    }\r\n\r\n    // a" +
                    "pply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0]" +
                    ".replace(/%([a-z%])/g, function(match, format) {\r\n      // if we encounter an es" +
                    "caped % then don\'t increase the array index\r\n      if (match === \'%\') return mat" +
                    "ch;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if" +
                    " (\'function\' === typeof formatter) {\r\n        var val = args[index];\r\n        ma" +
                    "tch = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index" +
                    "]` since it\'s inlined in the `format`\r\n        args.splice(index, 1);\r\n        i" +
                    "ndex--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    if (\'function\' === typeof " +
                    "exports.formatArgs) {\r\n      args = exports.formatArgs.apply(self, args);\r\n    }" +
                    "\r\n    var logFn = enabled.log || exports.log || console.log.bind(console);\r\n    " +
                    "logFn.apply(self, args);\r\n  }\r\n  enabled.enabled = true;\r\n\r\n  var fn = exports.e" +
                    "nabled(namespace) ? enabled : disabled;\r\n\r\n  fn.namespace = namespace;\r\n\r\n  retu" +
                    "rn fn;\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r" +
                    "\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @" +
                    "api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r" +
                    "\n  var split = (namespaces || \'\').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r" +
                    "\n  for (var i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty" +
                    " strings\r\n    namespaces = split[i].replace(/\\*/g, \'.*?\');\r\n    if (namespaces[0" +
                    "] === \'-\') {\r\n      exports.skips.push(new RegExp(\'^\' + namespaces.substr(1) + \'" +
                    "$\'));\r\n    } else {\r\n      exports.names.push(new RegExp(\'^\' + namespaces + \'$\')" +
                    ");\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nf" +
                    "unction disable() {\r\n  exports.enable(\'\');\r\n}\r\n\r\n/**\r\n * Returns true if the giv" +
                    "en mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @retu" +
                    "rn {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  var i, len;\r\n  " +
                    "for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i" +
                    "].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.na" +
                    "mes.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      retur" +
                    "n true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param " +
                    "{Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r" +
                    "\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r" +
                    "\n\r\n},{\"ms\":16}],16:[function(_dereq_,module,exports){\r\n/**\r\n * Helpers.\r\n */\r\n\r\n" +
                    "var s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 36" +
                    "5.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `l" +
                    "ong` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {O" +
                    "bject} options\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.export" +
                    "s = function(val, options){\r\n  options = options || {};\r\n  if (\'string\' == typeo" +
                    "f val) return parse(val);\r\n  return options.long\r\n    ? _long(val)\r\n    : _short" +
                    "(val);\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @pa" +
                    "ram {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(st" +
                    "r) {\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?" +
                    "|d|years?|y)?$/i.exec(str);\r\n  if (!match) return;\r\n  var n = parseFloat(match[1" +
                    "]);\r\n  var type = (match[2] || \'ms\').toLowerCase();\r\n  switch (type) {\r\n    case" +
                    " \'years\':\r\n    case \'year\':\r\n    case \'y\':\r\n      return n * y;\r\n    case \'days\'" +
                    ":\r\n    case \'day\':\r\n    case \'d\':\r\n      return n * d;\r\n    case \'hours\':\r\n    c" +
                    "ase \'hour\':\r\n    case \'h\':\r\n      return n * h;\r\n    case \'minutes\':\r\n    case \'" +
                    "minute\':\r\n    case \'m\':\r\n      return n * m;\r\n    case \'seconds\':\r\n    case \'sec" +
                    "ond\':\r\n    case \'s\':\r\n      return n * s;\r\n    case \'ms\':\r\n      return n;\r\n  }\r" +
                    "\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {Str" +
                    "ing}\r\n * @api private\r\n */\r\n\r\nfunction _short(ms) {\r\n  if (ms >= d) return Math." +
                    "round(ms / d) + \'d\';\r\n  if (ms >= h) return Math.round(ms / h) + \'h\';\r\n  if (ms " +
                    ">= m) return Math.round(ms / m) + \'m\';\r\n  if (ms >= s) return Math.round(ms / s)" +
                    " + \'s\';\r\n  return ms + \'ms\';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param " +
                    "{Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction _long(ms) {\r\n" +
                    "  return plural(ms, d, \'day\')\r\n    || plural(ms, h, \'hour\')\r\n    || plural(ms, m" +
                    ", \'minute\')\r\n    || plural(ms, s, \'second\')\r\n    || ms + \' ms\';\r\n}\r\n\r\n/**\r\n * Pl" +
                    "uralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) return" +
                    ";\r\n  if (ms < n * 1.5) return Math.floor(ms / n) + \' \' + name;\r\n  return Math.ce" +
                    "il(ms / n) + \' \' + name + \'s\';\r\n}\r\n\r\n},{}],17:[function(_dereq_,module,exports){" +
                    "\r\n(function (global){\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar keys = _dereq_(\'" +
                    "./keys\');\r\nvar sliceBuffer = _dereq_(\'arraybuffer.slice\');\r\nvar base64encoder = " +
                    "_dereq_(\'base64-arraybuffer\');\r\nvar after = _dereq_(\'after\');\r\nvar utf8 = _dereq" +
                    "_(\'utf8\');\r\n\r\n/**\r\n * Check if we are running an android browser. That requires " +
                    "us to use\r\n * ArrayBuffer with polling transports...\r\n *\r\n * http://ghinda.net/j" +
                    "peg-blob-ajax-android/\r\n */\r\n\r\nvar isAndroid = navigator.userAgent.match(/Androi" +
                    "d/i);\r\n\r\n/**\r\n * Current protocol version.\r\n */\r\n\r\nexports.protocol = 3;\r\n\r\n/**\r" +
                    "\n * Packet types.\r\n */\r\n\r\nvar packets = exports.packets = {\r\n    open:     0    " +
                    "// non-ws\r\n  , close:    1    // non-ws\r\n  , ping:     2\r\n  , pong:     3\r\n  , m" +
                    "essage:  4\r\n  , upgrade:  5\r\n  , noop:     6\r\n};\r\n\r\nvar packetslist = keys(packe" +
                    "ts);\r\n\r\n/**\r\n * Premade error packet.\r\n */\r\n\r\nvar err = { type: \'error\', data: \'" +
                    "parser error\' };\r\n\r\n/**\r\n * Create a blob api even for blob builder when vendor " +
                    "prefixes exist\r\n */\r\n\r\nvar Blob = _dereq_(\'blob\');\r\n\r\n/**\r\n * Encodes a packet.\r" +
                    "\n *\r\n *     <packet type id> [ <data> ]\r\n *\r\n * Example:\r\n *\r\n *     5hello worl" +
                    "d\r\n *     3\r\n *     4\r\n *\r\n * Binary is encoded in an identical principle\r\n *\r\n " +
                    "* @api private\r\n */\r\n\r\nexports.encodePacket = function (packet, supportsBinary, " +
                    "utf8encode, callback) {\r\n  if (\'function\' == typeof supportsBinary) {\r\n    callb" +
                    "ack = supportsBinary;\r\n    supportsBinary = false;\r\n  }\r\n\r\n  if (\'function\' == t" +
                    "ypeof utf8encode) {\r\n    callback = utf8encode;\r\n    utf8encode = null;\r\n  }\r\n\r\n" +
                    "  var data = (packet.data === undefined)\r\n    ? undefined\r\n    : packet.data.buf" +
                    "fer || packet.data;\r\n\r\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) " +
                    "{\r\n    return encodeArrayBuffer(packet, supportsBinary, callback);\r\n  } else if " +
                    "(Blob && data instanceof global.Blob) {\r\n    return encodeBlob(packet, supportsB" +
                    "inary, callback);\r\n  }\r\n\r\n  // Sending data as a utf-8 string\r\n  var encoded = p" +
                    "ackets[packet.type];\r\n\r\n  // data fragment is optional\r\n  if (undefined !== pack" +
                    "et.data) {\r\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : Strin" +
                    "g(packet.data);\r\n  }\r\n\r\n  return callback(\'\' + encoded);\r\n\r\n};\r\n\r\n/**\r\n * Encode" +
                    " packet helpers for binary types\r\n */\r\n\r\nfunction encodeArrayBuffer(packet, supp" +
                    "ortsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase" +
                    "64Packet(packet, callback);\r\n  }\r\n\r\n  var data = packet.data;\r\n  var contentArra" +
                    "y = new Uint8Array(data);\r\n  var resultBuffer = new Uint8Array(1 + data.byteLeng" +
                    "th);\r\n\r\n  resultBuffer[0] = packets[packet.type];\r\n  for (var i = 0; i < content" +
                    "Array.length; i++) {\r\n    resultBuffer[i+1] = contentArray[i];\r\n  }\r\n\r\n  return " +
                    "callback(resultBuffer.buffer);\r\n}\r\n\r\nfunction encodeBlobAsArrayBuffer(packet, su" +
                    "pportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBa" +
                    "se64Packet(packet, callback);\r\n  }\r\n\r\n  var fr = new FileReader();\r\n  fr.onload " +
                    "= function() {\r\n    packet.data = fr.result;\r\n    exports.encodePacket(packet, s" +
                    "upportsBinary, true, callback);\r\n  };\r\n  return fr.readAsArrayBuffer(packet.data" +
                    ");\r\n}\r\n\r\nfunction encodeBlob(packet, supportsBinary, callback) {\r\n  if (!support" +
                    "sBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  i" +
                    "f (isAndroid) {\r\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, call" +
                    "back);\r\n  }\r\n\r\n  var length = new Uint8Array(1);\r\n  length[0] = packets[packet.t" +
                    "ype];\r\n  var blob = new Blob([length.buffer, packet.data]);\r\n\r\n  return callback" +
                    "(blob);\r\n}\r\n\r\n/**\r\n * Encodes a packet with binary data in a base64 string\r\n *\r\n" +
                    " * @param {Object} packet, has `type` and `data`\r\n * @return {String} base64 enc" +
                    "oded message\r\n */\r\n\r\nexports.encodeBase64Packet = function(packet, callback) {\r\n" +
                    "  var message = \'b\' + exports.packets[packet.type];\r\n  if (Blob && packet.data i" +
                    "nstanceof Blob) {\r\n    var fr = new FileReader();\r\n    fr.onload = function() {\r" +
                    "\n      var b64 = fr.result.split(\',\')[1];\r\n      callback(message + b64);\r\n    }" +
                    ";\r\n    return fr.readAsDataURL(packet.data);\r\n  }\r\n\r\n  var b64data;\r\n  try {\r\n  " +
                    "  b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\r\n  } c" +
                    "atch (e) {\r\n    // iPhone Safari doesn\'t let you apply with typed arrays\r\n    va" +
                    "r typed = new Uint8Array(packet.data);\r\n    var basic = new Array(typed.length);" +
                    "\r\n    for (var i = 0; i < typed.length; i++) {\r\n      basic[i] = typed[i];\r\n    " +
                    "}\r\n    b64data = String.fromCharCode.apply(null, basic);\r\n  }\r\n  message += glob" +
                    "al.btoa(b64data);\r\n  return callback(message);\r\n};\r\n\r\n/**\r\n * Decodes a packet. " +
                    "Changes format to Blob if requested.\r\n *\r\n * @return {Object} with `type` and `d" +
                    "ata` (if any)\r\n * @api private\r\n */\r\n\r\nexports.decodePacket = function (data, bi" +
                    "naryType, utf8decode) {\r\n  // String data\r\n  if (typeof data == \'string\' || data" +
                    " === undefined) {\r\n    if (data.charAt(0) == \'b\') {\r\n      return exports.decode" +
                    "Base64Packet(data.substr(1), binaryType);\r\n    }\r\n\r\n    if (utf8decode) {\r\n     " +
                    " try {\r\n        data = utf8.decode(data);\r\n      } catch (e) {\r\n        return e" +
                    "rr;\r\n      }\r\n    }\r\n    var type = data.charAt(0);\r\n\r\n    if (Number(type) != t" +
                    "ype || !packetslist[type]) {\r\n      return err;\r\n    }\r\n\r\n    if (data.length > " +
                    "1) {\r\n      return { type: packetslist[type], data: data.substring(1) };\r\n    } " +
                    "else {\r\n      return { type: packetslist[type] };\r\n    }\r\n  }\r\n\r\n  var asArray =" +
                    " new Uint8Array(data);\r\n  var type = asArray[0];\r\n  var rest = sliceBuffer(data," +
                    " 1);\r\n  if (Blob && binaryType === \'blob\') {\r\n    rest = new Blob([rest]);\r\n  }\r" +
                    "\n  return { type: packetslist[type], data: rest };\r\n};\r\n\r\n/**\r\n * Decodes a pack" +
                    "et encoded in a base64 string\r\n *\r\n * @param {String} base64 encoded message\r\n *" +
                    " @return {Object} with `type` and `data` (if any)\r\n */\r\n\r\nexports.decodeBase64Pa" +
                    "cket = function(msg, binaryType) {\r\n  var type = packetslist[msg.charAt(0)];\r\n  " +
                    "if (!global.ArrayBuffer) {\r\n    return { type: type, data: { base64: true, data:" +
                    " msg.substr(1) } };\r\n  }\r\n\r\n  var data = base64encoder.decode(msg.substr(1));\r\n\r" +
                    "\n  if (binaryType === \'blob\' && Blob) {\r\n    data = new Blob([data]);\r\n  }\r\n\r\n  " +
                    "return { type: type, data: data };\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (pay" +
                    "load).\r\n *\r\n *     <length>:data\r\n *\r\n * Example:\r\n *\r\n *     11:hello world2:hi" +
                    "\r\n *\r\n * If any contents are binary, they will be encoded as base64 strings. Bas" +
                    "e64\r\n * encoded strings are marked with a b before the length specifier\r\n *\r\n * " +
                    "@param {Array} packets\r\n * @api private\r\n */\r\n\r\nexports.encodePayload = function" +
                    " (packets, supportsBinary, callback) {\r\n  if (typeof supportsBinary == \'function" +
                    "\') {\r\n    callback = supportsBinary;\r\n    supportsBinary = null;\r\n  }\r\n\r\n  if (s" +
                    "upportsBinary) {\r\n    if (Blob && !isAndroid) {\r\n      return exports.encodePayl" +
                    "oadAsBlob(packets, callback);\r\n    }\r\n\r\n    return exports.encodePayloadAsArrayB" +
                    "uffer(packets, callback);\r\n  }\r\n\r\n  if (!packets.length) {\r\n    return callback(" +
                    "\'0:\');\r\n  }\r\n\r\n  function setLengthHeader(message) {\r\n    return message.length " +
                    "+ \':\' + message;\r\n  }\r\n\r\n  function encodeOne(packet, doneCallback) {\r\n    expor" +
                    "ts.encodePacket(packet, supportsBinary, true, function(message) {\r\n      doneCal" +
                    "lback(null, setLengthHeader(message));\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne" +
                    ", function(err, results) {\r\n    return callback(results.join(\'\'));\r\n  });\r\n};\r\n\r" +
                    "\n/**\r\n * Async array map using after\r\n */\r\n\r\nfunction map(ary, each, done) {\r\n  " +
                    "var result = new Array(ary.length);\r\n  var next = after(ary.length, done);\r\n\r\n  " +
                    "var eachWithIndex = function(i, el, cb) {\r\n    each(el, function(error, msg) {\r\n" +
                    "      result[i] = msg;\r\n      cb(error, result);\r\n    });\r\n  };\r\n\r\n  for (var i " +
                    "= 0; i < ary.length; i++) {\r\n    eachWithIndex(i, ary[i], next);\r\n  }\r\n}\r\n\r\n/*\r\n" +
                    " * Decodes data when a payload is maybe expected. Possible binary contents are\r\n" +
                    " * decoded from their base64 representation\r\n *\r\n * @param {String} data, callba" +
                    "ck method\r\n * @api public\r\n */\r\n\r\nexports.decodePayload = function (data, binary" +
                    "Type, callback) {\r\n  if (typeof data != \'string\') {\r\n    return exports.decodePa" +
                    "yloadAsBinary(data, binaryType, callback);\r\n  }\r\n\r\n  if (typeof binaryType === \'" +
                    "function\') {\r\n    callback = binaryType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var p" +
                    "acket;\r\n  if (data == \'\') {\r\n    // parser error - ignoring payload\r\n    return " +
                    "callback(err, 0, 1);\r\n  }\r\n\r\n  var length = \'\'\r\n    , n, msg;\r\n\r\n  for (var i = " +
                    "0, l = data.length; i < l; i++) {\r\n    var chr = data.charAt(i);\r\n\r\n    if (\':\' " +
                    "!= chr) {\r\n      length += chr;\r\n    } else {\r\n      if (\'\' == length || (length" +
                    " != (n = Number(length)))) {\r\n        // parser error - ignoring payload\r\n      " +
                    "  return callback(err, 0, 1);\r\n      }\r\n\r\n      msg = data.substr(i + 1, n);\r\n\r\n" +
                    "      if (length != msg.length) {\r\n        // parser error - ignoring payload\r\n " +
                    "       return callback(err, 0, 1);\r\n      }\r\n\r\n      if (msg.length) {\r\n        " +
                    "packet = exports.decodePacket(msg, binaryType, true);\r\n\r\n        if (err.type ==" +
                    " packet.type && err.data == packet.data) {\r\n          // parser error in individ" +
                    "ual packet - ignoring payload\r\n          return callback(err, 0, 1);\r\n        }\r" +
                    "\n\r\n        var ret = callback(packet, i + n, l);\r\n        if (false === ret) ret" +
                    "urn;\r\n      }\r\n\r\n      // advance cursor\r\n      i += n;\r\n      length = \'\';\r\n   " +
                    " }\r\n  }\r\n\r\n  if (length != \'\') {\r\n    // parser error - ignoring payload\r\n    re" +
                    "turn callback(err, 0, 1);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (paylo" +
                    "ad) as binary.\r\n *\r\n * <1 = binary, 0 = string><number from 0-9><number from 0-9" +
                    ">[...]<number\r\n * 255><data>\r\n *\r\n * Example:\r\n * 1 3 255 1 2 3, if the binary c" +
                    "ontents are interpreted as 8 bit integers\r\n *\r\n * @param {Array} packets\r\n * @re" +
                    "turn {ArrayBuffer} encoded payload\r\n * @api private\r\n */\r\n\r\nexports.encodePayloa" +
                    "dAsArrayBuffer = function(packets, callback) {\r\n  if (!packets.length) {\r\n    re" +
                    "turn callback(new ArrayBuffer(0));\r\n  }\r\n\r\n  function encodeOne(packet, doneCall" +
                    "back) {\r\n    exports.encodePacket(packet, true, true, function(data) {\r\n      re" +
                    "turn doneCallback(null, data);\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, functi" +
                    "on(err, encodedPackets) {\r\n    var totalLength = encodedPackets.reduce(function(" +
                    "acc, p) {\r\n      var len;\r\n      if (typeof p === \'string\'){\r\n        len = p.le" +
                    "ngth;\r\n      } else {\r\n        len = p.byteLength;\r\n      }\r\n      return acc + " +
                    "len.toString().length + len + 2; // string/binary identifier + separator = 2\r\n  " +
                    "  }, 0);\r\n\r\n    var resultArray = new Uint8Array(totalLength);\r\n\r\n    var buffer" +
                    "Index = 0;\r\n    encodedPackets.forEach(function(p) {\r\n      var isString = typeo" +
                    "f p === \'string\';\r\n      var ab = p;\r\n      if (isString) {\r\n        var view = " +
                    "new Uint8Array(p.length);\r\n        for (var i = 0; i < p.length; i++) {\r\n       " +
                    "   view[i] = p.charCodeAt(i);\r\n        }\r\n        ab = view.buffer;\r\n      }\r\n\r\n" +
                    "      if (isString) { // not true binary\r\n        resultArray[bufferIndex++] = 0" +
                    ";\r\n      } else { // true binary\r\n        resultArray[bufferIndex++] = 1;\r\n     " +
                    " }\r\n\r\n      var lenStr = ab.byteLength.toString();\r\n      for (var i = 0; i < le" +
                    "nStr.length; i++) {\r\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\r\n" +
                    "      }\r\n      resultArray[bufferIndex++] = 255;\r\n\r\n      var view = new Uint8Ar" +
                    "ray(ab);\r\n      for (var i = 0; i < view.length; i++) {\r\n        resultArray[buf" +
                    "ferIndex++] = view[i];\r\n      }\r\n    });\r\n\r\n    return callback(resultArray.buff" +
                    "er);\r\n  });\r\n};\r\n\r\n/**\r\n * Encode as Blob\r\n */\r\n\r\nexports.encodePayloadAsBlob = " +
                    "function(packets, callback) {\r\n  function encodeOne(packet, doneCallback) {\r\n   " +
                    " exports.encodePacket(packet, true, true, function(encoded) {\r\n      var binaryI" +
                    "dentifier = new Uint8Array(1);\r\n      binaryIdentifier[0] = 1;\r\n      if (typeof" +
                    " encoded === \'string\') {\r\n        var view = new Uint8Array(encoded.length);\r\n  " +
                    "      for (var i = 0; i < encoded.length; i++) {\r\n          view[i] = encoded.ch" +
                    "arCodeAt(i);\r\n        }\r\n        encoded = view.buffer;\r\n        binaryIdentifie" +
                    "r[0] = 0;\r\n      }\r\n\r\n      var len = (encoded instanceof ArrayBuffer)\r\n        " +
                    "? encoded.byteLength\r\n        : encoded.size;\r\n\r\n      var lenStr = len.toString" +
                    "();\r\n      var lengthAry = new Uint8Array(lenStr.length + 1);\r\n      for (var i " +
                    "= 0; i < lenStr.length; i++) {\r\n        lengthAry[i] = parseInt(lenStr[i]);\r\n   " +
                    "   }\r\n      lengthAry[lenStr.length] = 255;\r\n\r\n      if (Blob) {\r\n        var bl" +
                    "ob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\r\n        do" +
                    "neCallback(null, blob);\r\n      }\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, func" +
                    "tion(err, results) {\r\n    return callback(new Blob(results));\r\n  });\r\n};\r\n\r\n/*\r\n" +
                    " * Decodes data when a payload is maybe expected. Strings are decoded by\r\n * int" +
                    "erpreting each byte as a key code for entries marked to start with 0. See\r\n * de" +
                    "scription of encodePayloadAsBinary\r\n *\r\n * @param {ArrayBuffer} data, callback m" +
                    "ethod\r\n * @api public\r\n */\r\n\r\nexports.decodePayloadAsBinary = function (data, bi" +
                    "naryType, callback) {\r\n  if (typeof binaryType === \'function\') {\r\n    callback =" +
                    " binaryType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var bufferTail = data;\r\n  var buf" +
                    "fers = [];\r\n\r\n  var numberTooLong = false;\r\n  while (bufferTail.byteLength > 0) " +
                    "{\r\n    var tailArray = new Uint8Array(bufferTail);\r\n    var isString = tailArray" +
                    "[0] === 0;\r\n    var msgLength = \'\';\r\n\r\n    for (var i = 1; ; i++) {\r\n      if (t" +
                    "ailArray[i] == 255) break;\r\n\r\n      if (msgLength.length > 310) {\r\n        numbe" +
                    "rTooLong = true;\r\n        break;\r\n      }\r\n\r\n      msgLength += tailArray[i];\r\n " +
                    "   }\r\n\r\n    if(numberTooLong) return callback(err, 0, 1);\r\n\r\n    bufferTail = sl" +
                    "iceBuffer(bufferTail, 2 + msgLength.length);\r\n    msgLength = parseInt(msgLength" +
                    ");\r\n\r\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\r\n    if (isString) {\r" +
                    "\n      try {\r\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg))" +
                    ";\r\n      } catch (e) {\r\n        // iPhone Safari doesn\'t let you apply to typed " +
                    "arrays\r\n        var typed = new Uint8Array(msg);\r\n        msg = \'\';\r\n        for" +
                    " (var i = 0; i < typed.length; i++) {\r\n          msg += String.fromCharCode(type" +
                    "d[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    buffers.push(msg);\r\n    bufferTail = sl" +
                    "iceBuffer(bufferTail, msgLength);\r\n  }\r\n\r\n  var total = buffers.length;\r\n  buffe" +
                    "rs.forEach(function(buffer, i) {\r\n    callback(exports.decodePacket(buffer, bina" +
                    "ryType, true), i, total);\r\n  });\r\n};\r\n\r\n}).call(this,typeof self !== \"undefined\"" +
                    " ? self : typeof window !== \"undefined\" ? window : {})\r\n},{\"./keys\":18,\"after\":1" +
                    "9,\"arraybuffer.slice\":20,\"base64-arraybuffer\":21,\"blob\":11,\"utf8\":22}],18:[funct" +
                    "ion(_dereq_,module,exports){\r\n\r\n/**\r\n * Gets the keys for an object.\r\n *\r\n * @re" +
                    "turn {Array} keys\r\n * @api private\r\n */\r\n\r\nmodule.exports = Object.keys || funct" +
                    "ion keys (obj){\r\n  var arr = [];\r\n  var has = Object.prototype.hasOwnProperty;\r\n" +
                    "\r\n  for (var i in obj) {\r\n    if (has.call(obj, i)) {\r\n      arr.push(i);\r\n    }" +
                    "\r\n  }\r\n  return arr;\r\n};\r\n\r\n},{}],19:[function(_dereq_,module,exports){\r\nmodule." +
                    "exports = after\r\n\r\nfunction after(count, callback, err_cb) {\r\n    var bail = fal" +
                    "se\r\n    err_cb = err_cb || noop\r\n    proxy.count = count\r\n\r\n    return (count ==" +
                    "= 0) ? callback() : proxy\r\n\r\n    function proxy(err, result) {\r\n        if (prox" +
                    "y.count <= 0) {\r\n            throw new Error(\'after called too many times\')\r\n   " +
                    "     }\r\n        --proxy.count\r\n\r\n        // after first error, rest are passed t" +
                    "o err_cb\r\n        if (err) {\r\n            bail = true\r\n            callback(err)" +
                    "\r\n            // future error callbacks will go to error handler\r\n            ca" +
                    "llback = err_cb\r\n        } else if (proxy.count === 0 && !bail) {\r\n            c" +
                    "allback(null, result)\r\n        }\r\n    }\r\n}\r\n\r\nfunction noop() {}\r\n\r\n},{}],20:[fu" +
                    "nction(_dereq_,module,exports){\r\n/**\r\n * An abstraction for slicing an arraybuff" +
                    "er even when\r\n * ArrayBuffer.prototype.slice is not supported\r\n *\r\n * @api publi" +
                    "c\r\n */\r\n\r\nmodule.exports = function(arraybuffer, start, end) {\r\n  var bytes = ar" +
                    "raybuffer.byteLength;\r\n  start = start || 0;\r\n  end = end || bytes;\r\n\r\n  if (arr" +
                    "aybuffer.slice) { return arraybuffer.slice(start, end); }\r\n\r\n  if (start < 0) { " +
                    "start += bytes; }\r\n  if (end < 0) { end += bytes; }\r\n  if (end > bytes) { end = " +
                    "bytes; }\r\n\r\n  if (start >= bytes || start >= end || bytes === 0) {\r\n    return n" +
                    "ew ArrayBuffer(0);\r\n  }\r\n\r\n  var abv = new Uint8Array(arraybuffer);\r\n  var resul" +
                    "t = new Uint8Array(end - start);\r\n  for (var i = start, ii = 0; i < end; i++, ii" +
                    "++) {\r\n    result[ii] = abv[i];\r\n  }\r\n  return result.buffer;\r\n};\r\n\r\n},{}],21:[f" +
                    "unction(_dereq_,module,exports){\r\n/*\r\n * base64-arraybuffer\r\n * https://github.c" +
                    "om/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n *" +
                    " Licensed under the MIT license.\r\n */\r\n(function(chars){\r\n  \"use strict\";\r\n\r\n  e" +
                    "xports.encode = function(arraybuffer) {\r\n    var bytes = new Uint8Array(arraybuf" +
                    "fer),\r\n    i, len = bytes.length, base64 = \"\";\r\n\r\n    for (i = 0; i < len; i+=3)" +
                    " {\r\n      base64 += chars[bytes[i] >> 2];\r\n      base64 += chars[((bytes[i] & 3)" +
                    " << 4) | (bytes[i + 1] >> 4)];\r\n      base64 += chars[((bytes[i + 1] & 15) << 2)" +
                    " | (bytes[i + 2] >> 6)];\r\n      base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n  " +
                    "  if ((len % 3) === 2) {\r\n      base64 = base64.substring(0, base64.length - 1) " +
                    "+ \"=\";\r\n    } else if (len % 3 === 1) {\r\n      base64 = base64.substring(0, base" +
                    "64.length - 2) + \"==\";\r\n    }\r\n\r\n    return base64;\r\n  };\r\n\r\n  exports.decode = " +
                    " function(base64) {\r\n    var bufferLength = base64.length * 0.75,\r\n    len = bas" +
                    "e64.length, i, p = 0,\r\n    encoded1, encoded2, encoded3, encoded4;\r\n\r\n    if (ba" +
                    "se64[base64.length - 1] === \"=\") {\r\n      bufferLength--;\r\n      if (base64[base" +
                    "64.length - 2] === \"=\") {\r\n        bufferLength--;\r\n      }\r\n    }\r\n\r\n    var ar" +
                    "raybuffer = new ArrayBuffer(bufferLength),\r\n    bytes = new Uint8Array(arraybuff" +
                    "er);\r\n\r\n    for (i = 0; i < len; i+=4) {\r\n      encoded1 = chars.indexOf(base64[" +
                    "i]);\r\n      encoded2 = chars.indexOf(base64[i+1]);\r\n      encoded3 = chars.index" +
                    "Of(base64[i+2]);\r\n      encoded4 = chars.indexOf(base64[i+3]);\r\n\r\n      bytes[p+" +
                    "+] = (encoded1 << 2) | (encoded2 >> 4);\r\n      bytes[p++] = ((encoded2 & 15) << " +
                    "4) | (encoded3 >> 2);\r\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63" +
                    ");\r\n    }\r\n\r\n    return arraybuffer;\r\n  };\r\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef" +
                    "ghijklmnopqrstuvwxyz0123456789+/\");\r\n\r\n},{}],22:[function(_dereq_,module,exports" +
                    "){\r\n(function (global){\r\n/*! http://mths.be/utf8js v2.0.0 by @mathias */\r\n;(func" +
                    "tion(root) {\r\n\r\n\t// Detect free variables `exports`\r\n\tvar freeExports = typeof e" +
                    "xports == \'object\' && exports;\r\n\r\n\t// Detect free variable `module`\r\n\tvar freeMo" +
                    "dule = typeof module == \'object\' && module &&\r\n\t\tmodule.exports == freeExports &" +
                    "& module;\r\n\r\n\t// Detect free variable `global`, from Node.js or Browserified cod" +
                    "e,\r\n\t// and use it as `root`\r\n\tvar freeGlobal = typeof global == \'object\' && glo" +
                    "bal;\r\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)" +
                    " {\r\n\t\troot = freeGlobal;\r\n\t}\r\n\r\n\t/*---------------------------------------------" +
                    "-----------------------------*/\r\n\r\n\tvar stringFromCharCode = String.fromCharCode" +
                    ";\r\n\r\n\t// Taken from http://mths.be/punycode\r\n\tfunction ucs2decode(string) {\r\n\t\tv" +
                    "ar output = [];\r\n\t\tvar counter = 0;\r\n\t\tvar length = string.length;\r\n\t\tvar value;" +
                    "\r\n\t\tvar extra;\r\n\t\twhile (counter < length) {\r\n\t\t\tvalue = string.charCodeAt(count" +
                    "er++);\r\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n\t\t\t\t//" +
                    " high surrogate, and there is a next character\r\n\t\t\t\textra = string.charCodeAt(co" +
                    "unter++);\r\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n\t\t\t\t\toutput.p" +
                    "ush(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//" +
                    " unmatched surrogate; only append this code unit, in case the next\r\n\t\t\t\t\t// code" +
                    " unit is the high surrogate of a surrogate pair\r\n\t\t\t\t\toutput.push(value);\r\n\t\t\t\t\t" +
                    "counter--;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\toutput.push(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out" +
                    "put;\r\n\t}\r\n\r\n\t// Taken from http://mths.be/punycode\r\n\tfunction ucs2encode(array) " +
                    "{\r\n\t\tvar length = array.length;\r\n\t\tvar index = -1;\r\n\t\tvar value;\r\n\t\tvar output =" +
                    " \'\';\r\n\t\twhile (++index < length) {\r\n\t\t\tvalue = array[index];\r\n\t\t\tif (value > 0xF" +
                    "FFF) {\r\n\t\t\t\tvalue -= 0x10000;\r\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0" +
                    "x3FF | 0xD800);\r\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\r\n\t\t\t}\r\n\t\t\toutput += stringF" +
                    "romCharCode(value);\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\t/*---------------------------" +
                    "-----------------------------------------------*/\r\n\r\n\tfunction createByte(codePo" +
                    "int, shift) {\r\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80)" +
                    ";\r\n\t}\r\n\r\n\tfunction encodeCodePoint(codePoint) {\r\n\t\tif ((codePoint & 0xFFFFFF80) " +
                    "== 0) { // 1-byte sequence\r\n\t\t\treturn stringFromCharCode(codePoint);\r\n\t\t}\r\n\t\tvar" +
                    " symbol = \'\';\r\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\r\n\t\t\tsym" +
                    "bol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\r\n\t\t}\r\n\t\telse if ((co" +
                    "dePoint & 0xFFFF0000) == 0) { // 3-byte sequence\r\n\t\t\tsymbol = stringFromCharCode" +
                    "(((codePoint >> 12) & 0x0F) | 0xE0);\r\n\t\t\tsymbol += createByte(codePoint, 6);\r\n\t\t" +
                    "}\r\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\r\n\t\t\tsymbol = s" +
                    "tringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\r\n\t\t\tsymbol += createByte(c" +
                    "odePoint, 12);\r\n\t\t\tsymbol += createByte(codePoint, 6);\r\n\t\t}\r\n\t\tsymbol += stringF" +
                    "romCharCode((codePoint & 0x3F) | 0x80);\r\n\t\treturn symbol;\r\n\t}\r\n\r\n\tfunction utf8e" +
                    "ncode(string) {\r\n\t\tvar codePoints = ucs2decode(string);\r\n\r\n\t\t// console.log(JSON" +
                    ".stringify(codePoints.map(function(x) {\r\n\t\t// \treturn \'U+\' + x.toString(16).toUp" +
                    "perCase();\r\n\t\t// })));\r\n\r\n\t\tvar length = codePoints.length;\r\n\t\tvar index = -1;\r\n" +
                    "\t\tvar codePoint;\r\n\t\tvar byteString = \'\';\r\n\t\twhile (++index < length) {\r\n\t\t\tcodeP" +
                    "oint = codePoints[index];\r\n\t\t\tbyteString += encodeCodePoint(codePoint);\r\n\t\t}\r\n\t\t" +
                    "return byteString;\r\n\t}\r\n\r\n\t/*---------------------------------------------------" +
                    "-----------------------*/\r\n\r\n\tfunction readContinuationByte() {\r\n\t\tif (byteIndex" +
                    " >= byteCount) {\r\n\t\t\tthrow Error(\'Invalid byte index\');\r\n\t\t}\r\n\r\n\t\tvar continuati" +
                    "onByte = byteArray[byteIndex] & 0xFF;\r\n\t\tbyteIndex++;\r\n\r\n\t\tif ((continuationByte" +
                    " & 0xC0) == 0x80) {\r\n\t\t\treturn continuationByte & 0x3F;\r\n\t\t}\r\n\r\n\t\t// If we end u" +
                    "p here, it’s not a continuation byte\r\n\t\tthrow Error(\'Invalid continuation byte\')" +
                    ";\r\n\t}\r\n\r\n\tfunction decodeSymbol() {\r\n\t\tvar byte1;\r\n\t\tvar byte2;\r\n\t\tvar byte3;\r\n\t" +
                    "\tvar byte4;\r\n\t\tvar codePoint;\r\n\r\n\t\tif (byteIndex > byteCount) {\r\n\t\t\tthrow Error(" +
                    "\'Invalid byte index\');\r\n\t\t}\r\n\r\n\t\tif (byteIndex == byteCount) {\r\n\t\t\treturn false;" +
                    "\r\n\t\t}\r\n\r\n\t\t// Read first byte\r\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\r\n\t\tbyteInd" +
                    "ex++;\r\n\r\n\t\t// 1-byte sequence (no continuation bytes)\r\n\t\tif ((byte1 & 0x80) == 0" +
                    ") {\r\n\t\t\treturn byte1;\r\n\t\t}\r\n\r\n\t\t// 2-byte sequence\r\n\t\tif ((byte1 & 0xE0) == 0xC0" +
                    ") {\r\n\t\t\tvar byte2 = readContinuationByte();\r\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6" +
                    ") | byte2;\r\n\t\t\tif (codePoint >= 0x80) {\r\n\t\t\t\treturn codePoint;\r\n\t\t\t} else {\r\n\t\t\t" +
                    "\tthrow Error(\'Invalid continuation byte\');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3-byte sequence (m" +
                    "ay include unpaired surrogates)\r\n\t\tif ((byte1 & 0xF0) == 0xE0) {\r\n\t\t\tbyte2 = rea" +
                    "dContinuationByte();\r\n\t\t\tbyte3 = readContinuationByte();\r\n\t\t\tcodePoint = ((byte1" +
                    " & 0x0F) << 12) | (byte2 << 6) | byte3;\r\n\t\t\tif (codePoint >= 0x0800) {\r\n\t\t\t\tretu" +
                    "rn codePoint;\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error(\'Invalid continuation byte\');\r\n\t\t\t}\r" +
                    "\n\t\t}\r\n\r\n\t\t// 4-byte sequence\r\n\t\tif ((byte1 & 0xF8) == 0xF0) {\r\n\t\t\tbyte2 = readCo" +
                    "ntinuationByte();\r\n\t\t\tbyte3 = readContinuationByte();\r\n\t\t\tbyte4 = readContinuati" +
                    "onByte();\r\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\r\n\t\t\t\t(byt" +
                    "e3 << 0x06) | byte4;\r\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n" +
                    "\t\t\t\treturn codePoint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthrow Error(\'Invalid UTF-8 detected\');\r\n\t}" +
                    "\r\n\r\n\tvar byteArray;\r\n\tvar byteCount;\r\n\tvar byteIndex;\r\n\tfunction utf8decode(byte" +
                    "String) {\r\n\t\tbyteArray = ucs2decode(byteString);\r\n\t\tbyteCount = byteArray.length" +
                    ";\r\n\t\tbyteIndex = 0;\r\n\t\tvar codePoints = [];\r\n\t\tvar tmp;\r\n\t\twhile ((tmp = decodeS" +
                    "ymbol()) !== false) {\r\n\t\t\tcodePoints.push(tmp);\r\n\t\t}\r\n\t\treturn ucs2encode(codePo" +
                    "ints);\r\n\t}\r\n\r\n\t/*---------------------------------------------------------------" +
                    "-----------*/\r\n\r\n\tvar utf8 = {\r\n\t\t\'version\': \'2.0.0\',\r\n\t\t\'encode\': utf8encode,\r\n" +
                    "\t\t\'decode\': utf8decode\r\n\t};\r\n\r\n\t// Some AMD build optimizers, like r.js, check f" +
                    "or specific condition patterns\r\n\t// like the following:\r\n\tif (\r\n\t\ttypeof define " +
                    "== \'function\' &&\r\n\t\ttypeof define.amd == \'object\' &&\r\n\t\tdefine.amd\r\n\t) {\r\n\t\tdefi" +
                    "ne(function() {\r\n\t\t\treturn utf8;\r\n\t\t});\r\n\t}\telse if (freeExports && !freeExports" +
                    ".nodeType) {\r\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\r\n\t\t\tfreeModul" +
                    "e.exports = utf8;\r\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\r\n\t\t\tvar object = " +
                    "{};\r\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\r\n\t\t\tfor (var key in utf8) {\r" +
                    "\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\r\n\t\t\t}\r\n\t\t" +
                    "}\r\n\t} else { // in Rhino or a web browser\r\n\t\troot.utf8 = utf8;\r\n\t}\r\n\r\n}(this));\r" +
                    "\n\r\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefine" +
                    "d\" ? window : {})\r\n},{}],23:[function(_dereq_,module,exports){\r\n\r\n/**\r\n * Module" +
                    " dependencies.\r\n */\r\n\r\nvar global = _dereq_(\'global\');\r\n\r\n/**\r\n * Module exports" +
                    ".\r\n *\r\n * Logic borrowed from Modernizr:\r\n *\r\n *   - https://github.com/Moderniz" +
                    "r/Modernizr/blob/master/feature-detects/cors.js\r\n */\r\n\r\ntry {\r\n  module.exports " +
                    "= \'XMLHttpRequest\' in global &&\r\n    \'withCredentials\' in new global.XMLHttpRequ" +
                    "est();\r\n} catch (err) {\r\n  // if XMLHttp support is disabled in IE then it will " +
                    "throw\r\n  // when trying to create\r\n  module.exports = false;\r\n}\r\n\r\n},{\"global\":2" +
                    "4}],24:[function(_dereq_,module,exports){\r\n\r\n/**\r\n * Returns `this`. Execute thi" +
                    "s without a \"context\" (i.e. without it being\r\n * attached to an object of the le" +
                    "ft-hand side), and `this` points to the\r\n * \"global\" scope of the current JS exe" +
                    "cution.\r\n */\r\n\r\nmodule.exports = (function () { return this; })();\r\n\r\n},{}],25:[" +
                    "function(_dereq_,module,exports){\r\n\r\nvar indexOf = [].indexOf;\r\n\r\nmodule.exports" +
                    " = function(arr, obj){\r\n  if (indexOf) return arr.indexOf(obj);\r\n  for (var i = " +
                    "0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) return i;\r\n  }\r\n  return -1;\r" +
                    "\n};\r\n},{}],26:[function(_dereq_,module,exports){\r\n(function (global){\r\n/**\r\n * J" +
                    "SON parse.\r\n *\r\n * @see Based on jQuery#parseJSON (MIT) and JSON2\r\n * @api priva" +
                    "te\r\n */\r\n\r\nvar rvalidchars = /^[\\],:{}\\s]*$/;\r\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bf" +
                    "nrt]|u[0-9a-fA-F]{4})/g;\r\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d" +
                    "+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\r\nva" +
                    "r rtrimLeft = /^\\s+/;\r\nvar rtrimRight = /\\s+$/;\r\n\r\nmodule.exports = function par" +
                    "sejson(data) {\r\n  if (\'string\' != typeof data || !data) {\r\n    return null;\r\n  }" +
                    "\r\n\r\n  data = data.replace(rtrimLeft, \'\').replace(rtrimRight, \'\');\r\n\r\n  // Attemp" +
                    "t to parse using the native JSON parser first\r\n  if (global.JSON && JSON.parse) " +
                    "{\r\n    return JSON.parse(data);\r\n  }\r\n\r\n  if (rvalidchars.test(data.replace(rval" +
                    "idescape, \'@\')\r\n      .replace(rvalidtokens, \']\')\r\n      .replace(rvalidbraces, " +
                    "\'\'))) {\r\n    return (new Function(\'return \' + data))();\r\n  }\r\n};\r\n}).call(this,t" +
                    "ypeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})" +
                    "\r\n},{}],27:[function(_dereq_,module,exports){\r\n/**\r\n * Compiles a querystring\r\n " +
                    "* Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api p" +
                    "rivate\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = \'\';\r\n\r\n  for (var " +
                    "i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += \'&\';" +
                    "\r\n      str += encodeURIComponent(i) + \'=\' + encodeURIComponent(obj[i]);\r\n    }\r" +
                    "\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r" +
                    "\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs" +
                    "){\r\n  var qry = {};\r\n  var pairs = qs.split(\'&\');\r\n  for (var i = 0, l = pairs.l" +
                    "ength; i < l; i++) {\r\n    var pair = pairs[i].split(\'=\');\r\n    qry[decodeURIComp" +
                    "onent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\r\n},{}]," +
                    "28:[function(_dereq_,module,exports){\r\n/**\r\n * Parses an URI\r\n *\r\n * @author Ste" +
                    "ven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re " +
                    "= /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?" +
                    ")?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?" +
                    "![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\n" +
                    "var parts = [\r\n    \'source\', \'protocol\', \'authority\', \'userInfo\', \'user\', \'passw" +
                    "ord\', \'host\', \'port\', \'relative\', \'path\', \'directory\', \'file\', \'query\', \'anchor\'" +
                    "\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b" +
                    " = str.indexOf(\'[\'),\r\n        e = str.indexOf(\']\');\r\n\r\n    if (b != -1 && e != -" +
                    "1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, \';\')" +
                    " + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || \'\'),\r\n    " +
                    "    uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i" +
                    "] || \'\';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n   " +
                    "     uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, \':\');\r\n" +
                    "        uri.authority = uri.authority.replace(\'[\', \'\').replace(\']\', \'\').replace(" +
                    "/;/g, \':\');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\r\n},{}]," +
                    "29:[function(_dereq_,module,exports){\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nva" +
                    "r global = (function() { return this; })();\r\n\r\n/**\r\n * WebSocket constructor.\r\n " +
                    "*/\r\n\r\nvar WebSocket = global.WebSocket || global.MozWebSocket;\r\n\r\n/**\r\n * Module" +
                    " exports.\r\n */\r\n\r\nmodule.exports = WebSocket ? ws : null;\r\n\r\n/**\r\n * WebSocket c" +
                    "onstructor.\r\n *\r\n * The third `opts` options object gets ignored in web browsers" +
                    ", since it\'s\r\n * non-standard, and throws a TypeError if passed to the construct" +
                    "or.\r\n * See: https://github.com/einaros/ws/issues/227\r\n *\r\n * @param {String} ur" +
                    "i\r\n * @param {Array} protocols (optional)\r\n * @param {Object) opts (optional)\r\n " +
                    "* @api public\r\n */\r\n\r\nfunction ws(uri, protocols, opts) {\r\n  var instance;\r\n  if" +
                    " (protocols) {\r\n    instance = new WebSocket(uri, protocols);\r\n  } else {\r\n    i" +
                    "nstance = new WebSocket(uri);\r\n  }\r\n  return instance;\r\n}\r\n\r\nif (WebSocket) ws.p" +
                    "rototype = WebSocket.prototype;\r\n\r\n},{}]},{},[1])(1)\r\n});");
            this.Write(" ");
            
            #line 13 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 14 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 if(Target == null || Target == "TcpChannel") { 
            
            #line default
            #line hidden
            this.Write(" ");
            this.Write(@"spike.Channel = function(endPoint){

	/* Server EndPoint url. */
	this.endPoint = endPoint;

	/* Receive buffer */
	this.buffer = new spike.ByteArray([]);

	/* Partial record flag */
	this._partialRecord = false;

	/* 'Socket' object to use for all communication*/
	this.socket = eio.Socket(this.endPoint);
	this.socket._channel = this;

	/* Socket transport currently used */
	this.transport = """";

	/* Disconnects from the server. */
	this.disconnect = function(){
		this.socket.close();
	};

	/* Hook socket 'open' event */
	this.socket.on('open', function(){  
		this._channel.transport = this.transport;
		if (this._channel.connect != null)
			this._channel.connect();
		this._channel.emit('connect');
	});

	/* Hook socket 'close' event */
	this.socket.on('close', function(){  
		this._channel.transport = null;
		if (this._channel.disconnect != null)
			this._channel.disconnect();
		this._channel.emit('disconnect');
	});

	/* Event: invoked when the socket is connected. */
	this.connect = null;

	/* Event: invoked when the socket is disconnected. */
	this.disconnect = null;

");
            
            #line 46 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 foreach(var receive in Model.Receives){ 
            
            #line default
            #line hidden
            this.Write("\t/* Event: invoked when the ");
            
            #line 47 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name));
            
            #line default
            #line hidden
            this.Write(" inform is received from the server. */\r\n\tthis.");
            
            #line 48 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = null; \r\n\r\n");
            
            #line 50 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t    \r\n\t// Send Methods    \r\n");
            
            #line 53 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 foreach(var send in Model.Sends) { 
            
            #line default
            #line hidden
            this.Write("\t/* Sends a ");
            
            #line 54 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Name));
            
            #line default
            #line hidden
            this.Write(" request to the remote server. */\t\r\n\tthis.");
            
            #line 55 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = function(");
            
            #line 55 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
	
			var first = true;
			foreach(var member in send.Members){
				if(!first) Write(", ");
				Write(member.Name.CamelCase());
				first = false;
			}
		
            
            #line default
            #line hidden
            this.Write("){\r\n\t\t\r\n\t\tvar writer = new spike.PacketWriter();\r\n");
            
            #line 65 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
		foreach(var member in send.Members) { 
            
            #line default
            #line hidden
            this.Write("\t\twriter.write");
            
            #line 66 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 66 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 66 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 67 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\t");
            
            #line 69 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Compressed ? "writer.compress();" : ""));
            
            #line default
            #line hidden
            this.Write("\r\n\t\tthis.send(\"");
            
            #line 70 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(send.Id.ToString("X")));
            
            #line default
            #line hidden
            this.Write("\", writer);\r\n\t}\r\n\r\n");
            
            #line 73 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t// Dispatcher\r\n\tthis.onReceive = function(key, reader){\r\n\t\tswitch (key){\r\n");
            
            #line 78 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
			foreach(var receive in Model.Receives){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n\t\t\t// ");
            
            #line 80 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name));
            
            #line default
            #line hidden
            this.Write(" \t\r\n\t\t\tcase \"");
            
            #line 81 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Id.ToString("X")));
            
            #line default
            #line hidden
            this.Write("\": {\r\n\t\t\t\t");
            
            #line 82 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Compressed ? "reader.decompress();" : ""));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\tvar packet = new Object();\r\n");
            
            #line 84 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
				foreach(var member in receive.Members){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tpacket.");
            
            #line 85 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" = reader.read");
            
            #line 85 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.IsList ? "ArrayOf" : string.Empty));
            
            #line default
            #line hidden
            
            #line 85 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(member.Type));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 86 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
				} 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\tif (this.");
            
            #line 88 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n\t\t\t\t\tthis.");
            
            #line 89 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write("(packet, this);\r\n\t\t\t\tthis.emit(\'");
            
            #line 90 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.CamelCase()));
            
            #line default
            #line hidden
            this.Write("\', packet);\r\n\t\t\t\tthis.emit(\'");
            
            #line 91 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
            this.Write(this.ToStringHelper.ToStringWithCulture(receive.Name.WithoutInform().CamelCase()));
            
            #line default
            #line hidden
            this.Write("\', packet);\r\n\r\n\t\t\t} break;\r\n\r\n");
            
            #line 95 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\TcpChannel.t4"
				} 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tdefault: throw new Error(\"Received an unknown packet with \'\" + key + \"\' key." +
                    "\");\r\n\t\t}\r\n\t}\r\n\r\n\t/* Sends the data to the remote endpoint */\r\n\tthis.send = funct" +
                    "ion(operationKey, writer) {\r\n\t\tif(typeof operationKey === \'undefined\' )\r\n\t\t\tthro" +
                    "w new Error(\"Attempting to send without specifying the operation.\")\r\n\t\tif(typeof" +
                    " writer === \'undefined\')\r\n\t\t\tthrow new Error(\"Attempting to send an undefined bu" +
                    "ffer.\")\r\n\r\n\t\t// Initialize size variables\r\n\t\tvar sizeOfKey = 4;\r\n\t\tvar sizeOfLen" +
                    " = 4;\r\n\t\tvar sizeTotal = 8;\r\n\r\n\t\t// Writes the length of the packet, the operati" +
                    "on and the data\r\n\t\tvar length   = writer == null ? 0 : writer.buffer.data.length" +
                    ";\r\n\t\tvar compiled = new spike.PacketWriter();\r\n\r\n\t\t// Write the length of the pa" +
                    "cket\r\n\t\tcompiled.writeUInt32(length + sizeOfKey);\r\n\r\n\t\t// Write the key of the p" +
                    "acket\r\n\t\tcompiled.writeKey(operationKey);\r\n\t\r\n\t\t// Write the body\r\n\t\tif(length >" +
                    " 0){\r\n\t\t\tcompiled.buffer.writeBytes(writer.buffer.data);\r\n\t\t}\r\n\r\n\t\t// Send the p" +
                    "ayload in base64\r\n\t\tthis.socket.send(compiled.buffer.toBase64() );\r\n\t\t//this.soc" +
                    "ket.send(compiled.buffer.data);\r\n\t};\r\n\r\n\t/* Invoked when the socked receives inc" +
                    "oming data */\r\n\tthis.socket.on(\'message\', function(payload) {\r\n\r\n\t\t// Initialize" +
                    " size variables\r\n\t\tvar sizeOfKey = 4;\r\n\t\tvar sizeOfLen = 4;\r\n\t\tvar sizeTotal = 8" +
                    ";\r\n\r\n\t\tvar data = new spike.ByteArray([]);\r\n\t\tvar channel = this._channel;\r\n\t\tif" +
                    " (channel._partialRecord)\r\n\t\t{\r\n\t\t\tchannel.buffer.readBytesTo(data, socket.buffe" +
                    "r.getSize());\r\n\t\t\tchannel._partialRecord = false;\r\n\t\t}\t\t\t\r\n\r\n\t\t// Read received " +
                    "data\r\n\t\tdata.writeBase64(payload);\r\n\r\n\t\t// While we have data to read\r\n\t\twhile(d" +
                    "ata.position < data.getSize())\r\n\t\t{\r\n\t\t\tif(data.getSize() - data.position < size" +
                    "OfLen)\r\n\t\t\t{\r\n\t\t\t\t// Read the partial packet \r\n\t\t\t\tchannel.buffer = new spike.By" +
                    "teArray([]);\r\n\t\t\t\tdata.readBytesTo(socket.buffer, data.getSize() - data.position" +
                    ");\r\n\t\t\t\tchannel._partialRecord = true;\r\n\t\t\t\tbreak;\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tvar Length = " +
                    "data.readInt(32, false) + sizeOfLen;\r\n\t\t\tdata.position -= sizeOfLen;\r\n\t\t\t\r\n\t\t   " +
                    " // If we have enough data to form a full packet.\r\n\t\t    if(Length <= (data.getS" +
                    "ize() - data.position))\r\n\t\t    {\r\n\t\t\t\t// Read the operation and read the actual " +
                    "message into a new buffer\r\n\t\t\t\tvar messageLength = data.readInt(32, false); // U" +
                    "NUSED\r\n\t\t\t\tvar operation = \"\";\r\n\t\t\t\tfor (var i=0; i < sizeOfKey; i++)\r\n\t\t\t\t{\r\n\t\t" +
                    "\t\t\tvar byte = data.readInt(8, false);\r\n\t\t\t\t\tvar sbyte = byte.toString(16);\r\n\t\t\t\t" +
                    "\tif(sbyte.length == 1)\r\n\t\t\t\t\t\tsbyte = \"0\" + sbyte;\r\n\t\t\t\t\toperation += sbyte;\r\n\t\t" +
                    "\t\t}\r\n\t\t\t\toperation = operation.toUpperCase();\r\n\r\n\t\t\t\t// New buffer for the packe" +
                    "t\r\n\t\t\t\tvar packet = new spike.ByteArray([]);\r\n\t\t\t\tdata.readBytesTo(packet, Lengt" +
                    "h - sizeTotal);\r\n\t\t\t\tpacket.position = 0;\r\n\t\t\r\n\t\t\t\t// Create the reader and fire" +
                    " the event\r\n\t\t\t\tvar reader = new spike.PacketReader(packet);\r\n\t\t\t\tchannel.onRece" +
                    "ive(operation, reader);\r\n\t\r\n\t\t    }\r\n\t\t    else \r\n\t\t    {\r\n\t\t     \t// Read the p" +
                    "artial packet\r\n\t\t\t\tchannel.buffer = new spike.ByteArray([]);\r\n\t\t\t\tdata.readBytes" +
                    "To(socket.buffer, data.getSize() - data.position);\r\n\t\t\t\tchannel._partialRecord =" +
                    " true;\r\n\t\t    }\r\n\t\t\r\n\t\t}\r\n\t});\r\n\r\n}\r\n\r\n\r\n/* Mix in \'Emitter\' */\r\nspike.Emitter(s" +
                    "pike.Channel.prototype);\r\n\r\n/* Backwards compatibility and alias*/\r\nspike.Server" +
                    "Channel = spike.Channel;\r\nspike.TcpChannel = spike.Channel;");
            this.Write(" ");
            
            #line 14 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 16 "C:\Workspace\Spike.Build\Spike.Build.JavaScript\JavaScriptTemplate.tt"
 public void Clear(){
	GenerationEnvironment.Clear();
} 
        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class JavaScriptTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
